{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Table, Row, Rows } from 'react-native-table-component';\nimport { MongoClient } from 'mongodb';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar uri = \"mongodb+srv://qjchermitano:MCRfiSlGXmZiOKkF@cluster0.ms4cnn3.mongodb.net/\";\nvar client = new MongoClient(uri);\nvar TableExample = function TableExample() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          yield client.connect();\n          var database = client.db('Watermelon');\n          var collection = database.collection('Watermelon');\n          var query = {};\n          var cursor = collection.find(query);\n          var result = yield cursor.toArray();\n          setData(result);\n        } catch (e) {\n          console.error(e);\n        } finally {\n          yield client.close();\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  return _jsx(View, {\n    children: _jsx(ScrollView, {\n      style: styles.container,\n      children: _jsxs(Table, {\n        borderStyle: {\n          borderWidth: 1,\n          borderColor: '#00b36b'\n        },\n        children: [_jsx(Row, {\n          data: ['Count', 'Variety', 'Ripeness', 'Date', 'Time'],\n          style: {\n            height: 50,\n            backgroundColor: '#00ff99'\n          },\n          textStyle: {\n            margin: 45\n          }\n        }), data.map(function (doc, index) {\n          return _jsx(Row, {\n            data: [index + 1, doc.variety, doc.ripeness, doc.date, doc.time],\n            textStyle: {\n              margin: 10\n            }\n          }, index);\n        })]\n      })\n    })\n  });\n};\nexport default TableExample;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ccffeb',\n    borderColor: '#00b36b',\n    borderWidth: 2,\n    marginBottom: 100\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","ScrollView","StyleSheet","Table","Row","Rows","MongoClient","jsx","_jsx","jsxs","_jsxs","uri","client","TableExample","_useState","_useState2","_slicedToArray","data","setData","fetchData","_ref","_asyncToGenerator","connect","database","db","collection","query","cursor","find","result","toArray","e","console","error","close","apply","arguments","children","style","styles","container","borderStyle","borderWidth","borderColor","height","backgroundColor","textStyle","margin","map","doc","index","variety","ripeness","date","time","create","flex","marginBottom"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/datatable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, ScrollView, StyleSheet } from 'react-native';\r\nimport { Table, Row, Rows } from 'react-native-table-component';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst uri = \"mongodb+srv://qjchermitano:MCRfiSlGXmZiOKkF@cluster0.ms4cnn3.mongodb.net/\";\r\nconst client = new MongoClient(uri);\r\n\r\nconst TableExample = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await client.connect();\r\n\r\n        const database = client.db('Watermelon');\r\n        const collection = database.collection('Watermelon');\r\n\r\n        const query = {}; // replace with your query\r\n        const cursor = collection.find(query);\r\n        const result = await cursor.toArray();\r\n\r\n        setData(result);\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        await client.close();\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <ScrollView style={styles.container}>\r\n        <Table borderStyle={{ borderWidth: 1, borderColor: '#00b36b' }}>\r\n          <Row\r\n            data={['Count', 'Variety', 'Ripeness', 'Date', 'Time']}\r\n            style={{ height: 50, backgroundColor: '#00ff99' }}\r\n            textStyle={{ margin: 45 }}\r\n          />\r\n          {data.map((doc, index) => (\r\n            <Row\r\n              key={index}\r\n              data={[index + 1, doc.variety, doc.ripeness, doc.date, doc.time]}\r\n              textStyle={{ margin: 10 }}\r\n            />\r\n          ))}\r\n        </Table>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TableExample;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ccffeb',\r\n    borderColor: '#00b36b',\r\n    borderWidth: 2,\r\n    marginBottom: 100,\r\n  },\r\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,KAAK,EAAEC,GAAG,EAAEC,IAAI,QAAQ,8BAA8B;AAC/D,SAASC,WAAW,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,GAAG,GAAG,2EAA2E;AACvF,IAAMC,MAAM,GAAG,IAAIN,WAAW,CAACK,GAAG,CAAC;AAEnC,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBjB,SAAS,CAAC,YAAM;IACd,IAAMqB,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UACF,MAAMT,MAAM,CAACU,OAAO,CAAC,CAAC;UAEtB,IAAMC,QAAQ,GAAGX,MAAM,CAACY,EAAE,CAAC,YAAY,CAAC;UACxC,IAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAU,CAAC,YAAY,CAAC;UAEpD,IAAMC,KAAK,GAAG,CAAC,CAAC;UAChB,IAAMC,MAAM,GAAGF,UAAU,CAACG,IAAI,CAACF,KAAK,CAAC;UACrC,IAAMG,MAAM,SAASF,MAAM,CAACG,OAAO,CAAC,CAAC;UAErCZ,OAAO,CAACW,MAAM,CAAC;QACjB,CAAC,CAAC,OAAOE,CAAC,EAAE;UACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QAClB,CAAC,SAAS;UACR,MAAMnB,MAAM,CAACsB,KAAK,CAAC,CAAC;QACtB;MACF,CAAC;MAAA,gBAjBKf,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;IAAA,GAiBd;IAEDjB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OACEX,IAAA,CAACR,IAAI;IAAAqC,QAAA,EACH7B,IAAA,CAACP,UAAU;MAACqC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,EAClC3B,KAAA,CAACP,KAAK;QAACsC,WAAW,EAAE;UAAEC,WAAW,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAU,CAAE;QAAAN,QAAA,GAC7D7B,IAAA,CAACJ,GAAG;UACFa,IAAI,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAE;UACvDqB,KAAK,EAAE;YAAEM,MAAM,EAAE,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAClDC,SAAS,EAAE;YAAEC,MAAM,EAAE;UAAG;QAAE,CAC3B,CAAC,EACD9B,IAAI,CAAC+B,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;UAAA,OACnB1C,IAAA,CAACJ,GAAG;YAEFa,IAAI,EAAE,CAACiC,KAAK,GAAG,CAAC,EAAED,GAAG,CAACE,OAAO,EAAEF,GAAG,CAACG,QAAQ,EAAEH,GAAG,CAACI,IAAI,EAAEJ,GAAG,CAACK,IAAI,CAAE;YACjER,SAAS,EAAE;cAAEC,MAAM,EAAE;YAAG;UAAE,GAFrBG,KAGN,CAAC;QAAA,CACH,CAAC;MAAA,CACG;IAAC,CACE;EAAC,CACT,CAAC;AAEX,CAAC;AAED,eAAerC,YAAY;AAE3B,IAAM0B,MAAM,GAAGrC,UAAU,CAACqD,MAAM,CAAC;EAC/Bf,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPX,eAAe,EAAE,SAAS;IAC1BF,WAAW,EAAE,SAAS;IACtBD,WAAW,EAAE,CAAC;IACde,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
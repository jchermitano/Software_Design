{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport AndroidAction, { fromNativeAndroidAction } from \"./AndroidAction\";\nimport { BadgeIconType, Category, GroupAlert, Priority } from \"./types\";\nvar AndroidNotification = function () {\n  function AndroidNotification(notification, data) {\n    _classCallCheck(this, AndroidNotification);\n    this._notification = notification;\n    if (data) {\n      this._actions = data.actions ? data.actions.map(function (action) {\n        return fromNativeAndroidAction(action);\n      }) : [];\n      this._autoCancel = data.autoCancel;\n      this._badgeIconType = data.badgeIconType;\n      this._bigPicture = data.bigPicture;\n      this._bigText = data.bigText;\n      this._category = data.category;\n      this._channelId = data.channelId;\n      this._clickAction = data.clickAction;\n      this._color = data.color;\n      this._colorized = data.colorized;\n      this._contentInfo = data.contentInfo;\n      this._defaults = data.defaults;\n      this._group = data.group;\n      this._groupAlertBehaviour = data.groupAlertBehaviour;\n      this._groupSummary = data.groupSummary;\n      this._largeIcon = data.largeIcon;\n      this._lights = data.lights;\n      this._localOnly = data.localOnly;\n      this._number = data.number;\n      this._ongoing = data.ongoing;\n      this._onlyAlertOnce = data.onlyAlertOnce;\n      this._people = data.people;\n      this._priority = data.priority;\n      this._progress = data.progress;\n      this._remoteInputHistory = data.remoteInputHistory;\n      this._shortcutId = data.shortcutId;\n      this._showWhen = data.showWhen;\n      this._smallIcon = data.smallIcon;\n      this._sortKey = data.sortKey;\n      this._tag = data.tag;\n      this._ticker = data.ticker;\n      this._timeoutAfter = data.timeoutAfter;\n      this._usesChronometer = data.usesChronometer;\n      this._vibrate = data.vibrate;\n      this._visibility = data.visibility;\n      this._when = data.when;\n    }\n    this._actions = this._actions || [];\n    this._people = this._people || [];\n    this._smallIcon = this._smallIcon || {\n      icon: 'ic_launcher'\n    };\n  }\n  return _createClass(AndroidNotification, [{\n    key: \"actions\",\n    get: function get() {\n      return this._actions;\n    }\n  }, {\n    key: \"autoCancel\",\n    get: function get() {\n      return this._autoCancel;\n    }\n  }, {\n    key: \"badgeIconType\",\n    get: function get() {\n      return this._badgeIconType;\n    }\n  }, {\n    key: \"bigPicture\",\n    get: function get() {\n      return this._bigPicture;\n    }\n  }, {\n    key: \"bigText\",\n    get: function get() {\n      return this._bigText;\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return this._category;\n    }\n  }, {\n    key: \"channelId\",\n    get: function get() {\n      return this._channelId;\n    }\n  }, {\n    key: \"clickAction\",\n    get: function get() {\n      return this._clickAction;\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      return this._color;\n    }\n  }, {\n    key: \"colorized\",\n    get: function get() {\n      return this._colorized;\n    }\n  }, {\n    key: \"contentInfo\",\n    get: function get() {\n      return this._contentInfo;\n    }\n  }, {\n    key: \"defaults\",\n    get: function get() {\n      return this._defaults;\n    }\n  }, {\n    key: \"group\",\n    get: function get() {\n      return this._group;\n    }\n  }, {\n    key: \"groupAlertBehaviour\",\n    get: function get() {\n      return this._groupAlertBehaviour;\n    }\n  }, {\n    key: \"groupSummary\",\n    get: function get() {\n      return this._groupSummary;\n    }\n  }, {\n    key: \"largeIcon\",\n    get: function get() {\n      return this._largeIcon;\n    }\n  }, {\n    key: \"lights\",\n    get: function get() {\n      return this._lights;\n    }\n  }, {\n    key: \"localOnly\",\n    get: function get() {\n      return this._localOnly;\n    }\n  }, {\n    key: \"number\",\n    get: function get() {\n      return this._number;\n    }\n  }, {\n    key: \"ongoing\",\n    get: function get() {\n      return this._ongoing;\n    }\n  }, {\n    key: \"onlyAlertOnce\",\n    get: function get() {\n      return this._onlyAlertOnce;\n    }\n  }, {\n    key: \"people\",\n    get: function get() {\n      return this._people;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this._priority;\n    }\n  }, {\n    key: \"progress\",\n    get: function get() {\n      return this._progress;\n    }\n  }, {\n    key: \"remoteInputHistory\",\n    get: function get() {\n      return this._remoteInputHistory;\n    }\n  }, {\n    key: \"shortcutId\",\n    get: function get() {\n      return this._shortcutId;\n    }\n  }, {\n    key: \"showWhen\",\n    get: function get() {\n      return this._showWhen;\n    }\n  }, {\n    key: \"smallIcon\",\n    get: function get() {\n      return this._smallIcon;\n    }\n  }, {\n    key: \"sortKey\",\n    get: function get() {\n      return this._sortKey;\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      return this._tag;\n    }\n  }, {\n    key: \"ticker\",\n    get: function get() {\n      return this._ticker;\n    }\n  }, {\n    key: \"timeoutAfter\",\n    get: function get() {\n      return this._timeoutAfter;\n    }\n  }, {\n    key: \"usesChronometer\",\n    get: function get() {\n      return this._usesChronometer;\n    }\n  }, {\n    key: \"vibrate\",\n    get: function get() {\n      return this._vibrate;\n    }\n  }, {\n    key: \"visibility\",\n    get: function get() {\n      return this._visibility;\n    }\n  }, {\n    key: \"when\",\n    get: function get() {\n      return this._when;\n    }\n  }, {\n    key: \"addAction\",\n    value: function addAction(action) {\n      if (!(action instanceof AndroidAction)) {\n        throw new Error(`AndroidNotification:addAction expects an 'AndroidAction' but got type ${typeof action}`);\n      }\n      this._actions.push(action);\n      return this._notification;\n    }\n  }, {\n    key: \"addPerson\",\n    value: function addPerson(person) {\n      this._people.push(person);\n      return this._notification;\n    }\n  }, {\n    key: \"setAutoCancel\",\n    value: function setAutoCancel(autoCancel) {\n      this._autoCancel = autoCancel;\n      return this._notification;\n    }\n  }, {\n    key: \"setBadgeIconType\",\n    value: function setBadgeIconType(badgeIconType) {\n      if (!Object.values(BadgeIconType).includes(badgeIconType)) {\n        throw new Error(`AndroidNotification:setBadgeIconType Invalid BadgeIconType: ${badgeIconType}`);\n      }\n      this._badgeIconType = badgeIconType;\n      return this._notification;\n    }\n  }, {\n    key: \"setBigPicture\",\n    value: function setBigPicture(picture, largeIcon, contentTitle, summaryText) {\n      this._bigPicture = {\n        contentTitle: contentTitle,\n        largeIcon: largeIcon,\n        picture: picture,\n        summaryText: summaryText\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setBigText\",\n    value: function setBigText(text, contentTitle, summaryText) {\n      this._bigText = {\n        contentTitle: contentTitle,\n        summaryText: summaryText,\n        text: text\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setCategory\",\n    value: function setCategory(category) {\n      if (!Object.values(Category).includes(category)) {\n        throw new Error(`AndroidNotification:setCategory Invalid Category: ${category}`);\n      }\n      this._category = category;\n      return this._notification;\n    }\n  }, {\n    key: \"setChannelId\",\n    value: function setChannelId(channelId) {\n      this._channelId = channelId;\n      return this._notification;\n    }\n  }, {\n    key: \"setClickAction\",\n    value: function setClickAction(clickAction) {\n      this._clickAction = clickAction;\n      return this._notification;\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      this._color = color;\n      return this._notification;\n    }\n  }, {\n    key: \"setColorized\",\n    value: function setColorized(colorized) {\n      this._colorized = colorized;\n      return this._notification;\n    }\n  }, {\n    key: \"setContentInfo\",\n    value: function setContentInfo(contentInfo) {\n      this._contentInfo = contentInfo;\n      return this._notification;\n    }\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(defaults) {\n      this._defaults = defaults;\n      return this._notification;\n    }\n  }, {\n    key: \"setGroup\",\n    value: function setGroup(group) {\n      this._group = group;\n      return this._notification;\n    }\n  }, {\n    key: \"setGroupAlertBehaviour\",\n    value: function setGroupAlertBehaviour(groupAlertBehaviour) {\n      if (!Object.values(GroupAlert).includes(groupAlertBehaviour)) {\n        throw new Error(`AndroidNotification:setGroupAlertBehaviour Invalid GroupAlert: ${groupAlertBehaviour}`);\n      }\n      this._groupAlertBehaviour = groupAlertBehaviour;\n      return this._notification;\n    }\n  }, {\n    key: \"setGroupSummary\",\n    value: function setGroupSummary(groupSummary) {\n      this._groupSummary = groupSummary;\n      return this._notification;\n    }\n  }, {\n    key: \"setLargeIcon\",\n    value: function setLargeIcon(largeIcon) {\n      this._largeIcon = largeIcon;\n      return this._notification;\n    }\n  }, {\n    key: \"setLights\",\n    value: function setLights(argb, onMs, offMs) {\n      this._lights = {\n        argb: argb,\n        onMs: onMs,\n        offMs: offMs\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setLocalOnly\",\n    value: function setLocalOnly(localOnly) {\n      this._localOnly = localOnly;\n      return this._notification;\n    }\n  }, {\n    key: \"setNumber\",\n    value: function setNumber(number) {\n      this._number = number;\n      return this._notification;\n    }\n  }, {\n    key: \"setOngoing\",\n    value: function setOngoing(ongoing) {\n      this._ongoing = ongoing;\n      return this._notification;\n    }\n  }, {\n    key: \"setOnlyAlertOnce\",\n    value: function setOnlyAlertOnce(onlyAlertOnce) {\n      this._onlyAlertOnce = onlyAlertOnce;\n      return this._notification;\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority) {\n      if (!Object.values(Priority).includes(priority)) {\n        throw new Error(`AndroidNotification:setPriority Invalid Priority: ${priority}`);\n      }\n      this._priority = priority;\n      return this._notification;\n    }\n  }, {\n    key: \"setProgress\",\n    value: function setProgress(max, progress, indeterminate) {\n      this._progress = {\n        max: max,\n        progress: progress,\n        indeterminate: indeterminate\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setRemoteInputHistory\",\n    value: function setRemoteInputHistory(remoteInputHistory) {\n      this._remoteInputHistory = remoteInputHistory;\n      return this._notification;\n    }\n  }, {\n    key: \"setShortcutId\",\n    value: function setShortcutId(shortcutId) {\n      this._shortcutId = shortcutId;\n      return this._notification;\n    }\n  }, {\n    key: \"setShowWhen\",\n    value: function setShowWhen(showWhen) {\n      this._showWhen = showWhen;\n      return this._notification;\n    }\n  }, {\n    key: \"setSmallIcon\",\n    value: function setSmallIcon(icon, level) {\n      this._smallIcon = {\n        icon: icon,\n        level: level\n      };\n      return this._notification;\n    }\n  }, {\n    key: \"setSortKey\",\n    value: function setSortKey(sortKey) {\n      this._sortKey = sortKey;\n      return this._notification;\n    }\n  }, {\n    key: \"setTag\",\n    value: function setTag(tag) {\n      this._tag = tag;\n      return this._notification;\n    }\n  }, {\n    key: \"setTicker\",\n    value: function setTicker(ticker) {\n      this._ticker = ticker;\n      return this._notification;\n    }\n  }, {\n    key: \"setTimeoutAfter\",\n    value: function setTimeoutAfter(timeoutAfter) {\n      this._timeoutAfter = timeoutAfter;\n      return this._notification;\n    }\n  }, {\n    key: \"setUsesChronometer\",\n    value: function setUsesChronometer(usesChronometer) {\n      this._usesChronometer = usesChronometer;\n      return this._notification;\n    }\n  }, {\n    key: \"setVibrate\",\n    value: function setVibrate(vibrate) {\n      this._vibrate = vibrate;\n      return this._notification;\n    }\n  }, {\n    key: \"setVisibility\",\n    value: function setVisibility(visibility) {\n      this._visibility = visibility;\n      return this._notification;\n    }\n  }, {\n    key: \"setWhen\",\n    value: function setWhen(when) {\n      this._when = when;\n      return this._notification;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this._channelId) {\n        throw new Error('AndroidNotification: Missing required `channelId` property');\n      } else if (!this._smallIcon) {\n        throw new Error('AndroidNotification: Missing required `smallIcon` property');\n      }\n      return {\n        actions: this._actions.map(function (action) {\n          return action.build();\n        }),\n        autoCancel: this._autoCancel,\n        badgeIconType: this._badgeIconType,\n        bigPicture: this._bigPicture,\n        bigText: this._bigText,\n        category: this._category,\n        channelId: this._channelId,\n        clickAction: this._clickAction,\n        color: this._color,\n        colorized: this._colorized,\n        contentInfo: this._contentInfo,\n        defaults: this._defaults,\n        group: this._group,\n        groupAlertBehaviour: this._groupAlertBehaviour,\n        groupSummary: this._groupSummary,\n        largeIcon: this._largeIcon,\n        lights: this._lights,\n        localOnly: this._localOnly,\n        number: this._number,\n        ongoing: this._ongoing,\n        onlyAlertOnce: this._onlyAlertOnce,\n        people: this._people,\n        priority: this._priority,\n        progress: this._progress,\n        remoteInputHistory: this._remoteInputHistory,\n        shortcutId: this._shortcutId,\n        showWhen: this._showWhen,\n        smallIcon: this._smallIcon,\n        sortKey: this._sortKey,\n        tag: this._tag,\n        ticker: this._ticker,\n        timeoutAfter: this._timeoutAfter,\n        usesChronometer: this._usesChronometer,\n        vibrate: this._vibrate,\n        visibility: this._visibility,\n        when: this._when\n      };\n    }\n  }]);\n}();\nexport { AndroidNotification as default };","map":{"version":3,"names":["AndroidAction","fromNativeAndroidAction","BadgeIconType","Category","GroupAlert","Priority","AndroidNotification","notification","data","_classCallCheck","_notification","_actions","actions","map","action","_autoCancel","autoCancel","_badgeIconType","badgeIconType","_bigPicture","bigPicture","_bigText","bigText","_category","category","_channelId","channelId","_clickAction","clickAction","_color","color","_colorized","colorized","_contentInfo","contentInfo","_defaults","defaults","_group","group","_groupAlertBehaviour","groupAlertBehaviour","_groupSummary","groupSummary","_largeIcon","largeIcon","_lights","lights","_localOnly","localOnly","_number","number","_ongoing","ongoing","_onlyAlertOnce","onlyAlertOnce","_people","people","_priority","priority","_progress","progress","_remoteInputHistory","remoteInputHistory","_shortcutId","shortcutId","_showWhen","showWhen","_smallIcon","smallIcon","_sortKey","sortKey","_tag","tag","_ticker","ticker","_timeoutAfter","timeoutAfter","_usesChronometer","usesChronometer","_vibrate","vibrate","_visibility","visibility","_when","when","icon","_createClass","key","get","value","addAction","Error","push","addPerson","person","setAutoCancel","setBadgeIconType","Object","values","includes","setBigPicture","picture","contentTitle","summaryText","setBigText","text","setCategory","setChannelId","setClickAction","setColor","setColorized","setContentInfo","setDefaults","setGroup","setGroupAlertBehaviour","setGroupSummary","setLargeIcon","setLights","argb","onMs","offMs","setLocalOnly","setNumber","setOngoing","setOnlyAlertOnce","setPriority","setProgress","max","indeterminate","setRemoteInputHistory","setShortcutId","setShowWhen","setSmallIcon","level","setSortKey","setTag","setTicker","setTimeoutAfter","setUsesChronometer","setVibrate","setVisibility","setWhen","build","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/notifications/AndroidNotification.js"],"sourcesContent":["/**\n * \n * AndroidNotification representation wrapper\n */\nimport AndroidAction, { fromNativeAndroidAction } from './AndroidAction';\nimport { BadgeIconType, Category, GroupAlert, Priority } from './types';\nexport default class AndroidNotification {\n  // _publicVersion: Notification;\n  // TODO: style: Style; // Need to figure out if this can work\n  // android unsupported\n  // content: RemoteViews\n  // contentIntent: PendingIntent - need to look at what this is\n  // customBigContentView: RemoteViews\n  // customContentView: RemoteViews\n  // customHeadsUpContentView: RemoteViews\n  // deleteIntent: PendingIntent\n  // fullScreenIntent: PendingIntent\n  // sound.streamType\n  constructor(notification, data) {\n    this._notification = notification;\n\n    if (data) {\n      this._actions = data.actions ? data.actions.map(action => fromNativeAndroidAction(action)) : [];\n      this._autoCancel = data.autoCancel;\n      this._badgeIconType = data.badgeIconType;\n      this._bigPicture = data.bigPicture;\n      this._bigText = data.bigText;\n      this._category = data.category;\n      this._channelId = data.channelId;\n      this._clickAction = data.clickAction;\n      this._color = data.color;\n      this._colorized = data.colorized;\n      this._contentInfo = data.contentInfo;\n      this._defaults = data.defaults;\n      this._group = data.group;\n      this._groupAlertBehaviour = data.groupAlertBehaviour;\n      this._groupSummary = data.groupSummary;\n      this._largeIcon = data.largeIcon;\n      this._lights = data.lights;\n      this._localOnly = data.localOnly;\n      this._number = data.number;\n      this._ongoing = data.ongoing;\n      this._onlyAlertOnce = data.onlyAlertOnce;\n      this._people = data.people;\n      this._priority = data.priority;\n      this._progress = data.progress; // _publicVersion: Notification;\n\n      this._remoteInputHistory = data.remoteInputHistory;\n      this._shortcutId = data.shortcutId;\n      this._showWhen = data.showWhen;\n      this._smallIcon = data.smallIcon;\n      this._sortKey = data.sortKey;\n      this._tag = data.tag;\n      this._ticker = data.ticker;\n      this._timeoutAfter = data.timeoutAfter;\n      this._usesChronometer = data.usesChronometer;\n      this._vibrate = data.vibrate;\n      this._visibility = data.visibility;\n      this._when = data.when;\n    } // Defaults\n\n\n    this._actions = this._actions || [];\n    this._people = this._people || [];\n    this._smallIcon = this._smallIcon || {\n      icon: 'ic_launcher'\n    };\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  get autoCancel() {\n    return this._autoCancel;\n  }\n\n  get badgeIconType() {\n    return this._badgeIconType;\n  }\n\n  get bigPicture() {\n    return this._bigPicture;\n  }\n\n  get bigText() {\n    return this._bigText;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get channelId() {\n    return this._channelId;\n  }\n\n  get clickAction() {\n    return this._clickAction;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  get colorized() {\n    return this._colorized;\n  }\n\n  get contentInfo() {\n    return this._contentInfo;\n  }\n\n  get defaults() {\n    return this._defaults;\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  get groupAlertBehaviour() {\n    return this._groupAlertBehaviour;\n  }\n\n  get groupSummary() {\n    return this._groupSummary;\n  }\n\n  get largeIcon() {\n    return this._largeIcon;\n  }\n\n  get lights() {\n    return this._lights;\n  }\n\n  get localOnly() {\n    return this._localOnly;\n  }\n\n  get number() {\n    return this._number;\n  }\n\n  get ongoing() {\n    return this._ongoing;\n  }\n\n  get onlyAlertOnce() {\n    return this._onlyAlertOnce;\n  }\n\n  get people() {\n    return this._people;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  get progress() {\n    return this._progress;\n  }\n\n  get remoteInputHistory() {\n    return this._remoteInputHistory;\n  }\n\n  get shortcutId() {\n    return this._shortcutId;\n  }\n\n  get showWhen() {\n    return this._showWhen;\n  }\n\n  get smallIcon() {\n    return this._smallIcon;\n  }\n\n  get sortKey() {\n    return this._sortKey;\n  }\n\n  get tag() {\n    return this._tag;\n  }\n\n  get ticker() {\n    return this._ticker;\n  }\n\n  get timeoutAfter() {\n    return this._timeoutAfter;\n  }\n\n  get usesChronometer() {\n    return this._usesChronometer;\n  }\n\n  get vibrate() {\n    return this._vibrate;\n  }\n\n  get visibility() {\n    return this._visibility;\n  }\n\n  get when() {\n    return this._when;\n  }\n  /**\n   *\n   * @param action\n   * @returns {Notification}\n   */\n\n\n  addAction(action) {\n    if (!(action instanceof AndroidAction)) {\n      throw new Error(`AndroidNotification:addAction expects an 'AndroidAction' but got type ${typeof action}`);\n    }\n\n    this._actions.push(action);\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param person\n   * @returns {Notification}\n   */\n\n\n  addPerson(person) {\n    this._people.push(person);\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param autoCancel\n   * @returns {Notification}\n   */\n\n\n  setAutoCancel(autoCancel) {\n    this._autoCancel = autoCancel;\n    return this._notification;\n  }\n  /**\n   *\n   * @param badgeIconType\n   * @returns {Notification}\n   */\n\n\n  setBadgeIconType(badgeIconType) {\n    if (!Object.values(BadgeIconType).includes(badgeIconType)) {\n      throw new Error(`AndroidNotification:setBadgeIconType Invalid BadgeIconType: ${badgeIconType}`);\n    }\n\n    this._badgeIconType = badgeIconType;\n    return this._notification;\n  }\n\n  setBigPicture(picture, largeIcon, contentTitle, summaryText) {\n    this._bigPicture = {\n      contentTitle,\n      largeIcon,\n      picture,\n      summaryText\n    };\n    return this._notification;\n  }\n\n  setBigText(text, contentTitle, summaryText) {\n    this._bigText = {\n      contentTitle,\n      summaryText,\n      text\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n\n\n  setCategory(category) {\n    if (!Object.values(Category).includes(category)) {\n      throw new Error(`AndroidNotification:setCategory Invalid Category: ${category}`);\n    }\n\n    this._category = category;\n    return this._notification;\n  }\n  /**\n   *\n   * @param channelId\n   * @returns {Notification}\n   */\n\n\n  setChannelId(channelId) {\n    this._channelId = channelId;\n    return this._notification;\n  }\n  /**\n   *\n   * @param clickAction\n   * @returns {Notification}\n   */\n\n\n  setClickAction(clickAction) {\n    this._clickAction = clickAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param color\n   * @returns {Notification}\n   */\n\n\n  setColor(color) {\n    this._color = color;\n    return this._notification;\n  }\n  /**\n   *\n   * @param colorized\n   * @returns {Notification}\n   */\n\n\n  setColorized(colorized) {\n    this._colorized = colorized;\n    return this._notification;\n  }\n  /**\n   *\n   * @param contentInfo\n   * @returns {Notification}\n   */\n\n\n  setContentInfo(contentInfo) {\n    this._contentInfo = contentInfo;\n    return this._notification;\n  }\n  /**\n   *\n   * @param defaults\n   * @returns {Notification}\n   */\n\n\n  setDefaults(defaults) {\n    this._defaults = defaults;\n    return this._notification;\n  }\n  /**\n   *\n   * @param group\n   * @returns {Notification}\n   */\n\n\n  setGroup(group) {\n    this._group = group;\n    return this._notification;\n  }\n  /**\n   *\n   * @param groupAlertBehaviour\n   * @returns {Notification}\n   */\n\n\n  setGroupAlertBehaviour(groupAlertBehaviour) {\n    if (!Object.values(GroupAlert).includes(groupAlertBehaviour)) {\n      throw new Error(`AndroidNotification:setGroupAlertBehaviour Invalid GroupAlert: ${groupAlertBehaviour}`);\n    }\n\n    this._groupAlertBehaviour = groupAlertBehaviour;\n    return this._notification;\n  }\n  /**\n   *\n   * @param groupSummary\n   * @returns {Notification}\n   */\n\n\n  setGroupSummary(groupSummary) {\n    this._groupSummary = groupSummary;\n    return this._notification;\n  }\n  /**\n   *\n   * @param largeIcon\n   * @returns {Notification}\n   */\n\n\n  setLargeIcon(largeIcon) {\n    this._largeIcon = largeIcon;\n    return this._notification;\n  }\n  /**\n   *\n   * @param argb\n   * @param onMs\n   * @param offMs\n   * @returns {Notification}\n   */\n\n\n  setLights(argb, onMs, offMs) {\n    this._lights = {\n      argb,\n      onMs,\n      offMs\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param localOnly\n   * @returns {Notification}\n   */\n\n\n  setLocalOnly(localOnly) {\n    this._localOnly = localOnly;\n    return this._notification;\n  }\n  /**\n   *\n   * @param number\n   * @returns {Notification}\n   */\n\n\n  setNumber(number) {\n    this._number = number;\n    return this._notification;\n  }\n  /**\n   *\n   * @param ongoing\n   * @returns {Notification}\n   */\n\n\n  setOngoing(ongoing) {\n    this._ongoing = ongoing;\n    return this._notification;\n  }\n  /**\n   *\n   * @param onlyAlertOnce\n   * @returns {Notification}\n   */\n\n\n  setOnlyAlertOnce(onlyAlertOnce) {\n    this._onlyAlertOnce = onlyAlertOnce;\n    return this._notification;\n  }\n  /**\n   *\n   * @param priority\n   * @returns {Notification}\n   */\n\n\n  setPriority(priority) {\n    if (!Object.values(Priority).includes(priority)) {\n      throw new Error(`AndroidNotification:setPriority Invalid Priority: ${priority}`);\n    }\n\n    this._priority = priority;\n    return this._notification;\n  }\n  /**\n   *\n   * @param max\n   * @param progress\n   * @param indeterminate\n   * @returns {Notification}\n   */\n\n\n  setProgress(max, progress, indeterminate) {\n    this._progress = {\n      max,\n      progress,\n      indeterminate\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param publicVersion\n   * @returns {Notification}\n   */\n\n  /* setPublicVersion(publicVersion: Notification): Notification {\n    this._publicVersion = publicVersion;\n    return this._notification;\n  } */\n\n  /**\n   *\n   * @param remoteInputHistory\n   * @returns {Notification}\n   */\n\n\n  setRemoteInputHistory(remoteInputHistory) {\n    this._remoteInputHistory = remoteInputHistory;\n    return this._notification;\n  }\n  /**\n   *\n   * @param shortcutId\n   * @returns {Notification}\n   */\n\n\n  setShortcutId(shortcutId) {\n    this._shortcutId = shortcutId;\n    return this._notification;\n  }\n  /**\n   *\n   * @param showWhen\n   * @returns {Notification}\n   */\n\n\n  setShowWhen(showWhen) {\n    this._showWhen = showWhen;\n    return this._notification;\n  }\n  /**\n   *\n   * @param icon\n   * @param level\n   * @returns {Notification}\n   */\n\n\n  setSmallIcon(icon, level) {\n    this._smallIcon = {\n      icon,\n      level\n    };\n    return this._notification;\n  }\n  /**\n   *\n   * @param sortKey\n   * @returns {Notification}\n   */\n\n\n  setSortKey(sortKey) {\n    this._sortKey = sortKey;\n    return this._notification;\n  }\n  /**\n   *\n   * @param tag\n   * @returns {Notification}\n   */\n\n\n  setTag(tag) {\n    this._tag = tag;\n    return this._notification;\n  }\n  /**\n   *\n   * @param ticker\n   * @returns {Notification}\n   */\n\n\n  setTicker(ticker) {\n    this._ticker = ticker;\n    return this._notification;\n  }\n  /**\n   *\n   * @param timeoutAfter\n   * @returns {Notification}\n   */\n\n\n  setTimeoutAfter(timeoutAfter) {\n    this._timeoutAfter = timeoutAfter;\n    return this._notification;\n  }\n  /**\n   *\n   * @param usesChronometer\n   * @returns {Notification}\n   */\n\n\n  setUsesChronometer(usesChronometer) {\n    this._usesChronometer = usesChronometer;\n    return this._notification;\n  }\n  /**\n   *\n   * @param vibrate\n   * @returns {Notification}\n   */\n\n\n  setVibrate(vibrate) {\n    this._vibrate = vibrate;\n    return this._notification;\n  }\n  /**\n   *\n   * @param visibility\n   * @returns {Notification}\n   */\n\n\n  setVisibility(visibility) {\n    this._visibility = visibility;\n    return this._notification;\n  }\n  /**\n   *\n   * @param when\n   * @returns {Notification}\n   */\n\n\n  setWhen(when) {\n    this._when = when;\n    return this._notification;\n  }\n\n  build() {\n    // TODO: Validation of required fields\n    if (!this._channelId) {\n      throw new Error('AndroidNotification: Missing required `channelId` property');\n    } else if (!this._smallIcon) {\n      throw new Error('AndroidNotification: Missing required `smallIcon` property');\n    }\n\n    return {\n      actions: this._actions.map(action => action.build()),\n      autoCancel: this._autoCancel,\n      badgeIconType: this._badgeIconType,\n      bigPicture: this._bigPicture,\n      bigText: this._bigText,\n      category: this._category,\n      channelId: this._channelId,\n      clickAction: this._clickAction,\n      color: this._color,\n      colorized: this._colorized,\n      contentInfo: this._contentInfo,\n      defaults: this._defaults,\n      group: this._group,\n      groupAlertBehaviour: this._groupAlertBehaviour,\n      groupSummary: this._groupSummary,\n      largeIcon: this._largeIcon,\n      lights: this._lights,\n      localOnly: this._localOnly,\n      number: this._number,\n      ongoing: this._ongoing,\n      onlyAlertOnce: this._onlyAlertOnce,\n      people: this._people,\n      priority: this._priority,\n      progress: this._progress,\n      // publicVersion: this._publicVersion,\n      remoteInputHistory: this._remoteInputHistory,\n      shortcutId: this._shortcutId,\n      showWhen: this._showWhen,\n      smallIcon: this._smallIcon,\n      sortKey: this._sortKey,\n      // TODO: style: Style,\n      tag: this._tag,\n      ticker: this._ticker,\n      timeoutAfter: this._timeoutAfter,\n      usesChronometer: this._usesChronometer,\n      vibrate: this._vibrate,\n      visibility: this._visibility,\n      when: this._when\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
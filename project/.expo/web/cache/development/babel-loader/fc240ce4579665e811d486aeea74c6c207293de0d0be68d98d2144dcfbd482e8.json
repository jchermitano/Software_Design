{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport { getNativeModule } from \"../../utils/native\";\nexport var MODULE_NAME = 'RNFirebaseCrashlytics';\nexport var NAMESPACE = 'crashlytics';\nvar Crashlytics = function (_ModuleBase) {\n  function Crashlytics(app) {\n    _classCallCheck(this, Crashlytics);\n    return _callSuper(this, Crashlytics, [app, {\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    }]);\n  }\n  _inherits(Crashlytics, _ModuleBase);\n  return _createClass(Crashlytics, [{\n    key: \"crash\",\n    value: function crash() {\n      getNativeModule(this).crash();\n    }\n  }, {\n    key: \"log\",\n    value: function log(message) {\n      if (typeof message === 'string') {\n        getNativeModule(this).log(message);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"recordError\",\n    value: function recordError(code, message) {\n      if (typeof code === 'number' && typeof message === 'string') {\n        getNativeModule(this).recordError(code, message);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"recordCustomError\",\n    value: function recordCustomError(name, message, stack) {\n      if (typeof stack === 'undefined') {\n        if (typeof name === 'string' && typeof message === 'string') {\n          getNativeModule(this).recordCustomError(name, message, []);\n        } else {\n          throw new Error('Invalid parameter type!');\n        }\n      } else if (typeof name === 'string' && typeof message === 'string' && Array.isArray(stack)) {\n        var hasKey = true;\n        stack.forEach(function (v) {\n          if (!Object.prototype.hasOwnProperty.call(v, 'fileName')) {\n            hasKey = false;\n          }\n        });\n        if (hasKey) {\n          getNativeModule(this).recordCustomError(name, message, stack);\n        } else {\n          throw new Error('Missing required argument fileName!');\n        }\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setBoolValue\",\n    value: function setBoolValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'boolean') {\n        getNativeModule(this).setBoolValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setFloatValue\",\n    value: function setFloatValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'number') {\n        getNativeModule(this).setFloatValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setIntValue\",\n    value: function setIntValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'number') {\n        getNativeModule(this).setIntValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setStringValue\",\n    value: function setStringValue(key, value) {\n      if (typeof key === 'string' && typeof value === 'string') {\n        getNativeModule(this).setStringValue(key, value);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setUserIdentifier\",\n    value: function setUserIdentifier(userId) {\n      if (typeof userId === 'string') {\n        getNativeModule(this).setUserIdentifier(userId);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"setUserName\",\n    value: function setUserName(userName) {\n      if (typeof userName === 'string') {\n        return getNativeModule(this).setUserName(userName);\n      }\n      throw new Error('Invalid parameter type!');\n    }\n  }, {\n    key: \"setUserEmail\",\n    value: function setUserEmail(userEmail) {\n      if (typeof userEmail === 'string') {\n        getNativeModule(this).setUserEmail(userEmail);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    }\n  }, {\n    key: \"enableCrashlyticsCollection\",\n    value: function enableCrashlyticsCollection() {\n      getNativeModule(this).enableCrashlyticsCollection();\n    }\n  }]);\n}(ModuleBase);\nexport { Crashlytics as default };\nexport var statics = {};","map":{"version":3,"names":["ModuleBase","getNativeModule","MODULE_NAME","NAMESPACE","Crashlytics","_ModuleBase","app","_classCallCheck","_callSuper","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","_inherits","_createClass","key","value","crash","log","message","Error","recordError","code","recordCustomError","name","stack","Array","isArray","hasKey","forEach","v","Object","prototype","hasOwnProperty","call","setBoolValue","setFloatValue","setIntValue","setStringValue","setUserIdentifier","userId","setUserName","userName","setUserEmail","userEmail","enableCrashlyticsCollection","default","statics"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/crashlytics/index.js"],"sourcesContent":["/**\n * \n * Crash Reporting representation wrapper\n */\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nexport const MODULE_NAME = 'RNFirebaseCrashlytics';\nexport const NAMESPACE = 'crashlytics';\nexport default class Crashlytics extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n  }\n  /**\n   * Forces a crash. Useful for testing your application is set up correctly.\n   */\n\n\n  crash() {\n    getNativeModule(this).crash();\n  }\n  /**\n   * Logs a message that will appear in any subsequent crash reports.\n   * @param {string} message\n   */\n\n\n  log(message) {\n    if (typeof message === 'string') {\n      getNativeModule(this).log(message);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Logs a non fatal exception.\n   * @param {number} code\n   * @param {string} message\n   */\n\n\n  recordError(code, message) {\n    if (typeof code === 'number' && typeof message === 'string') {\n      getNativeModule(this).recordError(code, message);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Logs a custom non fatal exception.\n   * @param {string} name\n   * @param {string} message\n   * @param {Object[]} stack Optional\n   */\n\n\n  recordCustomError(name, message, stack) {\n    if (typeof stack === 'undefined') {\n      if (typeof name === 'string' && typeof message === 'string') {\n        getNativeModule(this).recordCustomError(name, message, []);\n      } else {\n        throw new Error('Invalid parameter type!');\n      }\n    } else if (typeof name === 'string' && typeof message === 'string' && Array.isArray(stack)) {\n      let hasKey = true;\n      stack.forEach(v => {\n        if (!Object.prototype.hasOwnProperty.call(v, 'fileName')) {\n          hasKey = false;\n        }\n      });\n\n      if (hasKey) {\n        getNativeModule(this).recordCustomError(name, message, stack);\n      } else {\n        throw new Error('Missing required argument fileName!');\n      }\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set a boolean value to show alongside any subsequent crash reports.\n   */\n\n\n  setBoolValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'boolean') {\n      getNativeModule(this).setBoolValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set a float value to show alongside any subsequent crash reports.\n   */\n\n\n  setFloatValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'number') {\n      getNativeModule(this).setFloatValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set an integer value to show alongside any subsequent crash reports.\n   */\n\n\n  setIntValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'number') {\n      getNativeModule(this).setIntValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set a string value to show alongside any subsequent crash reports.\n   */\n\n\n  setStringValue(key, value) {\n    if (typeof key === 'string' && typeof value === 'string') {\n      getNativeModule(this).setStringValue(key, value);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set the user ID to show alongside any subsequent crash reports.\n   */\n\n\n  setUserIdentifier(userId) {\n    if (typeof userId === 'string') {\n      getNativeModule(this).setUserIdentifier(userId);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Set the user name to show alongside any subsequent crash reports.\n   */\n\n\n  setUserName(userName) {\n    if (typeof userName === 'string') {\n      return getNativeModule(this).setUserName(userName);\n    }\n\n    throw new Error('Invalid parameter type!');\n  }\n  /**\n   * Set the user email to show alongside any subsequent crash reports.\n   */\n\n\n  setUserEmail(userEmail) {\n    if (typeof userEmail === 'string') {\n      getNativeModule(this).setUserEmail(userEmail);\n    } else {\n      throw new Error('Invalid parameter type!');\n    }\n  }\n  /**\n   * Enable Crashlytics reporting. Only avaliable when disabled automatic initialization\n   */\n\n\n  enableCrashlyticsCollection() {\n    getNativeModule(this).enableCrashlyticsCollection();\n  }\n\n}\nexport const statics = {};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
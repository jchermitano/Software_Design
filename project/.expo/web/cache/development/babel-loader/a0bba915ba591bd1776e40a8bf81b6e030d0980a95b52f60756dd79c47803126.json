{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { SharedEventEmitter } from \"../../utils/events\";\nimport INTERNALS from \"../../utils/internals\";\nimport { getLogger } from \"../../utils/log\";\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { isFunction, isObject } from \"../../utils\";\nimport IOSMessaging from \"./IOSMessaging\";\nimport RemoteMessage from \"./RemoteMessage\";\nvar NATIVE_EVENTS = ['messaging_message_received', 'messaging_token_refreshed'];\nexport var MODULE_NAME = 'RNFirebaseMessaging';\nexport var NAMESPACE = 'messaging';\nvar Messaging = function (_ModuleBase) {\n  function Messaging(app) {\n    var _this2;\n    _classCallCheck(this, Messaging);\n    _this2 = _callSuper(this, Messaging, [app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    }]);\n    _this2._ios = new IOSMessaging(_this2);\n    SharedEventEmitter.addListener('messaging_message_received', function (message) {\n      SharedEventEmitter.emit('onMessage', new RemoteMessage(message));\n    });\n    SharedEventEmitter.addListener('messaging_token_refreshed', function (token) {\n      SharedEventEmitter.emit('onTokenRefresh', token);\n    });\n    if (Platform.OS === 'ios') {\n      getNativeModule(_this2).jsInitialised();\n    }\n    return _this2;\n  }\n  _inherits(Messaging, _ModuleBase);\n  return _createClass(Messaging, [{\n    key: \"ios\",\n    get: function get() {\n      return this._ios;\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return getNativeModule(this).getToken();\n    }\n  }, {\n    key: \"deleteToken\",\n    value: function deleteToken() {\n      return getNativeModule(this).deleteToken();\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(nextOrObserver) {\n      var _this3 = this;\n      var listener;\n      if (isFunction(nextOrObserver)) {\n        listener = nextOrObserver;\n      } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n        listener = nextOrObserver.next;\n      } else {\n        throw new Error('Messaging.onMessage failed: First argument must be a function or observer object with a `next` function.');\n      }\n      getLogger(this).info('Creating onMessage listener');\n      SharedEventEmitter.addListener('onMessage', listener);\n      return function () {\n        getLogger(_this3).info('Removing onMessage listener');\n        SharedEventEmitter.removeListener('onMessage', listener);\n      };\n    }\n  }, {\n    key: \"onTokenRefresh\",\n    value: function onTokenRefresh(nextOrObserver) {\n      var _this4 = this;\n      var listener;\n      if (isFunction(nextOrObserver)) {\n        listener = nextOrObserver;\n      } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n        listener = nextOrObserver.next;\n      } else {\n        throw new Error('Messaging.onTokenRefresh failed: First argument must be a function or observer object with a `next` function.');\n      }\n      getLogger(this).info('Creating onTokenRefresh listener');\n      SharedEventEmitter.addListener('onTokenRefresh', listener);\n      return function () {\n        getLogger(_this4).info('Removing onTokenRefresh listener');\n        SharedEventEmitter.removeListener('onTokenRefresh', listener);\n      };\n    }\n  }, {\n    key: \"requestPermission\",\n    value: function requestPermission() {\n      return getNativeModule(this).requestPermission();\n    }\n  }, {\n    key: \"hasPermission\",\n    value: function hasPermission() {\n      return getNativeModule(this).hasPermission();\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(remoteMessage) {\n      if (!(remoteMessage instanceof RemoteMessage)) {\n        return Promise.reject(new Error(`Messaging:sendMessage expects a 'RemoteMessage' but got type ${typeof remoteMessage}`));\n      }\n      try {\n        return getNativeModule(this).sendMessage(remoteMessage.build());\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: \"subscribeToTopic\",\n    value: function subscribeToTopic(topic) {\n      return getNativeModule(this).subscribeToTopic(topic);\n    }\n  }, {\n    key: \"unsubscribeFromTopic\",\n    value: function unsubscribeFromTopic(topic) {\n      return getNativeModule(this).unsubscribeFromTopic(topic);\n    }\n  }, {\n    key: \"setBackgroundMessageHandler\",\n    value: function setBackgroundMessageHandler() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'setBackgroundMessageHandler'));\n    }\n  }, {\n    key: \"useServiceWorker\",\n    value: function useServiceWorker() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'useServiceWorker'));\n    }\n  }]);\n}(ModuleBase);\nexport { Messaging as default };\nexport var statics = {\n  RemoteMessage: RemoteMessage\n};","map":{"version":3,"names":["SharedEventEmitter","INTERNALS","getLogger","ModuleBase","getNativeModule","isFunction","isObject","IOSMessaging","RemoteMessage","NATIVE_EVENTS","MODULE_NAME","NAMESPACE","Messaging","_ModuleBase","app","_this2","_classCallCheck","_callSuper","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","_ios","addListener","message","emit","token","Platform","OS","jsInitialised","_inherits","_createClass","key","get","value","getToken","deleteToken","onMessage","nextOrObserver","_this3","listener","next","Error","info","removeListener","onTokenRefresh","_this4","requestPermission","hasPermission","sendMessage","remoteMessage","Promise","reject","build","error","subscribeToTopic","topic","unsubscribeFromTopic","setBackgroundMessageHandler","STRINGS","ERROR_UNSUPPORTED_MODULE_METHOD","useServiceWorker","default","statics"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/messaging/index.js"],"sourcesContent":["/**\n * \n * Messaging (FCM) representation wrapper\n */\nimport { Platform } from 'react-native';\nimport { SharedEventEmitter } from '../../utils/events';\nimport INTERNALS from '../../utils/internals';\nimport { getLogger } from '../../utils/log';\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nimport { isFunction, isObject } from '../../utils';\nimport IOSMessaging from './IOSMessaging';\nimport RemoteMessage from './RemoteMessage';\nconst NATIVE_EVENTS = ['messaging_message_received', 'messaging_token_refreshed'];\nexport const MODULE_NAME = 'RNFirebaseMessaging';\nexport const NAMESPACE = 'messaging';\n/**\n * @class Messaging\n */\n\nexport default class Messaging extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    this._ios = new IOSMessaging(this);\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onMessage\n    'messaging_message_received', message => {\n      SharedEventEmitter.emit('onMessage', new RemoteMessage(message));\n    });\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onMessage\n    'messaging_token_refreshed', token => {\n      SharedEventEmitter.emit('onTokenRefresh', token);\n    }); // Tell the native module that we're ready to receive events\n\n    if (Platform.OS === 'ios') {\n      getNativeModule(this).jsInitialised();\n    }\n  }\n\n  get ios() {\n    return this._ios;\n  }\n\n  getToken() {\n    return getNativeModule(this).getToken();\n  }\n\n  deleteToken() {\n    return getNativeModule(this).deleteToken();\n  }\n\n  onMessage(nextOrObserver) {\n    let listener;\n\n    if (isFunction(nextOrObserver)) {\n      // $FlowExpectedError: Not coping with the overloaded method signature\n      listener = nextOrObserver;\n    } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n      listener = nextOrObserver.next;\n    } else {\n      throw new Error('Messaging.onMessage failed: First argument must be a function or observer object with a `next` function.');\n    }\n\n    getLogger(this).info('Creating onMessage listener');\n    SharedEventEmitter.addListener('onMessage', listener);\n    return () => {\n      getLogger(this).info('Removing onMessage listener');\n      SharedEventEmitter.removeListener('onMessage', listener);\n    };\n  }\n\n  onTokenRefresh(nextOrObserver) {\n    let listener;\n\n    if (isFunction(nextOrObserver)) {\n      // $FlowExpectedError: Not coping with the overloaded method signature\n      listener = nextOrObserver;\n    } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n      listener = nextOrObserver.next;\n    } else {\n      throw new Error('Messaging.onTokenRefresh failed: First argument must be a function or observer object with a `next` function.');\n    }\n\n    getLogger(this).info('Creating onTokenRefresh listener');\n    SharedEventEmitter.addListener('onTokenRefresh', listener);\n    return () => {\n      getLogger(this).info('Removing onTokenRefresh listener');\n      SharedEventEmitter.removeListener('onTokenRefresh', listener);\n    };\n  }\n\n  requestPermission() {\n    return getNativeModule(this).requestPermission();\n  }\n  /**\n   * NON WEB-SDK METHODS\n   */\n\n\n  hasPermission() {\n    return getNativeModule(this).hasPermission();\n  }\n\n  sendMessage(remoteMessage) {\n    if (!(remoteMessage instanceof RemoteMessage)) {\n      return Promise.reject(new Error(`Messaging:sendMessage expects a 'RemoteMessage' but got type ${typeof remoteMessage}`));\n    }\n\n    try {\n      return getNativeModule(this).sendMessage(remoteMessage.build());\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  subscribeToTopic(topic) {\n    return getNativeModule(this).subscribeToTopic(topic);\n  }\n\n  unsubscribeFromTopic(topic) {\n    return getNativeModule(this).unsubscribeFromTopic(topic);\n  }\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n\n  setBackgroundMessageHandler() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'setBackgroundMessageHandler'));\n  }\n\n  useServiceWorker() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'useServiceWorker'));\n  }\n\n}\nexport const statics = {\n  RemoteMessage\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Query from \"./Query\";\nimport DocumentReference from \"./DocumentReference\";\nimport { firestoreAutoId } from \"../../utils\";\nvar CollectionReference = function () {\n  function CollectionReference(firestore, collectionPath) {\n    _classCallCheck(this, CollectionReference);\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new Query(firestore, collectionPath);\n  }\n  return _createClass(CollectionReference, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._collectionPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = this._collectionPath.parent();\n      return parentPath ? new DocumentReference(this._firestore, parentPath) : null;\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._collectionPath.relativeName;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherCollectionReference) {\n      if (!(otherCollectionReference instanceof CollectionReference)) {\n        throw new Error('firebase.firestore.CollectionReference.isEqual(*) expects an instance of CollectionReference.');\n      }\n      if (this.path !== otherCollectionReference.path) return false;\n      if (this._firestore.app.name !== otherCollectionReference._firestore.app.name) {\n        return false;\n      }\n      if (this._firestore.app.options.projectId !== otherCollectionReference._firestore.app.options.projectId) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var documentRef = this.doc();\n      return documentRef.set(data).then(function () {\n        return Promise.resolve(documentRef);\n      });\n    }\n  }, {\n    key: \"doc\",\n    value: function doc(documentPath) {\n      var newPath = documentPath || firestoreAutoId();\n      var path = this._collectionPath.child(newPath);\n      if (!path.isDocument) {\n        throw new Error('Argument \"documentPath\" must point to a document.');\n      }\n      return new DocumentReference(this._firestore, path);\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt() {\n      for (var _len = arguments.length, snapshotOrVarArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n        snapshotOrVarArgs[_key] = arguments[_key];\n      }\n      return this._query.endAt(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"endBefore\",\n    value: function endBefore() {\n      for (var _len2 = arguments.length, snapshotOrVarArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        snapshotOrVarArgs[_key2] = arguments[_key2];\n      }\n      return this._query.endBefore(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      return this._query.get(options);\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      return this._query.limit(_limit);\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n      return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(fieldPath, directionStr) {\n      return this._query.orderBy(fieldPath, directionStr);\n    }\n  }, {\n    key: \"startAfter\",\n    value: function startAfter() {\n      for (var _len3 = arguments.length, snapshotOrVarArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        snapshotOrVarArgs[_key3] = arguments[_key3];\n      }\n      return this._query.startAfter(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt() {\n      for (var _len4 = arguments.length, snapshotOrVarArgs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        snapshotOrVarArgs[_key4] = arguments[_key4];\n      }\n      return this._query.startAt(snapshotOrVarArgs);\n    }\n  }, {\n    key: \"where\",\n    value: function where(fieldPath, opStr, value) {\n      return this._query.where(fieldPath, opStr, value);\n    }\n  }]);\n}();\nexport { CollectionReference as default };","map":{"version":3,"names":["Query","DocumentReference","firestoreAutoId","CollectionReference","firestore","collectionPath","_classCallCheck","_collectionPath","_firestore","_query","_createClass","key","get","id","parentPath","parent","relativeName","value","isEqual","otherCollectionReference","Error","path","app","name","options","projectId","add","data","documentRef","doc","set","then","Promise","resolve","documentPath","newPath","child","isDocument","endAt","_len","arguments","length","snapshotOrVarArgs","Array","_key","endBefore","_len2","_key2","limit","onSnapshot","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","orderBy","fieldPath","directionStr","startAfter","_len3","_key3","startAt","_len4","_key4","where","opStr","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/CollectionReference.js"],"sourcesContent":["/**\n * \n * CollectionReference representation wrapper\n */\nimport Query from './Query';\nimport DocumentReference from './DocumentReference';\nimport { firestoreAutoId } from '../../utils';\n\n/**\n * @class CollectionReference\n */\nexport default class CollectionReference {\n  constructor(firestore, collectionPath) {\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new Query(firestore, collectionPath);\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._collectionPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._collectionPath.parent();\n\n    return parentPath ? new DocumentReference(this._firestore, parentPath) : null;\n  }\n\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n\n  isEqual(otherCollectionReference) {\n    if (!(otherCollectionReference instanceof CollectionReference)) {\n      throw new Error('firebase.firestore.CollectionReference.isEqual(*) expects an instance of CollectionReference.');\n    } // check paths match\n\n\n    if (this.path !== otherCollectionReference.path) return false; // check same firestore app name\n\n    if (this._firestore.app.name !== otherCollectionReference._firestore.app.name) {\n      return false;\n    } // check same firestore app projectId\n    // noinspection RedundantIfStatementJS\n\n\n    if (this._firestore.app.options.projectId !== otherCollectionReference._firestore.app.options.projectId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  add(data) {\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath) {\n    const newPath = documentPath || firestoreAutoId();\n\n    const path = this._collectionPath.child(newPath);\n\n    if (!path.isDocument) {\n      throw new Error('Argument \"documentPath\" must point to a document.');\n    }\n\n    return new DocumentReference(this._firestore, path);\n  } // From Query\n\n\n  endAt(...snapshotOrVarArgs) {\n    return this._query.endAt(snapshotOrVarArgs);\n  }\n\n  endBefore(...snapshotOrVarArgs) {\n    return this._query.endBefore(snapshotOrVarArgs);\n  }\n\n  get(options) {\n    return this._query.get(options);\n  }\n\n  limit(limit) {\n    return this._query.limit(limit);\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n  }\n\n  orderBy(fieldPath, directionStr) {\n    return this._query.orderBy(fieldPath, directionStr);\n  }\n\n  startAfter(...snapshotOrVarArgs) {\n    return this._query.startAfter(snapshotOrVarArgs);\n  }\n\n  startAt(...snapshotOrVarArgs) {\n    return this._query.startAt(snapshotOrVarArgs);\n  }\n\n  where(fieldPath, opStr, value) {\n    return this._query.where(fieldPath, opStr, value);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
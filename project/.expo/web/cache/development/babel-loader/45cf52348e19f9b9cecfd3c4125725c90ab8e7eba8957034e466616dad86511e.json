{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Table, Row, Rows } from 'react-native-table-component';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar admin = require('firebase-admin');\nadmin.initializeApp({});\nvar db = admin.firestore();\nvar data = [{\n  Count: '1',\n  Variety: 'Sugar Baby',\n  Ripeness: 'Unripe',\n  Date: 'Mar 9, 2024',\n  Time: '03:28'\n}, {\n  Count: '2',\n  Variety: 'Sugar Baby',\n  Ripeness: 'Unripe',\n  Date: 'Mar 9, 2024',\n  Time: '03:31'\n}, {\n  Count: '3',\n  Variety: 'Crimson',\n  Ripeness: 'Ripe',\n  Date: 'Mar 9, 2024',\n  Time: '03:37'\n}, {\n  Count: '4',\n  Variety: 'Crimson',\n  Ripeness: 'Overripe',\n  Date: 'Mar 9, 2024',\n  Time: '03:40'\n}, {\n  Count: '5',\n  Variety: 'Sugar Baby',\n  Ripeness: 'Ripe',\n  Date: 'Mar 9, 2024',\n  Time: '03:45'\n}, {\n  Count: '6',\n  Variety: 'Crimson',\n  Ripeness: 'Unripe',\n  Date: 'Mar 9, 2024',\n  Time: '04:13'\n}, {\n  Count: '7',\n  Variety: 'Crimson',\n  Ripeness: 'Overripe',\n  Date: 'Mar 9, 2024',\n  Time: '04:16'\n}, {\n  Count: '8',\n  Variety: 'Sugar Baby',\n  Ripeness: 'Ripe',\n  Date: 'Mar 9, 2024',\n  Time: '04:17'\n}];\ndataset.forEach(function (data) {\n  db.collection('fruits').add(data).then(function (docRef) {\n    console.log('Document written with ID: ', docRef.id);\n  }).catch(function (error) {\n    console.error('Error writing document: ', error);\n  });\n});\nvar TableExample = function TableExample() {\n  return _jsx(View, {\n    children: _jsx(ScrollView, {\n      style: styles.container,\n      children: _jsxs(Table, {\n        borderStyle: {\n          borderWidth: 1,\n          borderColor: '#00b36b'\n        },\n        children: [_jsx(Row, {\n          data: data[0],\n          style: {\n            height: 50,\n            backgroundColor: '#00ff99'\n          },\n          textStyle: {\n            margin: 45\n          }\n        }), _jsx(Rows, {\n          data: data.slice(1),\n          textStyle: {\n            margin: 10\n          }\n        })]\n      })\n    })\n  });\n};\nexport default TableExample;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ccffeb',\n    borderColor: '#00b36b',\n    borderWidth: 2,\n    marginBottom: 100\n  }\n});","map":{"version":3,"names":["React","View","ScrollView","StyleSheet","Table","Row","Rows","jsx","_jsx","jsxs","_jsxs","admin","require","initializeApp","db","firestore","data","Count","Variety","Ripeness","Date","Time","dataset","forEach","collection","add","then","docRef","console","log","id","catch","error","TableExample","children","style","styles","container","borderStyle","borderWidth","borderColor","height","backgroundColor","textStyle","margin","slice","create","flex","marginBottom"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/datatable.js"],"sourcesContent":["import React from 'react';\r\nimport { View, ScrollView, StyleSheet} from 'react-native';\r\nimport { Table, Row, Rows } from 'react-native-table-component';\r\n\r\n// Import the Firebase Firestore library\r\nconst admin = require('firebase-admin');\r\n\r\n// Initialize the Firebase app\r\nadmin.initializeApp({\r\n  // Your Firebase project credentials\r\n});\r\n\r\n// Get a reference to the Firestore database\r\nconst db = admin.firestore();\r\n\r\n// Define your dataset as an array of objects\r\nconst data = [\r\n  { Count: '1', Variety: 'Sugar Baby', Ripeness: 'Unripe', Date: 'Mar 9, 2024', Time: '03:28' },\r\n  { Count: '2', Variety: 'Sugar Baby', Ripeness: 'Unripe', Date: 'Mar 9, 2024', Time: '03:31' },\r\n  { Count: '3', Variety: 'Crimson', Ripeness: 'Ripe', Date: 'Mar 9, 2024', Time: '03:37' },\r\n  { Count: '4', Variety: 'Crimson', Ripeness: 'Overripe', Date: 'Mar 9, 2024', Time: '03:40' },\r\n  { Count: '5', Variety: 'Sugar Baby', Ripeness: 'Ripe', Date: 'Mar 9, 2024', Time: '03:45' },\r\n  { Count: '6', Variety: 'Crimson', Ripeness: 'Unripe', Date: 'Mar 9, 2024', Time: '04:13' },\r\n  { Count: '7', Variety: 'Crimson', Ripeness: 'Overripe', Date: 'Mar 9, 2024', Time: '04:16' },\r\n  { Count: '8', Variety: 'Sugar Baby', Ripeness: 'Ripe', Date: 'Mar 9, 2024', Time: '04:17' },\r\n];\r\n\r\n// Write the dataset to Firestore\r\ndataset.forEach(data => {\r\n  db.collection('fruits').add(data)\r\n    .then(docRef => {\r\n      console.log('Document written with ID: ', docRef.id);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error writing document: ', error);\r\n    });\r\n});\r\n\r\n\r\nconst TableExample = () => {\r\n  return (\r\n    <View>\r\n    <ScrollView style={styles.container}>\r\n      <Table borderStyle={{ borderWidth: 1, borderColor: '#00b36b' }}>\r\n        <Row\r\n          data={data[0]}\r\n          style={{ height: 50, backgroundColor: '#00ff99' }}\r\n          textStyle={{ margin: 45 }}\r\n        />\r\n        <Rows data={data.slice(1)} textStyle={{ margin: 10 }} />\r\n      </Table>\r\n    </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TableExample;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ccffeb',\r\n    borderColor: '#00b36b',\r\n    borderWidth: 2,\r\n    marginBottom: 100,\r\n  }\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport SnapshotError from \"./SnapshotError\";\nimport DocumentSnapshot from \"./DocumentSnapshot\";\nimport CollectionReference from \"./CollectionReference\";\nimport { parseUpdateArgs } from \"./utils\";\nimport { buildNativeMap } from \"./utils/serialize\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { firestoreAutoId, isFunction, isObject } from \"../../utils\";\nimport { getAppEventName, SharedEventEmitter } from \"../../utils/events\";\nvar DocumentReference = function () {\n  function DocumentReference(firestore, documentPath) {\n    _classCallCheck(this, DocumentReference);\n    this._documentPath = documentPath;\n    this._firestore = firestore;\n  }\n  return _createClass(DocumentReference, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._documentPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = this._documentPath.parent();\n      return new CollectionReference(this._firestore, parentPath);\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._documentPath.relativeName;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherDocumentReference) {\n      if (!(otherDocumentReference instanceof DocumentReference)) {\n        throw new Error('firebase.firestore.DocumentReference.isEqual(*) expects an instance of DocumentReference.');\n      }\n      if (this.path !== otherDocumentReference.path) return false;\n      if (this._firestore.app.name !== otherDocumentReference._firestore.app.name) {\n        return false;\n      }\n      if (this._firestore.app.options.projectId !== otherDocumentReference._firestore.app.options.projectId) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(collectionPath) {\n      var path = this._documentPath.child(collectionPath);\n      if (!path.isCollection) {\n        throw new Error('Argument \"collectionPath\" must point to a collection.');\n      }\n      return new CollectionReference(this._firestore, path);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return getNativeModule(this._firestore).documentDelete(this.path);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      var _this = this;\n      if (options) {\n        if (!isObject(options)) {\n          return Promise.reject(new Error('DocumentReference.get failed: First argument must be an object.'));\n        }\n        if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n          return Promise.reject(new Error('DocumentReference.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n        }\n      }\n      return getNativeModule(this._firestore).documentGet(this.path, options).then(function (result) {\n        return new DocumentSnapshot(_this._firestore, result);\n      });\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n      var _this2 = this;\n      var observer;\n      var docListenOptions = {};\n      if (isFunction(optionsOrObserverOrOnNext)) {\n        if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n          throw new Error('DocumentReference.onSnapshot failed: Second argument must be a valid function.');\n        }\n        observer = {\n          next: optionsOrObserverOrOnNext,\n          error: observerOrOnNextOrOnError\n        };\n      } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n        if (optionsOrObserverOrOnNext.next) {\n          if (isFunction(optionsOrObserverOrOnNext.next)) {\n            if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n              throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n            }\n            observer = {\n              next: optionsOrObserverOrOnNext.next,\n              error: optionsOrObserverOrOnNext.error\n            };\n          } else {\n            throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n          docListenOptions = optionsOrObserverOrOnNext;\n          if (isFunction(observerOrOnNextOrOnError)) {\n            if (onError && !isFunction(onError)) {\n              throw new Error('DocumentReference.onSnapshot failed: Third argument must be a valid function.');\n            }\n            observer = {\n              next: observerOrOnNextOrOnError,\n              error: onError\n            };\n          } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n            if (isFunction(observerOrOnNextOrOnError.next)) {\n              if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n                throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n              }\n              observer = {\n                next: observerOrOnNextOrOnError.next,\n                error: observerOrOnNextOrOnError.error\n              };\n            } else {\n              throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n            }\n          } else {\n            throw new Error('DocumentReference.onSnapshot failed: Second argument must be a function or observer.');\n          }\n        } else {\n          throw new Error('DocumentReference.onSnapshot failed: First argument must be a function, observer or options.');\n        }\n      } else {\n        throw new Error('DocumentReference.onSnapshot failed: Called with invalid arguments.');\n      }\n      var listenerId = firestoreAutoId();\n      var listener = function listener(nativeDocumentSnapshot) {\n        var documentSnapshot = new DocumentSnapshot(_this2.firestore, nativeDocumentSnapshot);\n        observer.next(documentSnapshot);\n      };\n      var snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onDocumentSnapshot:${listenerId}`), listener);\n      var unsubscribe;\n      var errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onDocumentSnapshotError:${listenerId}`), function (e) {\n        if (unsubscribe) unsubscribe();\n        var error = new SnapshotError(e);\n        if (observer.error) observer.error(error);else _this2.firestore.log.error(error);\n      });\n      getNativeModule(this._firestore).documentOnSnapshot(this.path, listenerId, docListenOptions);\n      unsubscribe = function unsubscribe() {\n        snapshotSubscription.remove();\n        errorSubscription.remove();\n        getNativeModule(_this2._firestore).documentOffSnapshot(_this2.path, listenerId);\n      };\n      return unsubscribe;\n    }\n  }, {\n    key: \"set\",\n    value: function set(data, options) {\n      var nativeData = buildNativeMap(data);\n      return getNativeModule(this._firestore).documentSet(this.path, nativeData, options);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var data = parseUpdateArgs(args, 'DocumentReference.update');\n      var nativeData = buildNativeMap(data);\n      return getNativeModule(this._firestore).documentUpdate(this.path, nativeData);\n    }\n  }]);\n}();\nexport { DocumentReference as default };","map":{"version":3,"names":["SnapshotError","DocumentSnapshot","CollectionReference","parseUpdateArgs","buildNativeMap","getNativeModule","firestoreAutoId","isFunction","isObject","getAppEventName","SharedEventEmitter","DocumentReference","firestore","documentPath","_classCallCheck","_documentPath","_firestore","_createClass","key","get","id","parentPath","parent","relativeName","value","isEqual","otherDocumentReference","Error","path","app","name","options","projectId","collection","collectionPath","child","isCollection","_delete","documentDelete","_this","Promise","reject","source","documentGet","then","result","onSnapshot","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","_this2","observer","docListenOptions","next","error","Object","prototype","hasOwnProperty","call","listenerId","listener","nativeDocumentSnapshot","documentSnapshot","snapshotSubscription","addListener","unsubscribe","errorSubscription","e","log","documentOnSnapshot","remove","documentOffSnapshot","set","data","nativeData","documentSet","update","_len","arguments","length","args","Array","_key","documentUpdate","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/DocumentReference.js"],"sourcesContent":["/**\n * \n * DocumentReference representation wrapper\n */\nimport SnapshotError from './SnapshotError';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport CollectionReference from './CollectionReference';\nimport { parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\nimport { getNativeModule } from '../../utils/native';\nimport { firestoreAutoId, isFunction, isObject } from '../../utils';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\n\n/**\n * @class DocumentReference\n */\nexport default class DocumentReference {\n  constructor(firestore, documentPath) {\n    this._documentPath = documentPath;\n    this._firestore = firestore;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._documentPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._documentPath.parent(); // $FlowExpectedError: parentPath can never be null\n\n\n    return new CollectionReference(this._firestore, parentPath);\n  }\n\n  get path() {\n    return this._documentPath.relativeName;\n  }\n\n  isEqual(otherDocumentReference) {\n    if (!(otherDocumentReference instanceof DocumentReference)) {\n      throw new Error('firebase.firestore.DocumentReference.isEqual(*) expects an instance of DocumentReference.');\n    } // check paths match\n\n\n    if (this.path !== otherDocumentReference.path) return false; // check same firestore app name\n\n    if (this._firestore.app.name !== otherDocumentReference._firestore.app.name) {\n      return false;\n    } // check same firestore app projectId\n    // noinspection RedundantIfStatementJS\n\n\n    if (this._firestore.app.options.projectId !== otherDocumentReference._firestore.app.options.projectId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  collection(collectionPath) {\n    const path = this._documentPath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error('Argument \"collectionPath\" must point to a collection.');\n    }\n\n    return new CollectionReference(this._firestore, path);\n  }\n\n  delete() {\n    return getNativeModule(this._firestore).documentDelete(this.path);\n  }\n\n  get(options) {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(new Error('DocumentReference.get failed: First argument must be an object.'));\n      }\n\n      if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        return Promise.reject(new Error('DocumentReference.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n      }\n    }\n\n    return getNativeModule(this._firestore).documentGet(this.path, options).then(result => new DocumentSnapshot(this._firestore, result));\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    let observer;\n    let docListenOptions = {}; // Called with: onNext, ?onError\n\n    if (isFunction(optionsOrObserverOrOnNext)) {\n      if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n        throw new Error('DocumentReference.onSnapshot failed: Second argument must be a valid function.');\n      } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError\n      };\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      if (optionsOrObserverOrOnNext.next) {\n        if (isFunction(optionsOrObserverOrOnNext.next)) {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error\n          };\n        } else {\n          throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n        }\n      } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n        docListenOptions = optionsOrObserverOrOnNext; // Called with: Options, onNext, ?onError\n\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error('DocumentReference.onSnapshot failed: Third argument must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError\n          }; // Called with Options, Observer\n        } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n          if (isFunction(observerOrOnNextOrOnError.next)) {\n            if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n              throw new Error('DocumentReference.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError.next,\n              error: observerOrOnNextOrOnError.error\n            };\n          } else {\n            throw new Error('DocumentReference.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else {\n          throw new Error('DocumentReference.onSnapshot failed: Second argument must be a function or observer.');\n        }\n      } else {\n        throw new Error('DocumentReference.onSnapshot failed: First argument must be a function, observer or options.');\n      }\n    } else {\n      throw new Error('DocumentReference.onSnapshot failed: Called with invalid arguments.');\n    }\n\n    const listenerId = firestoreAutoId();\n\n    const listener = nativeDocumentSnapshot => {\n      const documentSnapshot = new DocumentSnapshot(this.firestore, nativeDocumentSnapshot);\n      observer.next(documentSnapshot);\n    }; // Listen to snapshot events\n\n\n    const snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onDocumentSnapshot:${listenerId}`), listener);\n    let unsubscribe; // listen for snapshot error events\n\n    const errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onDocumentSnapshotError:${listenerId}`), e => {\n      if (unsubscribe) unsubscribe();\n      const error = new SnapshotError(e);\n      if (observer.error) observer.error(error);else this.firestore.log.error(error);\n    }); // Add the native listener\n\n    getNativeModule(this._firestore).documentOnSnapshot(this.path, listenerId, docListenOptions); // return an unsubscribe method\n\n    unsubscribe = () => {\n      snapshotSubscription.remove();\n      errorSubscription.remove(); // cancel native listener\n\n      getNativeModule(this._firestore).documentOffSnapshot(this.path, listenerId);\n    };\n\n    return unsubscribe;\n  }\n\n  set(data, options) {\n    const nativeData = buildNativeMap(data);\n    return getNativeModule(this._firestore).documentSet(this.path, nativeData, options);\n  }\n\n  update(...args) {\n    const data = parseUpdateArgs(args, 'DocumentReference.update');\n    const nativeData = buildNativeMap(data);\n    return getNativeModule(this._firestore).documentUpdate(this.path, nativeData);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
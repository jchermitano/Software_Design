{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport User from \"./User\";\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport { getAppEventName, SharedEventEmitter } from \"../../utils/events\";\nimport { isAndroid, isBoolean } from \"../../utils\";\nimport { getLogger } from \"../../utils/log\";\nimport { getNativeModule } from \"../../utils/native\";\nimport INTERNALS from \"../../utils/internals\";\nimport ConfirmationResult from \"./phone/ConfirmationResult\";\nimport PhoneAuthListener from \"./phone/PhoneAuthListener\";\nimport AuthSettings from \"./AuthSettings\";\nimport EmailAuthProvider from \"./providers/EmailAuthProvider\";\nimport PhoneAuthProvider from \"./providers/PhoneAuthProvider\";\nimport GoogleAuthProvider from \"./providers/GoogleAuthProvider\";\nimport GithubAuthProvider from \"./providers/GithubAuthProvider\";\nimport OAuthProvider from \"./providers/OAuthProvider\";\nimport TwitterAuthProvider from \"./providers/TwitterAuthProvider\";\nimport FacebookAuthProvider from \"./providers/FacebookAuthProvider\";\nimport AppleAuthProvider from \"./providers/AppleAuthProvider\";\nvar NATIVE_EVENTS = ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'];\nexport var MODULE_NAME = 'RNFirebaseAuth';\nexport var NAMESPACE = 'auth';\nvar Auth = function (_ModuleBase) {\n  function Auth(app) {\n    var _this2;\n    _classCallCheck(this, Auth);\n    _this2 = _callSuper(this, Auth, [app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    }]);\n    var NativeModule = getNativeModule(_this2);\n    _this2._user = null;\n    _this2._settings = null;\n    _this2._authResult = false;\n    _this2._languageCode = NativeModule.APP_LANGUAGE[app._name] || NativeModule.APP_LANGUAGE['[DEFAULT]'];\n    if (NativeModule.APP_USER[app._name]) {\n      _this2._setUser(NativeModule.APP_USER[app._name]);\n    }\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'auth_state_changed'), function (state) {\n      _this2._setUser(state.user);\n      SharedEventEmitter.emit(getAppEventName(_this2, 'onAuthStateChanged'), _this2._user);\n    });\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'phone_auth_state_changed'), function (event) {\n      var eventKey = `phone:auth:${event.requestKey}:${event.type}`;\n      SharedEventEmitter.emit(eventKey, event.state);\n    });\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'auth_id_token_changed'), function (auth) {\n      _this2._setUser(auth.user);\n      SharedEventEmitter.emit(getAppEventName(_this2, 'onIdTokenChanged'), _this2._user);\n    });\n    NativeModule.addAuthStateListener();\n    NativeModule.addIdTokenListener();\n    return _this2;\n  }\n  _inherits(Auth, _ModuleBase);\n  return _createClass(Auth, [{\n    key: \"_setUser\",\n    value: function _setUser(user) {\n      this._user = user ? new User(this, user) : null;\n      this._authResult = true;\n      SharedEventEmitter.emit(getAppEventName(this, 'onUserChanged'), this._user);\n      return this._user;\n    }\n  }, {\n    key: \"_setUserCredential\",\n    value: function _setUserCredential(userCredential) {\n      var user = new User(this, userCredential.user);\n      this._user = user;\n      this._authResult = true;\n      SharedEventEmitter.emit(getAppEventName(this, 'onUserChanged'), this._user);\n      return {\n        additionalUserInfo: userCredential.additionalUserInfo,\n        user: user\n      };\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(listener) {\n      var _this3 = this;\n      getLogger(this).info('Creating onAuthStateChanged listener');\n      SharedEventEmitter.addListener(getAppEventName(this, 'onAuthStateChanged'), listener);\n      if (this._authResult) listener(this._user || null);\n      return function () {\n        getLogger(_this3).info('Removing onAuthStateChanged listener');\n        SharedEventEmitter.removeListener(getAppEventName(_this3, 'onAuthStateChanged'), listener);\n      };\n    }\n  }, {\n    key: \"onIdTokenChanged\",\n    value: function onIdTokenChanged(listener) {\n      var _this4 = this;\n      getLogger(this).info('Creating onIdTokenChanged listener');\n      SharedEventEmitter.addListener(getAppEventName(this, 'onIdTokenChanged'), listener);\n      if (this._authResult) listener(this._user || null);\n      return function () {\n        getLogger(_this4).info('Removing onIdTokenChanged listener');\n        SharedEventEmitter.removeListener(getAppEventName(_this4, 'onIdTokenChanged'), listener);\n      };\n    }\n  }, {\n    key: \"onUserChanged\",\n    value: function onUserChanged(listener) {\n      var _this5 = this;\n      getLogger(this).info('Creating onUserChanged listener');\n      SharedEventEmitter.addListener(getAppEventName(this, 'onUserChanged'), listener);\n      if (this._authResult) listener(this._user || null);\n      return function () {\n        getLogger(_this5).info('Removing onUserChanged listener');\n        SharedEventEmitter.removeListener(getAppEventName(_this5, 'onUserChanged'), listener);\n      };\n    }\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      var _this6 = this;\n      return getNativeModule(this).signOut().then(function () {\n        _this6._setUser();\n      });\n    }\n  }, {\n    key: \"signInAnonymously\",\n    value: function signInAnonymously() {\n      var _this7 = this;\n      return getNativeModule(this).signInAnonymously().then(function (userCredential) {\n        return _this7._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInAnonymouslyAndRetrieveData\",\n    value: function signInAnonymouslyAndRetrieveData() {\n      var _this8 = this;\n      console.warn('Deprecated signInAnonymouslyAndRetrieveData in favor of signInAnonymously.');\n      return getNativeModule(this).signInAnonymously().then(function (userCredential) {\n        return _this8._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"createUserWithEmailAndPassword\",\n    value: function createUserWithEmailAndPassword(email, password) {\n      var _this9 = this;\n      return getNativeModule(this).createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this9._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"createUserAndRetrieveDataWithEmailAndPassword\",\n    value: function createUserAndRetrieveDataWithEmailAndPassword(email, password) {\n      var _this10 = this;\n      console.warn('Deprecated createUserAndRetrieveDataWithEmailAndPassword in favor of createUserWithEmailAndPassword.');\n      return getNativeModule(this).createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this10._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithEmailAndPassword\",\n    value: function signInWithEmailAndPassword(email, password) {\n      var _this11 = this;\n      return getNativeModule(this).signInWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this11._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInAndRetrieveDataWithEmailAndPassword\",\n    value: function signInAndRetrieveDataWithEmailAndPassword(email, password) {\n      var _this12 = this;\n      console.warn('Deprecated signInAndRetrieveDataWithEmailAndPassword in favor of signInWithEmailAndPassword.');\n      return getNativeModule(this).signInWithEmailAndPassword(email, password).then(function (userCredential) {\n        return _this12._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithCustomToken\",\n    value: function signInWithCustomToken(customToken) {\n      var _this13 = this;\n      return getNativeModule(this).signInWithCustomToken(customToken).then(function (userCredential) {\n        return _this13._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInAndRetrieveDataWithCustomToken\",\n    value: function signInAndRetrieveDataWithCustomToken(customToken) {\n      var _this14 = this;\n      console.warn('Deprecated signInAndRetrieveDataWithCustomToken in favor of signInWithCustomToken.');\n      return getNativeModule(this).signInWithCustomToken(customToken).then(function (userCredential) {\n        return _this14._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithCredential\",\n    value: function signInWithCredential(credential) {\n      var _this15 = this;\n      return getNativeModule(this).signInWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this15._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInAndRetrieveDataWithCredential\",\n    value: function signInAndRetrieveDataWithCredential(credential) {\n      var _this16 = this;\n      console.warn('Deprecated signInAndRetrieveDataWithCredential in favor of signInWithCredential.');\n      return getNativeModule(this).signInWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this16._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"signInWithPhoneNumber\",\n    value: function signInWithPhoneNumber(phoneNumber, forceResend) {\n      var _this17 = this;\n      if (isAndroid) {\n        return getNativeModule(this).signInWithPhoneNumber(phoneNumber, forceResend || false).then(function (result) {\n          return new ConfirmationResult(_this17, result.verificationId);\n        });\n      }\n      return getNativeModule(this).signInWithPhoneNumber(phoneNumber).then(function (result) {\n        return new ConfirmationResult(_this17, result.verificationId);\n      });\n    }\n  }, {\n    key: \"verifyPhoneNumber\",\n    value: function verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n      var _forceResend = forceResend;\n      var _autoVerifyTimeout = 60;\n      if (isBoolean(autoVerifyTimeoutOrForceResend)) {\n        _forceResend = autoVerifyTimeoutOrForceResend;\n      } else {\n        _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n      }\n      return new PhoneAuthListener(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n    }\n  }, {\n    key: \"sendPasswordResetEmail\",\n    value: function sendPasswordResetEmail(email, actionCodeSettings) {\n      return getNativeModule(this).sendPasswordResetEmail(email, actionCodeSettings);\n    }\n  }, {\n    key: \"sendSignInLinkToEmail\",\n    value: function sendSignInLinkToEmail(email, actionCodeSettings) {\n      return getNativeModule(this).sendSignInLinkToEmail(email, actionCodeSettings);\n    }\n  }, {\n    key: \"isSignInWithEmailLink\",\n    value: function isSignInWithEmailLink(emailLink) {\n      return typeof emailLink === 'string' && (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) && (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'));\n    }\n  }, {\n    key: \"signInWithEmailLink\",\n    value: function signInWithEmailLink(email, emailLink) {\n      var _this18 = this;\n      return getNativeModule(this).signInWithEmailLink(email, emailLink).then(function (userCredential) {\n        return _this18._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"confirmPasswordReset\",\n    value: function confirmPasswordReset(code, newPassword) {\n      return getNativeModule(this).confirmPasswordReset(code, newPassword);\n    }\n  }, {\n    key: \"applyActionCode\",\n    value: function applyActionCode(code) {\n      var _this19 = this;\n      return getNativeModule(this).applyActionCode(code).then(function (user) {\n        _this19._setUser(user);\n      });\n    }\n  }, {\n    key: \"checkActionCode\",\n    value: function checkActionCode(code) {\n      return getNativeModule(this).checkActionCode(code);\n    }\n  }, {\n    key: \"fetchSignInMethodsForEmail\",\n    value: function fetchSignInMethodsForEmail(email) {\n      return getNativeModule(this).fetchSignInMethodsForEmail(email);\n    }\n  }, {\n    key: \"verifyPasswordResetCode\",\n    value: function verifyPasswordResetCode(code) {\n      return getNativeModule(this).verifyPasswordResetCode(code);\n    }\n  }, {\n    key: \"languageCode\",\n    get: function get() {\n      return this._languageCode;\n    },\n    set: function set(code) {\n      this._languageCode = code;\n      getNativeModule(this).setLanguageCode(code);\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      if (!this._settings) {\n        this._settings = new AuthSettings(this);\n      }\n      return this._settings;\n    }\n  }, {\n    key: \"currentUser\",\n    get: function get() {\n      return this._user;\n    }\n  }, {\n    key: \"getRedirectResult\",\n    value: function getRedirectResult() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'getRedirectResult'));\n    }\n  }, {\n    key: \"setPersistence\",\n    value: function setPersistence() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'setPersistence'));\n    }\n  }, {\n    key: \"signInWithPopup\",\n    value: function signInWithPopup() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'signInWithPopup'));\n    }\n  }, {\n    key: \"signInWithRedirect\",\n    value: function signInWithRedirect() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'signInWithRedirect'));\n    }\n  }, {\n    key: \"useDeviceLanguage\",\n    value: function useDeviceLanguage() {\n      throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'useDeviceLanguage'));\n    }\n  }]);\n}(ModuleBase);\nexport { Auth as default };\nexport var statics = {\n  EmailAuthProvider: EmailAuthProvider,\n  PhoneAuthProvider: PhoneAuthProvider,\n  GoogleAuthProvider: GoogleAuthProvider,\n  GithubAuthProvider: GithubAuthProvider,\n  TwitterAuthProvider: TwitterAuthProvider,\n  FacebookAuthProvider: FacebookAuthProvider,\n  AppleAuthProvider: AppleAuthProvider,\n  OAuthProvider: OAuthProvider,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error'\n  }\n};","map":{"version":3,"names":["User","ModuleBase","getAppEventName","SharedEventEmitter","isAndroid","isBoolean","getLogger","getNativeModule","INTERNALS","ConfirmationResult","PhoneAuthListener","AuthSettings","EmailAuthProvider","PhoneAuthProvider","GoogleAuthProvider","GithubAuthProvider","OAuthProvider","TwitterAuthProvider","FacebookAuthProvider","AppleAuthProvider","NATIVE_EVENTS","MODULE_NAME","NAMESPACE","Auth","_ModuleBase","app","_this2","_classCallCheck","_callSuper","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","NativeModule","_user","_settings","_authResult","_languageCode","APP_LANGUAGE","_name","APP_USER","_setUser","addListener","state","user","emit","event","eventKey","requestKey","type","auth","addAuthStateListener","addIdTokenListener","_inherits","_createClass","key","value","_setUserCredential","userCredential","additionalUserInfo","onAuthStateChanged","listener","_this3","info","removeListener","onIdTokenChanged","_this4","onUserChanged","_this5","signOut","_this6","then","signInAnonymously","_this7","signInAnonymouslyAndRetrieveData","_this8","console","warn","createUserWithEmailAndPassword","email","password","_this9","createUserAndRetrieveDataWithEmailAndPassword","_this10","signInWithEmailAndPassword","_this11","signInAndRetrieveDataWithEmailAndPassword","_this12","signInWithCustomToken","customToken","_this13","signInAndRetrieveDataWithCustomToken","_this14","signInWithCredential","credential","_this15","providerId","token","secret","signInAndRetrieveDataWithCredential","_this16","signInWithPhoneNumber","phoneNumber","forceResend","_this17","result","verificationId","verifyPhoneNumber","autoVerifyTimeoutOrForceResend","_forceResend","_autoVerifyTimeout","sendPasswordResetEmail","actionCodeSettings","sendSignInLinkToEmail","isSignInWithEmailLink","emailLink","includes","signInWithEmailLink","_this18","confirmPasswordReset","code","newPassword","applyActionCode","_this19","checkActionCode","fetchSignInMethodsForEmail","verifyPasswordResetCode","get","set","setLanguageCode","getRedirectResult","Error","STRINGS","ERROR_UNSUPPORTED_MODULE_METHOD","setPersistence","signInWithPopup","signInWithRedirect","useDeviceLanguage","default","statics","PhoneAuthState","CODE_SENT","AUTO_VERIFY_TIMEOUT","AUTO_VERIFIED","ERROR"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/auth/index.js"],"sourcesContent":["/**\n * \n * Auth representation wrapper\n */\nimport User from './User';\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nimport { isAndroid, isBoolean } from '../../utils';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nimport INTERNALS from '../../utils/internals';\nimport ConfirmationResult from './phone/ConfirmationResult';\nimport PhoneAuthListener from './phone/PhoneAuthListener';\nimport AuthSettings from './AuthSettings'; // providers\n\nimport EmailAuthProvider from './providers/EmailAuthProvider';\nimport PhoneAuthProvider from './providers/PhoneAuthProvider';\nimport GoogleAuthProvider from './providers/GoogleAuthProvider';\nimport GithubAuthProvider from './providers/GithubAuthProvider';\nimport OAuthProvider from './providers/OAuthProvider';\nimport TwitterAuthProvider from './providers/TwitterAuthProvider';\nimport FacebookAuthProvider from './providers/FacebookAuthProvider';\nimport AppleAuthProvider from './providers/AppleAuthProvider';\nconst NATIVE_EVENTS = ['auth_state_changed', 'auth_id_token_changed', 'phone_auth_state_changed'];\nexport const MODULE_NAME = 'RNFirebaseAuth';\nexport const NAMESPACE = 'auth';\nexport default class Auth extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    const NativeModule = getNativeModule(this);\n    this._user = null;\n    this._settings = null;\n    this._authResult = false;\n    this._languageCode = NativeModule.APP_LANGUAGE[app._name] || NativeModule.APP_LANGUAGE['[DEFAULT]'];\n\n    if (NativeModule.APP_USER[app._name]) {\n      this._setUser(NativeModule.APP_USER[app._name]);\n    }\n\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onAuthStateChanged\n    getAppEventName(this, 'auth_state_changed'), state => {\n      this._setUser(state.user);\n\n      SharedEventEmitter.emit(getAppEventName(this, 'onAuthStateChanged'), this._user);\n    });\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public events based on event.type\n    getAppEventName(this, 'phone_auth_state_changed'), event => {\n      const eventKey = `phone:auth:${event.requestKey}:${event.type}`;\n      SharedEventEmitter.emit(eventKey, event.state);\n    });\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onIdTokenChanged\n    getAppEventName(this, 'auth_id_token_changed'), auth => {\n      this._setUser(auth.user);\n\n      SharedEventEmitter.emit(getAppEventName(this, 'onIdTokenChanged'), this._user);\n    });\n    NativeModule.addAuthStateListener();\n    NativeModule.addIdTokenListener();\n  }\n\n  _setUser(user) {\n    this._user = user ? new User(this, user) : null;\n    this._authResult = true;\n    SharedEventEmitter.emit(getAppEventName(this, 'onUserChanged'), this._user);\n    return this._user;\n  }\n\n  _setUserCredential(userCredential) {\n    const user = new User(this, userCredential.user);\n    this._user = user;\n    this._authResult = true;\n    SharedEventEmitter.emit(getAppEventName(this, 'onUserChanged'), this._user);\n    return {\n      additionalUserInfo: userCredential.additionalUserInfo,\n      user\n    };\n  }\n  /*\n   * WEB API\n   */\n\n  /**\n   * Listen for auth changes.\n   * @param listener\n   */\n\n\n  onAuthStateChanged(listener) {\n    getLogger(this).info('Creating onAuthStateChanged listener');\n    SharedEventEmitter.addListener(getAppEventName(this, 'onAuthStateChanged'), listener);\n    if (this._authResult) listener(this._user || null);\n    return () => {\n      getLogger(this).info('Removing onAuthStateChanged listener');\n      SharedEventEmitter.removeListener(getAppEventName(this, 'onAuthStateChanged'), listener);\n    };\n  }\n  /**\n   * Listen for id token changes.\n   * @param listener\n   */\n\n\n  onIdTokenChanged(listener) {\n    getLogger(this).info('Creating onIdTokenChanged listener');\n    SharedEventEmitter.addListener(getAppEventName(this, 'onIdTokenChanged'), listener);\n    if (this._authResult) listener(this._user || null);\n    return () => {\n      getLogger(this).info('Removing onIdTokenChanged listener');\n      SharedEventEmitter.removeListener(getAppEventName(this, 'onIdTokenChanged'), listener);\n    };\n  }\n  /**\n   * Listen for user changes.\n   * @param listener\n   */\n\n\n  onUserChanged(listener) {\n    getLogger(this).info('Creating onUserChanged listener');\n    SharedEventEmitter.addListener(getAppEventName(this, 'onUserChanged'), listener);\n    if (this._authResult) listener(this._user || null);\n    return () => {\n      getLogger(this).info('Removing onUserChanged listener');\n      SharedEventEmitter.removeListener(getAppEventName(this, 'onUserChanged'), listener);\n    };\n  }\n  /**\n   * Sign the current user out\n   * @return {Promise}\n   */\n\n\n  signOut() {\n    return getNativeModule(this).signOut().then(() => {\n      this._setUser();\n    });\n  }\n  /**\n   * Sign a user in anonymously\n   *\n   * @return {Promise} A promise resolved upon completion\n   */\n\n\n  signInAnonymously() {\n    return getNativeModule(this).signInAnonymously().then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign a user in anonymously\n   *\n   * @deprecated Deprecated signInAnonymouslyAndRetrieveData in favor of signInAnonymously.\n   * @return {Promise} A promise resolved upon completion\n   */\n\n\n  signInAnonymouslyAndRetrieveData() {\n    console.warn('Deprecated signInAnonymouslyAndRetrieveData in favor of signInAnonymously.');\n    return getNativeModule(this).signInAnonymously().then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Create a user with the email/password functionality\n   *\n   * @param  {string} email    The user's email\n   * @param  {string} password The user's password\n   * @return {Promise}         A promise indicating the completion\n   */\n\n\n  createUserWithEmailAndPassword(email, password) {\n    return getNativeModule(this).createUserWithEmailAndPassword(email, password).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Create a user with the email/password functionality\n   *\n   * @deprecated Deprecated createUserAndRetrieveDataWithEmailAndPassword in favor of createUserWithEmailAndPassword.\n   * @param  {string} email    The user's email\n   * @param  {string} password The user's password\n   * @return {Promise}         A promise indicating the completion\n   */\n\n\n  createUserAndRetrieveDataWithEmailAndPassword(email, password) {\n    console.warn('Deprecated createUserAndRetrieveDataWithEmailAndPassword in favor of createUserWithEmailAndPassword.');\n    return getNativeModule(this).createUserWithEmailAndPassword(email, password).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign a user in with email/password\n   *\n   * @param  {string} email    The user's email\n   * @param  {string} password The user's password\n   * @return {Promise}         A promise that is resolved upon completion\n   */\n\n\n  signInWithEmailAndPassword(email, password) {\n    return getNativeModule(this).signInWithEmailAndPassword(email, password).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign a user in with email/password\n   *\n   * @deprecated Deprecated signInAndRetrieveDataWithEmailAndPassword in favor of signInWithEmailAndPassword\n   * @param  {string} email    The user's email\n   * @param  {string} password The user's password\n   * @return {Promise}         A promise that is resolved upon completion\n   */\n\n\n  signInAndRetrieveDataWithEmailAndPassword(email, password) {\n    console.warn('Deprecated signInAndRetrieveDataWithEmailAndPassword in favor of signInWithEmailAndPassword.');\n    return getNativeModule(this).signInWithEmailAndPassword(email, password).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign the user in with a custom auth token\n   *\n   * @param  {string} customToken  A self-signed custom auth token.\n   * @return {Promise}             A promise resolved upon completion\n   */\n\n\n  signInWithCustomToken(customToken) {\n    return getNativeModule(this).signInWithCustomToken(customToken).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign the user in with a custom auth token\n   *\n   * @deprecated Deprecated signInAndRetrieveDataWithCustomToken in favor of signInWithCustomToken\n   * @param  {string} customToken  A self-signed custom auth token.\n   * @return {Promise}             A promise resolved upon completion\n   */\n\n\n  signInAndRetrieveDataWithCustomToken(customToken) {\n    console.warn('Deprecated signInAndRetrieveDataWithCustomToken in favor of signInWithCustomToken.');\n    return getNativeModule(this).signInWithCustomToken(customToken).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign the user in with a third-party authentication provider\n   *\n   * @return {Promise}           A promise resolved upon completion\n   */\n\n\n  signInWithCredential(credential) {\n    return getNativeModule(this).signInWithCredential(credential.providerId, credential.token, credential.secret).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Sign the user in with a third-party authentication provider\n   *\n   * @deprecated Deprecated signInAndRetrieveDataWithCredential in favor of signInWithCredential.\n   * @return {Promise}           A promise resolved upon completion\n   */\n\n\n  signInAndRetrieveDataWithCredential(credential) {\n    console.warn('Deprecated signInAndRetrieveDataWithCredential in favor of signInWithCredential.');\n    return getNativeModule(this).signInWithCredential(credential.providerId, credential.token, credential.secret).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Asynchronously signs in using a phone number.\n   *\n   */\n\n\n  signInWithPhoneNumber(phoneNumber, forceResend) {\n    if (isAndroid) {\n      return getNativeModule(this).signInWithPhoneNumber(phoneNumber, forceResend || false).then(result => new ConfirmationResult(this, result.verificationId));\n    }\n\n    return getNativeModule(this).signInWithPhoneNumber(phoneNumber).then(result => new ConfirmationResult(this, result.verificationId));\n  }\n  /**\n   * Returns a PhoneAuthListener to listen to phone verification events,\n   * on the final completion event a PhoneAuthCredential can be generated for\n   * authentication purposes.\n   *\n   * @param phoneNumber\n   * @param autoVerifyTimeoutOrForceResend Android Only\n   * @param forceResend Android Only\n   * @returns {PhoneAuthListener}\n   */\n\n\n  verifyPhoneNumber(phoneNumber, autoVerifyTimeoutOrForceResend, forceResend) {\n    let _forceResend = forceResend;\n    let _autoVerifyTimeout = 60;\n\n    if (isBoolean(autoVerifyTimeoutOrForceResend)) {\n      _forceResend = autoVerifyTimeoutOrForceResend;\n    } else {\n      _autoVerifyTimeout = autoVerifyTimeoutOrForceResend;\n    }\n\n    return new PhoneAuthListener(this, phoneNumber, _autoVerifyTimeout, _forceResend);\n  }\n  /**\n   * Send reset password instructions via email\n   * @param {string} email The email to send password reset instructions\n   * @param actionCodeSettings\n   */\n\n\n  sendPasswordResetEmail(email, actionCodeSettings) {\n    return getNativeModule(this).sendPasswordResetEmail(email, actionCodeSettings);\n  }\n  /**\n   * Sends a sign-in email link to the user with the specified email\n   * @param {string} email The email account to sign in with.\n   * @param actionCodeSettings\n   */\n\n\n  sendSignInLinkToEmail(email, actionCodeSettings) {\n    return getNativeModule(this).sendSignInLinkToEmail(email, actionCodeSettings);\n  }\n  /**\n   * Checks if an incoming link is a sign-in with email link.\n   * @param {string} emailLink Sign-in email link.\n   */\n\n\n  isSignInWithEmailLink(emailLink) {\n    return typeof emailLink === 'string' && (emailLink.includes('mode=signIn') || emailLink.includes('mode%3DsignIn')) && (emailLink.includes('oobCode=') || emailLink.includes('oobCode%3D'));\n  }\n  /**\n   * Asynchronously signs in using an email and sign-in email link.\n   *\n   * @param {string} email The email account to sign in with.\n   * @param {string} emailLink Sign-in email link.\n   * @return {Promise} A promise resolved upon completion\n   */\n\n\n  signInWithEmailLink(email, emailLink) {\n    return getNativeModule(this).signInWithEmailLink(email, emailLink).then(userCredential => this._setUserCredential(userCredential));\n  }\n  /**\n   * Completes the password reset process, given a confirmation code and new password.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.auth.Auth#confirmPasswordReset\n   * @param code\n   * @param newPassword\n   * @return {Promise.<Null>}\n   */\n\n\n  confirmPasswordReset(code, newPassword) {\n    return getNativeModule(this).confirmPasswordReset(code, newPassword);\n  }\n  /**\n   * Applies a verification code sent to the user by email or other out-of-band mechanism.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.auth.Auth#applyActionCode\n   * @param code\n   * @return {Promise.<Null>}\n   */\n\n\n  applyActionCode(code) {\n    return getNativeModule(this).applyActionCode(code).then(user => {\n      this._setUser(user);\n    });\n  }\n  /**\n   * Checks a verification code sent to the user by email or other out-of-band mechanism.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.auth.Auth#checkActionCode\n   * @param code\n   * @return {Promise.<any>|Promise<ActionCodeInfo>}\n   */\n\n\n  checkActionCode(code) {\n    return getNativeModule(this).checkActionCode(code);\n  }\n  /**\n   * Returns a list of authentication methods that can be used to sign in a given user (identified by its main email address).\n   * @return {Promise}\n   */\n\n\n  fetchSignInMethodsForEmail(email) {\n    return getNativeModule(this).fetchSignInMethodsForEmail(email);\n  }\n\n  verifyPasswordResetCode(code) {\n    return getNativeModule(this).verifyPasswordResetCode(code);\n  }\n  /**\n   * Sets the language for the auth module.\n   *\n   * @param code\n   */\n\n\n  set languageCode(code) {\n    this._languageCode = code;\n    getNativeModule(this).setLanguageCode(code);\n  }\n  /**\n   * The language for the auth module.\n   *\n   * @return {string}\n   */\n\n\n  get languageCode() {\n    return this._languageCode;\n  }\n  /**\n   * The current Auth instance's settings. This is used to edit/read configuration\n   * related options like app verification mode for phone authentication.\n   *\n   * @return {AuthSettings}\n   */\n\n\n  get settings() {\n    if (!this._settings) {\n      // lazy initialize\n      this._settings = new AuthSettings(this);\n    }\n\n    return this._settings;\n  }\n  /**\n   * Get the currently signed in user\n   * @return {Promise}\n   */\n\n\n  get currentUser() {\n    return this._user;\n  }\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n\n  getRedirectResult() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'getRedirectResult'));\n  }\n\n  setPersistence() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'setPersistence'));\n  }\n\n  signInWithPopup() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'signInWithPopup'));\n  }\n\n  signInWithRedirect() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'signInWithRedirect'));\n  } // firebase issue - https://github.com/invertase/react-native-firebase/pull/655#issuecomment-349904680\n\n\n  useDeviceLanguage() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('auth', 'useDeviceLanguage'));\n  }\n\n}\nexport const statics = {\n  EmailAuthProvider,\n  PhoneAuthProvider,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  TwitterAuthProvider,\n  FacebookAuthProvider,\n  AppleAuthProvider,\n  OAuthProvider,\n  PhoneAuthState: {\n    CODE_SENT: 'sent',\n    AUTO_VERIFY_TIMEOUT: 'timeout',\n    AUTO_VERIFIED: 'verified',\n    ERROR: 'error'\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
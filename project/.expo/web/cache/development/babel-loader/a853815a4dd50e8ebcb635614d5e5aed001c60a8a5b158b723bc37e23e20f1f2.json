{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport Query from \"./Query\";\nimport DataSnapshot from \"./DataSnapshot\";\nimport OnDisconnect from \"./OnDisconnect\";\nimport { getLogger } from \"../../utils/log\";\nimport { getNativeModule } from \"../../utils/native\";\nimport ReferenceBase from \"../../utils/ReferenceBase\";\nimport { promiseOrCallback, isFunction, isObject, isString, tryJSONParse, tryJSONStringify, generatePushID } from \"../../utils\";\nimport SyncTree from \"../../utils/SyncTree\";\nvar listeners = 0;\nvar ReferenceEventTypes = {\n  value: 'value',\n  child_added: 'child_added',\n  child_removed: 'child_removed',\n  child_changed: 'child_changed',\n  child_moved: 'child_moved'\n};\nvar Reference = function (_ReferenceBase) {\n  function Reference(database, path, existingModifiers) {\n    var _this2;\n    _classCallCheck(this, Reference);\n    _this2 = _callSuper(this, Reference, [path]);\n    _this2._refListeners = {};\n    _this2._database = database;\n    _this2._query = new Query(_this2, existingModifiers);\n    getLogger(database).debug('Created new Reference', _this2._getRefKey());\n    return _this2;\n  }\n  _inherits(Reference, _ReferenceBase);\n  return _createClass(Reference, [{\n    key: \"keepSynced\",\n    value: function keepSynced(bool) {\n      return getNativeModule(this._database).keepSynced(this._getRefKey(), this.path, this._query.getModifiers(), bool);\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, onComplete) {\n      return promiseOrCallback(getNativeModule(this._database).set(this.path, this._serializeAnyType(value)), onComplete);\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority, onComplete) {\n      var _priority = this._serializeAnyType(priority);\n      return promiseOrCallback(getNativeModule(this._database).setPriority(this.path, _priority), onComplete);\n    }\n  }, {\n    key: \"setWithPriority\",\n    value: function setWithPriority(value, priority, onComplete) {\n      var _value = this._serializeAnyType(value);\n      var _priority = this._serializeAnyType(priority);\n      return promiseOrCallback(getNativeModule(this._database).setWithPriority(this.path, _value, _priority), onComplete);\n    }\n  }, {\n    key: \"update\",\n    value: function update(val, onComplete) {\n      var value = this._serializeObject(val);\n      return promiseOrCallback(getNativeModule(this._database).update(this.path, value), onComplete);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(onComplete) {\n      return promiseOrCallback(getNativeModule(this._database).remove(this.path), onComplete);\n    }\n  }, {\n    key: \"transaction\",\n    value: function transaction(transactionUpdate, onComplete) {\n      var _this3 = this;\n      var applyLocally = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (!isFunction(transactionUpdate)) {\n        return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n      }\n      return new Promise(function (resolve, reject) {\n        var onCompleteWrapper = function onCompleteWrapper(error, committed, snapshotData) {\n          if (isFunction(onComplete)) {\n            if (error) {\n              onComplete(error, committed, null);\n            } else {\n              onComplete(null, committed, new DataSnapshot(_this3, snapshotData));\n            }\n          }\n          if (error) return reject(error);\n          return resolve({\n            committed: committed,\n            snapshot: new DataSnapshot(_this3, snapshotData)\n          });\n        };\n        _this3._database._transactionHandler.add(_this3, transactionUpdate, onCompleteWrapper, applyLocally);\n      });\n    }\n  }, {\n    key: \"once\",\n    value: function once() {\n      var _this4 = this;\n      var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n      var successCallback = arguments.length > 1 ? arguments[1] : undefined;\n      var cancelOrContext = arguments.length > 2 ? arguments[2] : undefined;\n      var context = arguments.length > 3 ? arguments[3] : undefined;\n      return getNativeModule(this._database).once(this._getRefKey(), this.path, this._query.getModifiers(), eventName).then(function (_ref) {\n        var snapshot = _ref.snapshot;\n        var _snapshot = new DataSnapshot(_this4, snapshot);\n        if (isFunction(successCallback)) {\n          if (isObject(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n          if (context && isObject(context)) successCallback.bind(context)(_snapshot);\n          successCallback(_snapshot);\n        }\n        return _snapshot;\n      }).catch(function (error) {\n        if (isFunction(cancelOrContext)) return cancelOrContext(error);\n        throw error;\n      });\n    }\n  }, {\n    key: \"push\",\n    value: function push(value, onComplete) {\n      var name = generatePushID(this._database._serverTimeOffset);\n      var pushRef = this.child(name);\n      var thennablePushRef = this.child(name);\n      var promise;\n      if (value != null) {\n        promise = thennablePushRef.set(value, onComplete).then(function () {\n          return pushRef;\n        });\n      } else {\n        promise = Promise.resolve(pushRef);\n      }\n      thennablePushRef.then = promise.then.bind(promise);\n      thennablePushRef.catch = promise.catch.bind(promise);\n      if (isFunction(onComplete)) {\n        promise.catch(function () {});\n      }\n      return thennablePushRef;\n    }\n  }, {\n    key: \"orderByKey\",\n    value: function orderByKey() {\n      return this.orderBy('orderByKey');\n    }\n  }, {\n    key: \"orderByPriority\",\n    value: function orderByPriority() {\n      return this.orderBy('orderByPriority');\n    }\n  }, {\n    key: \"orderByValue\",\n    value: function orderByValue() {\n      return this.orderBy('orderByValue');\n    }\n  }, {\n    key: \"orderByChild\",\n    value: function orderByChild(key) {\n      return this.orderBy('orderByChild', key);\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(name, key) {\n      var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n      newRef._query.orderBy(name, key);\n      return newRef;\n    }\n  }, {\n    key: \"limitToLast\",\n    value: function limitToLast(limit) {\n      return this.limit('limitToLast', limit);\n    }\n  }, {\n    key: \"limitToFirst\",\n    value: function limitToFirst(limit) {\n      return this.limit('limitToFirst', limit);\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(name, _limit) {\n      var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n      newRef._query.limit(name, _limit);\n      return newRef;\n    }\n  }, {\n    key: \"equalTo\",\n    value: function equalTo(value, key) {\n      return this.filter('equalTo', value, key);\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt(value, key) {\n      return this.filter('endAt', value, key);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt(value, key) {\n      return this.filter('startAt', value, key);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(name, value, key) {\n      var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n      newRef._query.filter(name, value, key);\n      return newRef;\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      return new OnDisconnect(this);\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      return new Reference(this._database, `${this.path}/${path}`);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return `${this._database.databaseUrl}${this.path}`;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRef) {\n      return !!otherRef && otherRef.constructor === Reference && otherRef.key === this.key && this._query.queryIdentifier() === otherRef._query.queryIdentifier();\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      if (this.path === '/') return null;\n      return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this;\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new Reference(this._database, '/');\n    }\n  }, {\n    key: \"_getRegistrationKey\",\n    value: function _getRegistrationKey(eventType) {\n      return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}$${listeners}$${eventType}`;\n    }\n  }, {\n    key: \"_getRefKey\",\n    value: function _getRefKey() {\n      return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}`;\n    }\n  }, {\n    key: \"_serializeObject\",\n    value: function _serializeObject(obj) {\n      if (!isObject(obj)) return obj;\n      return tryJSONParse(tryJSONStringify(obj));\n    }\n  }, {\n    key: \"_serializeAnyType\",\n    value: function _serializeAnyType(value) {\n      if (isObject(value)) {\n        return {\n          type: 'object',\n          value: this._serializeObject(value)\n        };\n      }\n      return {\n        type: typeof value,\n        value: value\n      };\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventType, callback, cancelCallbackOrContext, context) {\n      if (!eventType) {\n        throw new Error('Query.on failed: Function called with 0 arguments. Expects at least 2.');\n      }\n      if (!isString(eventType) || !ReferenceEventTypes[eventType]) {\n        throw new Error(`Query.on failed: First argument must be a valid string event type: \"${Object.keys(ReferenceEventTypes).join(', ')}\"`);\n      }\n      if (!callback) {\n        throw new Error('Query.on failed: Function called with 1 argument. Expects at least 2.');\n      }\n      if (!isFunction(callback)) {\n        throw new Error('Query.on failed: Second argument must be a valid function.');\n      }\n      if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && !isObject(context) && !isObject(cancelCallbackOrContext)) {\n        throw new Error('Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n      }\n      if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && context) {\n        throw new Error('Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n      }\n      var eventRegistrationKey = this._getRegistrationKey(eventType);\n      var registrationCancellationKey = `${eventRegistrationKey}$cancelled`;\n      var _context = cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) ? cancelCallbackOrContext : context;\n      var registrationObj = {\n        eventType: eventType,\n        ref: this,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        dbURL: this._database.databaseUrl,\n        eventRegistrationKey: eventRegistrationKey\n      };\n      SyncTree.addRegistration(_objectSpread(_objectSpread({}, registrationObj), {}, {\n        listener: _context ? callback.bind(_context) : callback\n      }));\n      if (cancelCallbackOrContext && isFunction(cancelCallbackOrContext)) {\n        SyncTree.addRegistration({\n          ref: this,\n          once: true,\n          path: this.path,\n          key: this._getRefKey(),\n          appName: this._database.app.name,\n          dbURL: this._database.databaseUrl,\n          eventType: `${eventType}$cancelled`,\n          eventRegistrationKey: registrationCancellationKey,\n          listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext\n        });\n      }\n      getNativeModule(this._database).on({\n        eventType: eventType,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        modifiers: this._query.getModifiers(),\n        hasCancellationCallback: isFunction(cancelCallbackOrContext),\n        registration: {\n          eventRegistrationKey: eventRegistrationKey,\n          key: registrationObj.key,\n          registrationCancellationKey: registrationCancellationKey\n        }\n      });\n      listeners += 1;\n      return callback;\n    }\n  }, {\n    key: \"off\",\n    value: function off() {\n      var eventType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var originalCallback = arguments.length > 1 ? arguments[1] : undefined;\n      if (!arguments.length) {\n        return SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPath(this.path));\n      }\n      if (eventType && (!isString(eventType) || !ReferenceEventTypes[eventType])) {\n        throw new Error(`Query.off failed: First argument must be a valid string event type: \"${Object.keys(ReferenceEventTypes).join(', ')}\"`);\n      }\n      if (originalCallback && !isFunction(originalCallback)) {\n        throw new Error('Query.off failed: Function called with 2 arguments, but second optional argument was not a function.');\n      }\n      if (eventType && originalCallback) {\n        var registration = SyncTree.getOneByPathEventListener(this.path, eventType, originalCallback);\n        if (!registration) return [];\n        SyncTree.removeListenersForRegistrations([`${registration}$cancelled`]);\n        return SyncTree.removeListenerRegistrations(originalCallback, [registration]);\n      }\n      var registrations = SyncTree.getRegistrationsByPathEvent(this.path, eventType);\n      SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPathEvent(this.path, `${eventType}$cancelled`));\n      return SyncTree.removeListenersForRegistrations(registrations);\n    }\n  }]);\n}(ReferenceBase);\nexport { Reference as default };","map":{"version":3,"names":["Query","DataSnapshot","OnDisconnect","getLogger","getNativeModule","ReferenceBase","promiseOrCallback","isFunction","isObject","isString","tryJSONParse","tryJSONStringify","generatePushID","SyncTree","listeners","ReferenceEventTypes","value","child_added","child_removed","child_changed","child_moved","Reference","_ReferenceBase","database","path","existingModifiers","_this2","_classCallCheck","_callSuper","_refListeners","_database","_query","debug","_getRefKey","_inherits","_createClass","key","keepSynced","bool","getModifiers","set","onComplete","_serializeAnyType","setPriority","priority","_priority","setWithPriority","_value","update","val","_serializeObject","remove","transaction","transactionUpdate","_this3","applyLocally","arguments","length","undefined","Promise","reject","Error","resolve","onCompleteWrapper","error","committed","snapshotData","snapshot","_transactionHandler","add","once","_this4","eventName","successCallback","cancelOrContext","context","then","_ref","_snapshot","bind","catch","push","name","_serverTimeOffset","pushRef","child","thennablePushRef","promise","orderByKey","orderBy","orderByPriority","orderByValue","orderByChild","newRef","limitToLast","limit","limitToFirst","equalTo","filter","endAt","startAt","onDisconnect","toString","databaseUrl","toJSON","isEqual","otherRef","constructor","queryIdentifier","get","substring","lastIndexOf","_getRegistrationKey","eventType","obj","type","on","callback","cancelCallbackOrContext","Object","keys","join","eventRegistrationKey","registrationCancellationKey","_context","registrationObj","ref","appName","app","dbURL","addRegistration","_objectSpread","listener","modifiers","hasCancellationCallback","registration","off","originalCallback","removeListenersForRegistrations","getRegistrationsByPath","getOneByPathEventListener","removeListenerRegistrations","registrations","getRegistrationsByPathEvent","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/database/Reference.js"],"sourcesContent":["/**\n * \n * Database Reference representation wrapper\n */\nimport Query from './Query';\nimport DataSnapshot from './DataSnapshot';\nimport OnDisconnect from './OnDisconnect';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nimport ReferenceBase from '../../utils/ReferenceBase';\nimport { promiseOrCallback, isFunction, isObject, isString, tryJSONParse, tryJSONStringify, generatePushID } from '../../utils';\nimport SyncTree from '../../utils/SyncTree';\n// track all event registrations by path\nlet listeners = 0;\n/**\n * Enum for event types\n * @readonly\n * @enum {String}\n */\n\nconst ReferenceEventTypes = {\n  value: 'value',\n  child_added: 'child_added',\n  child_removed: 'child_removed',\n  child_changed: 'child_changed',\n  child_moved: 'child_moved'\n};\n\n/**\n * @typedef {String} ReferenceLocation - Path to location in the database, relative\n * to the root reference. Consists of a path where segments are separated by a\n * forward slash (/) and ends in a ReferenceKey - except the root location, which\n * has no ReferenceKey.\n *\n * @example\n * // root reference location: '/'\n * // non-root reference: '/path/to/referenceKey'\n */\n\n/**\n * @typedef {String} ReferenceKey - Identifier for each location that is unique to that\n * location, within the scope of its parent. The last part of a ReferenceLocation.\n */\n\n/**\n * Represents a specific location in your Database that can be used for\n * reading or writing data.\n *\n * You can reference the root using firebase.database().ref() or a child location\n * by calling firebase.database().ref(\"child/path\").\n *\n * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference\n * @class Reference\n * @extends ReferenceBase\n */\nexport default class Reference extends ReferenceBase {\n  constructor(database, path, existingModifiers) {\n    super(path);\n    this._refListeners = {};\n    this._database = database;\n    this._query = new Query(this, existingModifiers);\n    getLogger(database).debug('Created new Reference', this._getRefKey());\n  }\n  /**\n   * By calling `keepSynced(true)` on a location, the data for that location will\n   * automatically be downloaded and kept in sync, even when no listeners are\n   * attached for that location. Additionally, while a location is kept synced,\n   *  it will not be evicted from the persistent disk cache.\n   *\n   * @link https://firebase.google.com/docs/reference/android/com/google/firebase/database/Query.html#keepSynced(boolean)\n   * @param bool\n   * @returns {*}\n   */\n\n\n  keepSynced(bool) {\n    return getNativeModule(this._database).keepSynced(this._getRefKey(), this.path, this._query.getModifiers(), bool);\n  }\n  /**\n   * Writes data to this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#set\n   * @param value\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  set(value, onComplete) {\n    return promiseOrCallback(getNativeModule(this._database).set(this.path, this._serializeAnyType(value)), onComplete);\n  }\n  /**\n   * Sets a priority for the data at this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#setPriority\n   * @param priority\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  setPriority(priority, onComplete) {\n    const _priority = this._serializeAnyType(priority);\n\n    return promiseOrCallback(getNativeModule(this._database).setPriority(this.path, _priority), onComplete);\n  }\n  /**\n   * Writes data the Database location. Like set() but also specifies the priority for that data.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#setWithPriority\n   * @param value\n   * @param priority\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  setWithPriority(value, priority, onComplete) {\n    const _value = this._serializeAnyType(value);\n\n    const _priority = this._serializeAnyType(priority);\n\n    return promiseOrCallback(getNativeModule(this._database).setWithPriority(this.path, _value, _priority), onComplete);\n  }\n  /**\n   * Writes multiple values to the Database at once.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#update\n   * @param val\n   * @param onComplete\n   * @returns {Promise}\n   */\n\n\n  update(val, onComplete) {\n    const value = this._serializeObject(val);\n\n    return promiseOrCallback(getNativeModule(this._database).update(this.path, value), onComplete);\n  }\n  /**\n   * Removes the data at this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#remove\n   * @param onComplete\n   * @return {Promise}\n   */\n\n\n  remove(onComplete) {\n    return promiseOrCallback(getNativeModule(this._database).remove(this.path), onComplete);\n  }\n  /**\n   * Atomically modifies the data at this location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#transaction\n   * @param transactionUpdate\n   * @param onComplete\n   * @param applyLocally\n   */\n\n\n  transaction(transactionUpdate, onComplete, applyLocally = false) {\n    if (!isFunction(transactionUpdate)) {\n      return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n    }\n\n    return new Promise((resolve, reject) => {\n      const onCompleteWrapper = (error, committed, snapshotData) => {\n        if (isFunction(onComplete)) {\n          if (error) {\n            onComplete(error, committed, null);\n          } else {\n            onComplete(null, committed, new DataSnapshot(this, snapshotData));\n          }\n        }\n\n        if (error) return reject(error);\n        return resolve({\n          committed,\n          snapshot: new DataSnapshot(this, snapshotData)\n        });\n      }; // start the transaction natively\n\n\n      this._database._transactionHandler.add(this, transactionUpdate, onCompleteWrapper, applyLocally);\n    });\n  }\n  /**\n   *\n   * @param eventName\n   * @param successCallback\n   * @param cancelOrContext\n   * @param context\n   * @returns {Promise.<any>}\n   */\n\n\n  once(eventName = 'value', successCallback, cancelOrContext, context) {\n    return getNativeModule(this._database).once(this._getRefKey(), this.path, this._query.getModifiers(), eventName).then(({\n      snapshot\n    }) => {\n      const _snapshot = new DataSnapshot(this, snapshot);\n\n      if (isFunction(successCallback)) {\n        if (isObject(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n        if (context && isObject(context)) successCallback.bind(context)(_snapshot);\n        successCallback(_snapshot);\n      }\n\n      return _snapshot;\n    }).catch(error => {\n      if (isFunction(cancelOrContext)) return cancelOrContext(error);\n      throw error;\n    });\n  }\n  /**\n   *\n   * @param value\n   * @param onComplete\n   * @returns {*}\n   */\n\n\n  push(value, onComplete) {\n    const name = generatePushID(this._database._serverTimeOffset);\n    const pushRef = this.child(name);\n    const thennablePushRef = this.child(name);\n    let promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(() => pushRef);\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.catch.bind(promise);\n\n    if (isFunction(onComplete)) {\n      promise.catch(() => {});\n    }\n\n    return thennablePushRef;\n  }\n  /**\n   * MODIFIERS\n   */\n\n  /**\n   *\n   * @returns {Reference}\n   */\n\n\n  orderByKey() {\n    return this.orderBy('orderByKey');\n  }\n  /**\n   *\n   * @returns {Reference}\n   */\n\n\n  orderByPriority() {\n    return this.orderBy('orderByPriority');\n  }\n  /**\n   *\n   * @returns {Reference}\n   */\n\n\n  orderByValue() {\n    return this.orderBy('orderByValue');\n  }\n  /**\n   *\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  orderByChild(key) {\n    return this.orderBy('orderByChild', key);\n  }\n  /**\n   *\n   * @param name\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  orderBy(name, key) {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n    newRef._query.orderBy(name, key);\n\n    return newRef;\n  }\n  /**\n   * LIMITS\n   */\n\n  /**\n   *\n   * @param limit\n   * @returns {Reference}\n   */\n\n\n  limitToLast(limit) {\n    return this.limit('limitToLast', limit);\n  }\n  /**\n   *\n   * @param limit\n   * @returns {Reference}\n   */\n\n\n  limitToFirst(limit) {\n    return this.limit('limitToFirst', limit);\n  }\n  /**\n   *\n   * @param name\n   * @param limit\n   * @returns {Reference}\n   */\n\n\n  limit(name, limit) {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n    newRef._query.limit(name, limit);\n\n    return newRef;\n  }\n  /**\n   * FILTERS\n   */\n\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  equalTo(value, key) {\n    return this.filter('equalTo', value, key);\n  }\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  endAt(value, key) {\n    return this.filter('endAt', value, key);\n  }\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  startAt(value, key) {\n    return this.filter('startAt', value, key);\n  }\n  /**\n   *\n   * @param name\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n\n\n  filter(name, value, key) {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n    newRef._query.filter(name, value, key);\n\n    return newRef;\n  }\n  /**\n   *\n   * @returns {OnDisconnect}\n   */\n\n\n  onDisconnect() {\n    return new OnDisconnect(this);\n  }\n  /**\n   * Creates a Reference to a child of the current Reference, using a relative path.\n   * No validation is performed on the path to ensure it has a valid format.\n   * @param {String} path relative to current ref's location\n   * @returns {!Reference} A new Reference to the path provided, relative to the current\n   * Reference\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#child}\n   */\n\n\n  child(path) {\n    return new Reference(this._database, `${this.path}/${path}`);\n  }\n  /**\n   * Return the ref as a path string\n   * @returns {string}\n   */\n\n\n  toString() {\n    return `${this._database.databaseUrl}${this.path}`;\n  }\n  /**\n   * Return a JSON-serializable representation of this object.\n   * @returns {string}\n   */\n\n\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * Returns whether another Reference represent the same location and are from the\n   * same instance of firebase.app.App - multiple firebase apps not currently supported.\n   * @param {Reference} otherRef - Other reference to compare to this one\n   * @return {Boolean} Whether otherReference is equal to this one\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#isEqual}\n   */\n\n\n  isEqual(otherRef) {\n    return !!otherRef && otherRef.constructor === Reference && otherRef.key === this.key && this._query.queryIdentifier() === otherRef._query.queryIdentifier();\n  }\n  /**\n   * GETTERS\n   */\n\n  /**\n   * The parent location of a Reference, or null for the root Reference.\n   * @type {Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#parent}\n   */\n\n\n  get parent() {\n    if (this.path === '/') return null;\n    return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n  }\n  /**\n   * A reference to itself\n   * @type {!Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#ref}\n   */\n\n\n  get ref() {\n    return this;\n  }\n  /**\n   * Reference to the root of the database: '/'\n   * @type {!Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#root}\n   */\n\n\n  get root() {\n    return new Reference(this._database, '/');\n  }\n  /**\n   * INTERNALS\n   */\n\n  /**\n   * Generate a unique registration key.\n   *\n   * @return {string}\n   */\n\n\n  _getRegistrationKey(eventType) {\n    return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}$${listeners}$${eventType}`;\n  }\n  /**\n   * Generate a string that uniquely identifies this\n   * combination of path and query modifiers\n   *\n   * @return {string}\n   * @private\n   */\n\n\n  _getRefKey() {\n    return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}`;\n  }\n  /**\n   *\n   * @param obj\n   * @returns {Object}\n   * @private\n   */\n\n\n  _serializeObject(obj) {\n    if (!isObject(obj)) return obj; // json stringify then parse it calls toString on Objects / Classes\n    // that support it i.e new Date() becomes a ISO string.\n\n    return tryJSONParse(tryJSONStringify(obj));\n  }\n  /**\n   *\n   * @param value\n   * @returns {*}\n   * @private\n   */\n\n\n  _serializeAnyType(value) {\n    if (isObject(value)) {\n      return {\n        type: 'object',\n        value: this._serializeObject(value)\n      };\n    }\n\n    return {\n      type: typeof value,\n      value\n    };\n  }\n  /**\n   * Register a listener for data changes at the current ref's location.\n   * The primary method of reading data from a Database.\n   *\n   * Listeners can be unbound using {@link off}.\n   *\n   * Event Types:\n   *\n   * - value: {@link callback}.\n   * - child_added: {@link callback}\n   * - child_removed: {@link callback}\n   * - child_changed: {@link callback}\n   * - child_moved: {@link callback}\n   *\n   * @param {ReferenceEventType} eventType - Type of event to attach a callback for.\n   * @param {ReferenceEventCallback} callback - Function that will be called\n   * when the event occurs with the new data.\n   * @param {cancelCallbackOrContext=} cancelCallbackOrContext - Optional callback that is called\n   * if the event subscription fails. {@link cancelCallbackOrContext}\n   * @param {*=} context - Optional object to bind the callbacks to when calling them.\n   * @returns {ReferenceEventCallback} callback function, unmodified (unbound), for\n   * convenience if you want to pass an inline function to on() and store it later for\n   * removing using off().\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#on}\n   */\n\n\n  on(eventType, callback, cancelCallbackOrContext, context) {\n    if (!eventType) {\n      throw new Error('Query.on failed: Function called with 0 arguments. Expects at least 2.');\n    }\n\n    if (!isString(eventType) || !ReferenceEventTypes[eventType]) {\n      throw new Error(`Query.on failed: First argument must be a valid string event type: \"${Object.keys(ReferenceEventTypes).join(', ')}\"`);\n    }\n\n    if (!callback) {\n      throw new Error('Query.on failed: Function called with 1 argument. Expects at least 2.');\n    }\n\n    if (!isFunction(callback)) {\n      throw new Error('Query.on failed: Second argument must be a valid function.');\n    }\n\n    if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && !isObject(context) && !isObject(cancelCallbackOrContext)) {\n      throw new Error('Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n    }\n\n    if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && context) {\n      throw new Error('Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n    }\n\n    const eventRegistrationKey = this._getRegistrationKey(eventType);\n\n    const registrationCancellationKey = `${eventRegistrationKey}$cancelled`;\n\n    const _context = cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) ? cancelCallbackOrContext : context;\n\n    const registrationObj = {\n      eventType,\n      ref: this,\n      path: this.path,\n      key: this._getRefKey(),\n      appName: this._database.app.name,\n      dbURL: this._database.databaseUrl,\n      eventRegistrationKey\n    };\n    SyncTree.addRegistration({ ...registrationObj,\n      listener: _context ? callback.bind(_context) : callback\n    });\n\n    if (cancelCallbackOrContext && isFunction(cancelCallbackOrContext)) {\n      // cancellations have their own separate registration\n      // as these are one off events, and they're not guaranteed\n      // to occur either, only happens on failure to register on native\n      SyncTree.addRegistration({\n        ref: this,\n        once: true,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        dbURL: this._database.databaseUrl,\n        eventType: `${eventType}$cancelled`,\n        eventRegistrationKey: registrationCancellationKey,\n        listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext\n      });\n    } // initialise the native listener if not already listening\n\n\n    getNativeModule(this._database).on({\n      eventType,\n      path: this.path,\n      key: this._getRefKey(),\n      appName: this._database.app.name,\n      modifiers: this._query.getModifiers(),\n      hasCancellationCallback: isFunction(cancelCallbackOrContext),\n      registration: {\n        eventRegistrationKey,\n        key: registrationObj.key,\n        registrationCancellationKey\n      }\n    }); // increment number of listeners - just a short way of making\n    // every registration unique per .on() call\n\n    listeners += 1; // return original unbound successCallback for\n    // the purposes of calling .off(eventType, callback) at a later date\n\n    return callback;\n  }\n  /**\n   * Detaches a callback previously attached with on().\n   *\n   * Detach a callback previously attached with on(). Note that if on() was called\n   * multiple times with the same eventType and callback, the callback will be called\n   * multiple times for each event, and off() must be called multiple times to\n   * remove the callback. Calling off() on a parent listener will not automatically\n   * remove listeners registered on child nodes, off() must also be called on any\n   * child listeners to remove the callback.\n   *\n   *  If a callback is not specified, all callbacks for the specified eventType will be removed.\n   * Similarly, if no eventType or callback is specified, all callbacks for the Reference will be removed.\n   * @param eventType\n   * @param originalCallback\n   */\n\n\n  off(eventType = '', originalCallback) {\n    if (!arguments.length) {\n      // Firebase Docs:\n      //     if no eventType or callback is specified, all callbacks for the Reference will be removed.\n      return SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPath(this.path));\n    }\n    /*\n     * VALIDATE ARGS\n     */\n\n\n    if (eventType && (!isString(eventType) || !ReferenceEventTypes[eventType])) {\n      throw new Error(`Query.off failed: First argument must be a valid string event type: \"${Object.keys(ReferenceEventTypes).join(', ')}\"`);\n    }\n\n    if (originalCallback && !isFunction(originalCallback)) {\n      throw new Error('Query.off failed: Function called with 2 arguments, but second optional argument was not a function.');\n    } // Firebase Docs:\n    //     Note that if on() was called\n    //     multiple times with the same eventType and callback, the callback will be called\n    //     multiple times for each event, and off() must be called multiple times to\n    //     remove the callback.\n    // Remove only a single registration\n\n\n    if (eventType && originalCallback) {\n      const registration = SyncTree.getOneByPathEventListener(this.path, eventType, originalCallback);\n      if (!registration) return []; // remove the paired cancellation registration if any exist\n\n      SyncTree.removeListenersForRegistrations([`${registration}$cancelled`]); // remove only the first registration to match firebase web sdk\n      // call multiple times to remove multiple registrations\n\n      return SyncTree.removeListenerRegistrations(originalCallback, [registration]);\n    } // Firebase Docs:\n    //     If a callback is not specified, all callbacks for the specified eventType will be removed.\n\n\n    const registrations = SyncTree.getRegistrationsByPathEvent(this.path, eventType);\n    SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPathEvent(this.path, `${eventType}$cancelled`));\n    return SyncTree.removeListenersForRegistrations(registrations);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
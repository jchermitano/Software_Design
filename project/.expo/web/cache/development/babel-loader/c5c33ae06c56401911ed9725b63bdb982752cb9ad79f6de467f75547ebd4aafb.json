{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { isAndroid, isIOS } from \"../../utils\";\nvar AuthSettings = function () {\n  function AuthSettings(auth) {\n    _classCallCheck(this, AuthSettings);\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n  return _createClass(AuthSettings, [{\n    key: \"appVerificationDisabledForTesting\",\n    get: function get() {\n      return this._appVerificationDisabledForTesting;\n    },\n    set: function set(disabled) {\n      if (isIOS) {\n        this._appVerificationDisabledForTesting = disabled;\n        getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n      }\n    }\n  }, {\n    key: \"setAutoRetrievedSmsCodeForPhoneNumber\",\n    value: function setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n      if (isAndroid) {\n        return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n      }\n      return Promise.resolve(null);\n    }\n  }]);\n}();\nexport { AuthSettings as default };","map":{"version":3,"names":["getNativeModule","isAndroid","isIOS","AuthSettings","auth","_classCallCheck","_auth","_appVerificationDisabledForTesting","_createClass","key","get","set","disabled","setAppVerificationDisabledForTesting","value","setAutoRetrievedSmsCodeForPhoneNumber","phoneNumber","smsCode","Promise","resolve","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/auth/AuthSettings.js"],"sourcesContent":["import { getNativeModule } from '../../utils/native';\nimport { isAndroid, isIOS } from '../../utils';\n\n/**\n * Interface representing an Auth instance's settings, currently used\n * for enabling/disabling app verification for phone Auth testing. *\n */\nexport default class AuthSettings {\n  constructor(auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @return {boolean}\n   */\n\n\n  get appVerificationDisabledForTesting() {\n    return this._appVerificationDisabledForTesting;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @param disabled\n   */\n\n\n  set appVerificationDisabledForTesting(disabled) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n  /**\n   * The phone number and SMS code here must have been configured in the\n   * Firebase Console (Authentication > Sign In Method > Phone).\n   *\n   * Calling this method a second time will overwrite the previously passed parameters.\n   * Only one number can be configured at a given time.\n   *\n   * @platform Android\n   * @param phoneNumber\n   * @param smsCode\n   * @return {*}\n   */\n\n\n  setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n    if (isAndroid) {\n      return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n\n    return Promise.resolve(null);\n  }\n\n}"],"mappings":";;AAAA,SAASA,eAAe;AACxB,SAASC,SAAS,EAAEC,KAAK;AAAsB,IAM1BC,YAAY;EAC/B,SAAAA,aAAYC,IAAI,EAAE;IAAAC,eAAA,OAAAF,YAAA;IAChB,IAAI,CAACG,KAAK,GAAGF,IAAI;IACjB,IAAI,CAACG,kCAAkC,GAAG,KAAK;EACjD;EAAC,OAAAC,YAAA,CAAAL,YAAA;IAAAM,GAAA;IAAAC,GAAA,EASD,SAAAA,IAAA,EAAwC;MACtC,OAAO,IAAI,CAACH,kCAAkC;IAChD,CAAC;IAAAI,GAAA,EASD,SAAAA,IAAsCC,QAAQ,EAAE;MAC9C,IAAIV,KAAK,EAAE;QACT,IAAI,CAACK,kCAAkC,GAAGK,QAAQ;QAClDZ,eAAe,CAAC,IAAI,CAACM,KAAK,CAAC,CAACO,oCAAoC,CAACD,QAAQ,CAAC;MAC5E;IACF;EAAC;IAAAH,GAAA;IAAAK,KAAA,EAeD,SAAAC,sCAAsCC,WAAW,EAAEC,OAAO,EAAE;MAC1D,IAAIhB,SAAS,EAAE;QACb,OAAOD,eAAe,CAAC,IAAI,CAACM,KAAK,CAAC,CAACS,qCAAqC,CAACC,WAAW,EAAEC,OAAO,CAAC;MAChG;MAEA,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;IAC9B;EAAC;AAAA;AAAA,SAlDkBhB,YAAY,IAAAiB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isIOS } from \"../../utils\";\nimport { getLogger } from \"../../utils/log\";\nimport { getNativeModule } from \"../../utils/native\";\nvar IOSNotification = function () {\n  function IOSNotification(notification, notifications, data) {\n    _classCallCheck(this, IOSNotification);\n    this._notification = notification;\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments || [];\n      this._badge = data.badge;\n      this._category = data.category;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    } else {\n      this._attachments = [];\n    }\n    if (!isIOS || !notifications || !notifications.ios) {\n      return this;\n    }\n    var complete = function complete(fetchResult) {\n      var notificationId = notification.notificationId;\n      if (notificationId && notifications) {\n        getLogger(notifications).debug(`Completion handler called for notificationId=${notificationId}`);\n        getNativeModule(notifications).complete(notificationId, fetchResult);\n      }\n    };\n    if (notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n  }\n  return _createClass(IOSNotification, [{\n    key: \"alertAction\",\n    get: function get() {\n      return this._alertAction;\n    }\n  }, {\n    key: \"attachments\",\n    get: function get() {\n      return this._attachments;\n    }\n  }, {\n    key: \"badge\",\n    get: function get() {\n      return this._badge;\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return this._category;\n    }\n  }, {\n    key: \"hasAction\",\n    get: function get() {\n      return this._hasAction;\n    }\n  }, {\n    key: \"launchImage\",\n    get: function get() {\n      return this._launchImage;\n    }\n  }, {\n    key: \"threadIdentifier\",\n    get: function get() {\n      return this._threadIdentifier;\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      return this._complete;\n    }\n  }, {\n    key: \"addAttachment\",\n    value: function addAttachment(identifier, url, options) {\n      this._attachments.push({\n        identifier: identifier,\n        options: options,\n        url: url\n      });\n      return this._notification;\n    }\n  }, {\n    key: \"setAlertAction\",\n    value: function setAlertAction(alertAction) {\n      this._alertAction = alertAction;\n      return this._notification;\n    }\n  }, {\n    key: \"setBadge\",\n    value: function setBadge(badge) {\n      this._badge = badge;\n      return this._notification;\n    }\n  }, {\n    key: \"setCategory\",\n    value: function setCategory(category) {\n      this._category = category;\n      return this._notification;\n    }\n  }, {\n    key: \"setHasAction\",\n    value: function setHasAction(hasAction) {\n      this._hasAction = hasAction;\n      return this._notification;\n    }\n  }, {\n    key: \"setLaunchImage\",\n    value: function setLaunchImage(launchImage) {\n      this._launchImage = launchImage;\n      return this._notification;\n    }\n  }, {\n    key: \"setThreadIdentifier\",\n    value: function setThreadIdentifier(threadIdentifier) {\n      this._threadIdentifier = threadIdentifier;\n      return this._notification;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        alertAction: this._alertAction,\n        attachments: this._attachments,\n        badge: this._badge,\n        category: this._category,\n        hasAction: this._hasAction,\n        launchImage: this._launchImage,\n        threadIdentifier: this._threadIdentifier\n      };\n    }\n  }]);\n}();\nexport { IOSNotification as default };","map":{"version":3,"names":["isIOS","getLogger","getNativeModule","IOSNotification","notification","notifications","data","_classCallCheck","_notification","_alertAction","alertAction","_attachments","attachments","_badge","badge","_category","category","_hasAction","hasAction","_launchImage","launchImage","_threadIdentifier","threadIdentifier","ios","complete","fetchResult","notificationId","debug","shouldAutoComplete","backgroundFetchResult","noData","_complete","_createClass","key","get","value","addAttachment","identifier","url","options","push","setAlertAction","setBadge","setCategory","setHasAction","setLaunchImage","setThreadIdentifier","build","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/notifications/IOSNotification.js"],"sourcesContent":["/**\n * \n * IOSNotification representation wrapper\n */\nimport { isIOS } from '../../utils';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nexport default class IOSNotification {\n  constructor(notification, notifications, data) {\n    this._notification = notification;\n\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments || [];\n      this._badge = data.badge;\n      this._category = data.category;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    } else {\n      this._attachments = [];\n    }\n\n    if (!isIOS || !notifications || !notifications.ios) {\n      return this;\n    } // IOS + Native Notification Only\n\n\n    const complete = fetchResult => {\n      const {\n        notificationId\n      } = notification; // && notifications check for Flow\n\n      if (notificationId && notifications) {\n        getLogger(notifications).debug(`Completion handler called for notificationId=${notificationId}`);\n        getNativeModule(notifications).complete(notificationId, fetchResult);\n      }\n    };\n\n    if (notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n  }\n\n  get alertAction() {\n    return this._alertAction;\n  }\n\n  get attachments() {\n    return this._attachments;\n  }\n\n  get badge() {\n    return this._badge;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get hasAction() {\n    return this._hasAction;\n  }\n\n  get launchImage() {\n    return this._launchImage;\n  }\n\n  get threadIdentifier() {\n    return this._threadIdentifier;\n  }\n\n  get complete() {\n    return this._complete;\n  }\n  /**\n   *\n   * @param identifier\n   * @param url\n   * @param options\n   * @returns {Notification}\n   */\n\n\n  addAttachment(identifier, url, options) {\n    this._attachments.push({\n      identifier,\n      options,\n      url\n    });\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param alertAction\n   * @returns {Notification}\n   */\n\n\n  setAlertAction(alertAction) {\n    this._alertAction = alertAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param badge\n   * @returns {Notification}\n   */\n\n\n  setBadge(badge) {\n    this._badge = badge;\n    return this._notification;\n  }\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n\n\n  setCategory(category) {\n    this._category = category;\n    return this._notification;\n  }\n  /**\n   *\n   * @param hasAction\n   * @returns {Notification}\n   */\n\n\n  setHasAction(hasAction) {\n    this._hasAction = hasAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param launchImage\n   * @returns {Notification}\n   */\n\n\n  setLaunchImage(launchImage) {\n    this._launchImage = launchImage;\n    return this._notification;\n  }\n  /**\n   *\n   * @param threadIdentifier\n   * @returns {Notification}\n   */\n\n\n  setThreadIdentifier(threadIdentifier) {\n    this._threadIdentifier = threadIdentifier;\n    return this._notification;\n  }\n\n  build() {\n    // TODO: Validation of required fields\n    return {\n      alertAction: this._alertAction,\n      attachments: this._attachments,\n      badge: this._badge,\n      category: this._category,\n      hasAction: this._hasAction,\n      launchImage: this._launchImage,\n      threadIdentifier: this._threadIdentifier\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
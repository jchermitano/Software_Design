{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { db } from \"../config.js\";\nimport { ref, push, set } from 'firebase/database';\nimport moment from 'moment';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddData = function AddData() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    variety = _useState2[0],\n    setVariety = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ripeness = _useState4[0],\n    setRipeness = _useState4[1];\n  var dataAddOn = function dataAddOn() {\n    if (!variety) {\n      alert('Please select a variety  before submitting.');\n      return;\n    }\n    if (!ripeness) {\n      alert('Please select a ripeness before submitting.');\n      return;\n    }\n    var formattedDate = moment(new Date()).format('YYYY-MM-DD / HH:mm:ss');\n    var newDataRef = push(ref(db));\n    set(newDataRef, {\n      variety: variety,\n      ripeness: ripeness,\n      dateAndtime: formattedDate\n    });\n    setVariety('');\n    setRipeness('');\n  };\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.format,\n      children: [_jsx(Text, {\n        style: styles.pickerTitle,\n        children: \" VARIETY \"\n      }), _jsxs(Picker, {\n        style: styles.pickerStyles,\n        selectedValue: variety,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setVariety(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Choose Variety of Watermelon\",\n          value: \"\"\n        }), _jsx(Picker.Item, {\n          label: \"Sugar Baby\",\n          value: \"Sugar Baby\"\n        }), _jsx(Picker.Item, {\n          label: \"Crimson\",\n          value: \"Crimson\"\n        })]\n      })]\n    }), _jsxs(Picker, {\n      style: styles.pickerStyles,\n      selectedValue: ripeness,\n      onValueChange: function onValueChange(itemValue, itemIndex) {\n        return setRipeness(itemValue);\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"Choose Ripeness of Watermelon\",\n        value: \"\"\n      }), _jsx(Picker.Item, {\n        label: \"Ripe\",\n        value: \"Ripe\"\n      }), _jsx(Picker.Item, {\n        label: \"Unripe\",\n        value: \"Unripe\"\n      }), _jsx(Picker.Item, {\n        label: \"Overripe\",\n        value: \"Overripe\"\n      })]\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: dataAddOn\n    })]\n  });\n};\nexport default AddData;\nvar styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 10,\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 5\n  },\n  pickerStyles: {\n    width: '70%',\n    height: 50,\n    backgroundColor: 'gray',\n    color: 'white',\n    paddingBottom: 5\n  },\n  pickerTitle: {\n    paddingTop: 15,\n    fontStyle: 'normal'\n  },\n  format: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","useState","View","Picker","Button","StyleSheet","Text","db","ref","push","set","moment","jsx","_jsx","jsxs","_jsxs","AddData","_useState","_useState2","_slicedToArray","variety","setVariety","_useState3","_useState4","ripeness","setRipeness","dataAddOn","alert","formattedDate","Date","format","newDataRef","dateAndtime","children","style","styles","pickerTitle","pickerStyles","selectedValue","onValueChange","itemValue","itemIndex","Item","label","value","title","onPress","create","input","borderWidth","borderColor","margin","padding","fontSize","borderRadius","width","height","backgroundColor","color","paddingBottom","paddingTop","fontStyle","flexDirection"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Picker, Button, StyleSheet, Text } from 'react-native';\nimport { db } from '../config.js';\nimport { ref, push, set } from 'firebase/database';\nimport moment from 'moment';\n\nconst AddData = () => {\n  const [variety, setVariety] = useState('');\n  const [ripeness, setRipeness] = useState('');\n\n  const dataAddOn = () => {\n    if (!variety) {\n      alert('Please select a variety  before submitting.');\n      return;\n    }\n    if (!ripeness) {\n      alert('Please select a ripeness before submitting.');\n      return;\n    }\n    const formattedDate = moment(new Date()).format('YYYY-MM-DD / HH:mm:ss');\n    const newDataRef = push(ref(db));\n    set(newDataRef, {\n      variety: variety,\n      ripeness: ripeness,\n      dateAndtime: formattedDate,\n    });\n    setVariety('');\n    setRipeness('');\n  };\n\n  return (\n    <View>\n      <View style={styles.format}>\n      <Text style={styles.pickerTitle}> VARIETY </Text>\n      <Picker\n        style={styles.pickerStyles}\n        selectedValue={variety}\n        onValueChange={(itemValue, itemIndex) => setVariety(itemValue)}\n      >\n        <Picker.Item label=\"Choose Variety of Watermelon\" value=\"\" />\n        <Picker.Item label=\"Sugar Baby\" value=\"Sugar Baby\" />\n        <Picker.Item label=\"Crimson\" value=\"Crimson\" />\n        {/* Add more variety options as needed */}\n      </Picker>\n      </View>\n      <Picker\n        style={styles.pickerStyles}\n        selectedValue={ripeness}\n        onValueChange={(itemValue, itemIndex) => setRipeness(itemValue)}\n      >\n        <Picker.Item label=\"Choose Ripeness of Watermelon\" value=\"\" />\n        <Picker.Item label=\"Ripe\" value=\"Ripe\" />\n        <Picker.Item label=\"Unripe\" value=\"Unripe\" />\n        <Picker.Item label=\"Overripe\" value=\"Overripe\" />\n      </Picker>\n      <Button title='Submit' onPress={dataAddOn}/>\n    </View>\n  );\n};\n\nexport default AddData;\n\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 10,\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 5,\n  },\n  pickerStyles:{\n    width:'70%',\n    height:50,\n    backgroundColor:'gray',\n    color:'white',\n    paddingBottom:5\n  },\n  pickerTitle: {\n    paddingTop: 15,\n    fontStyle:'normal'\n  },\n  format: {\n    flexDirection:'row'\n  },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,EAAE;AACX,SAASC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE5B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAA8BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAgCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB,IAAI,CAACN,OAAO,EAAE;MACZO,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IACA,IAAI,CAACH,QAAQ,EAAE;MACbG,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IACA,IAAMC,aAAa,GAAGjB,MAAM,CAAC,IAAIkB,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,uBAAuB,CAAC;IACxE,IAAMC,UAAU,GAAGtB,IAAI,CAACD,GAAG,CAACD,EAAE,CAAC,CAAC;IAChCG,GAAG,CAACqB,UAAU,EAAE;MACdX,OAAO,EAAEA,OAAO;MAChBI,QAAQ,EAAEA,QAAQ;MAClBQ,WAAW,EAAEJ;IACf,CAAC,CAAC;IACFP,UAAU,CAAC,EAAE,CAAC;IACdI,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,OACEV,KAAA,CAACb,IAAI;IAAA+B,QAAA,GACHlB,KAAA,CAACb,IAAI;MAACgC,KAAK,EAAEC,MAAM,CAACL,MAAO;MAAAG,QAAA,GAC3BpB,IAAA,CAACP,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACC,WAAY;QAAAH,QAAA,EAAC;MAAS,CAAM,CAAC,EACjDlB,KAAA,CAACZ,MAAM;QACL+B,KAAK,EAAEC,MAAM,CAACE,YAAa;QAC3BC,aAAa,EAAElB,OAAQ;QACvBmB,aAAa,EAAE,SAAAA,cAACC,SAAS,EAAEC,SAAS;UAAA,OAAKpB,UAAU,CAACmB,SAAS,CAAC;QAAA,CAAC;QAAAP,QAAA,GAE/DpB,IAAA,CAACV,MAAM,CAACuC,IAAI;UAACC,KAAK,EAAC,8BAA8B;UAACC,KAAK,EAAC;QAAE,CAAE,CAAC,EAC7D/B,IAAA,CAACV,MAAM,CAACuC,IAAI;UAACC,KAAK,EAAC,YAAY;UAACC,KAAK,EAAC;QAAY,CAAE,CAAC,EACrD/B,IAAA,CAACV,MAAM,CAACuC,IAAI;UAACC,KAAK,EAAC,SAAS;UAACC,KAAK,EAAC;QAAS,CAAE,CAAC;MAAA,CAEzC,CAAC;IAAA,CACH,CAAC,EACP7B,KAAA,CAACZ,MAAM;MACL+B,KAAK,EAAEC,MAAM,CAACE,YAAa;MAC3BC,aAAa,EAAEd,QAAS;MACxBe,aAAa,EAAE,SAAAA,cAACC,SAAS,EAAEC,SAAS;QAAA,OAAKhB,WAAW,CAACe,SAAS,CAAC;MAAA,CAAC;MAAAP,QAAA,GAEhEpB,IAAA,CAACV,MAAM,CAACuC,IAAI;QAACC,KAAK,EAAC,+BAA+B;QAACC,KAAK,EAAC;MAAE,CAAE,CAAC,EAC9D/B,IAAA,CAACV,MAAM,CAACuC,IAAI;QAACC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;MAAM,CAAE,CAAC,EACzC/B,IAAA,CAACV,MAAM,CAACuC,IAAI;QAACC,KAAK,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAQ,CAAE,CAAC,EAC7C/B,IAAA,CAACV,MAAM,CAACuC,IAAI;QAACC,KAAK,EAAC,UAAU;QAACC,KAAK,EAAC;MAAU,CAAE,CAAC;IAAA,CAC3C,CAAC,EACT/B,IAAA,CAACT,MAAM;MAACyC,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAEpB;IAAU,CAAC,CAAC;EAAA,CACxC,CAAC;AAEX,CAAC;AAED,eAAeV,OAAO;AAEtB,IAAMmB,MAAM,GAAG9B,UAAU,CAAC0C,MAAM,CAAC;EAC/BC,KAAK,EAAE;IACLC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,OAAO;IACpBC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDjB,YAAY,EAAC;IACXkB,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,EAAE;IACTC,eAAe,EAAC,MAAM;IACtBC,KAAK,EAAC,OAAO;IACbC,aAAa,EAAC;EAChB,CAAC;EACDvB,WAAW,EAAE;IACXwB,UAAU,EAAE,EAAE;IACdC,SAAS,EAAC;EACZ,CAAC;EACD/B,MAAM,EAAE;IACNgC,aAAa,EAAC;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
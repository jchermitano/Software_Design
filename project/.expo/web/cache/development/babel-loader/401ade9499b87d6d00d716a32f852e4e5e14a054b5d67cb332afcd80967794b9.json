{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PieChart } from 'react-native-chart-kit';\nimport { ref, onValue } from 'firebase/database';\nimport { db } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar chartConfig = {\n  backgroundColor: 'transparent',\n  backgroundGradientFrom: '#eff3ff',\n  backgroundGradientTo: '#efefef',\n  decimalPlaces: 0,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return `rgba(0, 0, 0, ${opacity})`;\n  },\n  style: {\n    borderRadius: 16\n  }\n};\nvar PieGraph = function PieGraph(_ref) {\n  var dataType = _ref.dataType;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    graphData = _useState2[0],\n    setGraphData = _useState2[1];\n  useEffect(function () {\n    var usersRef = ref(db);\n    var onDataChange = function onDataChange(snapshot) {\n      if (snapshot.exists()) {\n        var usersArray = Object.values(snapshot.val());\n        var counts = usersArray.reduce(function (acc, user) {\n          var dataValue = user[dataType];\n          if (dataValue) {\n            acc[dataValue] = (acc[dataValue] || 0) + 1;\n          }\n          return acc;\n        }, {});\n        var formattedData = Object.keys(counts).map(function (value, index) {\n          return {\n            name: value,\n            population: counts[value],\n            color: getColor(index),\n            legendFontColor: '#7F7F7F',\n            legendFontSize: 15\n          };\n        });\n        setGraphData(formattedData);\n      } else {\n        console.log('No data available');\n      }\n    };\n    onValue(usersRef, onDataChange);\n    return function () {\n      off(usersRef, onDataChange);\n    };\n  }, [dataType]);\n  var getColor = function getColor(index) {\n    var colors = ['#F00', '#0F0', '#00F', '#FF0', '#F0F', '#0FF', '#800', '#080', '#008'];\n    return colors[index % colors.length];\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: graphData.length > 0 && _jsx(PieChart, {\n      data: graphData,\n      width: 500,\n      height: 420,\n      chartConfig: chartConfig,\n      accessor: 'population',\n      backgroundColor: 'transparent',\n      paddingLeft: '50',\n      absolute: true\n    })\n  });\n};\nexport default PieGraph;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","PieChart","ref","onValue","db","jsx","_jsx","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","style","borderRadius","PieGraph","_ref","dataType","_useState","_useState2","_slicedToArray","graphData","setGraphData","usersRef","onDataChange","snapshot","exists","usersArray","Object","values","val","counts","reduce","acc","user","dataValue","formattedData","keys","map","value","index","name","population","getColor","legendFontColor","legendFontSize","console","log","off","colors","styles","container","children","data","width","height","accessor","paddingLeft","absolute","create","flex","alignItems","justifyContent"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/component/chart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { PieChart } from 'react-native-chart-kit';\r\nimport { ref, onValue } from 'firebase/database';\r\nimport { db } from '../config';\r\n\r\nconst chartConfig = {\r\n  backgroundColor: 'transparent',\r\n  backgroundGradientFrom: '#eff3ff',\r\n  backgroundGradientTo: '#efefef',\r\n  decimalPlaces: 0,\r\n  color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n  style: {\r\n    borderRadius: 16,\r\n  },\r\n};\r\n\r\nconst PieGraph = ({ dataType }) => {\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const usersRef = ref(db);\r\n\r\n    const onDataChange = (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const usersArray = Object.values(snapshot.val());\r\n        const counts = usersArray.reduce((acc, user) => {\r\n          const dataValue = user[dataType];\r\n          if (dataValue) { // Only count if data is defined\r\n            acc[dataValue] = (acc[dataValue] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        const formattedData = Object.keys(counts).map((value, index) => ({\r\n          name: value,\r\n          population: counts[value],\r\n          color: getColor(index),\r\n          legendFontColor: '#7F7F7F',\r\n          legendFontSize: 15,\r\n        }));\r\n\r\n        setGraphData(formattedData);\r\n      } else {\r\n        console.log('No data available');\r\n      }\r\n    };\r\n\r\n    onValue(usersRef, onDataChange);\r\n\r\n    return () => {\r\n      // Clean up listener when component unmounts\r\n      off(usersRef, onDataChange);\r\n    };\r\n  }, [dataType]);\r\n\r\n  const getColor = (index) => {\r\n    const colors = ['#F00', '#0F0', '#00F', '#FF0', '#F0F', '#0FF', '#800', '#080', '#008'];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {graphData.length > 0 && (\r\n        <PieChart\r\n          data={graphData}\r\n          width={500}\r\n          height={420}\r\n          chartConfig={chartConfig}\r\n          accessor={'population'}\r\n          backgroundColor={'transparent'}\r\n          paddingLeft={'50'}\r\n          absolute\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PieGraph;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
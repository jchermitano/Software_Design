{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { statics } from \"./\";\nimport AdRequest from \"./AdRequest\";\nimport { SharedEventEmitter } from \"../../utils/events\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { nativeToJSError } from \"../../utils\";\nvar subscriptions = [];\nvar RewardedVideo = function () {\n  function RewardedVideo(admob, adUnit) {\n    var _this = this;\n    _classCallCheck(this, RewardedVideo);\n    this._onRewardedVideoEvent = function (event) {\n      var eventType = `rewarded_video:${_this.adUnit}:${event.type}`;\n      var emitData = Object.assign({}, event);\n      switch (event.type) {\n        case 'onAdLoaded':\n          _this.loaded = true;\n          break;\n        case 'onAdFailedToLoad':\n          emitData = nativeToJSError(event.payload.code, event.payload.message);\n          emitData.type = event.type;\n          break;\n        default:\n      }\n      SharedEventEmitter.emit(eventType, emitData);\n      SharedEventEmitter.emit(`rewarded_video:${_this.adUnit}:*`, emitData);\n    };\n    for (var i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`rewarded_video_${adUnit}`);\n    SharedEventEmitter.addListener(`rewarded_video_${adUnit}`, this._onRewardedVideoEvent);\n  }\n  return _createClass(RewardedVideo, [{\n    key: \"loadAd\",\n    value: function loadAd(request) {\n      var adRequest = request;\n      if (!adRequest || !Object.keys(adRequest)) {\n        adRequest = new AdRequest().addTestDevice().build();\n      }\n      return getNativeModule(this._admob).rewardedVideoLoadAd(this.adUnit, adRequest);\n    }\n  }, {\n    key: \"setCustomData\",\n    value: function setCustomData(customData) {\n      return getNativeModule(this._admob).rewardedVideoSetCustomData(this.adUnit, customData);\n    }\n  }, {\n    key: \"isLoaded\",\n    value: function isLoaded() {\n      return this.loaded;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.loaded) {\n        getNativeModule(this._admob).rewardedVideoShowAd(this.adUnit);\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventType, listenerCb) {\n      var types = _objectSpread(_objectSpread({}, statics.EventTypes), statics.RewardedVideoEventTypes);\n      if (!types[eventType]) {\n        console.warn(`Invalid event type provided, must be one of: ${Object.keys(types).join(', ')}`);\n        return null;\n      }\n      var sub = SharedEventEmitter.addListener(`rewarded_video:${this.adUnit}:${eventType}`, listenerCb);\n      subscriptions.push(sub);\n      return sub;\n    }\n  }]);\n}();\nexport { RewardedVideo as default };","map":{"version":3,"names":["statics","AdRequest","SharedEventEmitter","getNativeModule","nativeToJSError","subscriptions","RewardedVideo","admob","adUnit","_this","_classCallCheck","_onRewardedVideoEvent","event","eventType","type","emitData","Object","assign","loaded","payload","code","message","emit","i","len","length","remove","_admob","removeAllListeners","addListener","_createClass","key","value","loadAd","request","adRequest","keys","addTestDevice","build","rewardedVideoLoadAd","setCustomData","customData","rewardedVideoSetCustomData","isLoaded","show","rewardedVideoShowAd","on","listenerCb","types","_objectSpread","EventTypes","RewardedVideoEventTypes","console","warn","join","sub","push","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/admob/RewardedVideo.js"],"sourcesContent":["import { statics } from './';\nimport AdRequest from './AdRequest';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getNativeModule } from '../../utils/native';\nimport { nativeToJSError } from '../../utils';\nlet subscriptions = [];\nexport default class RewardedVideo {\n  constructor(admob, adUnit) {\n    for (let i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`rewarded_video_${adUnit}`);\n    SharedEventEmitter.addListener(`rewarded_video_${adUnit}`, this._onRewardedVideoEvent);\n  }\n  /**\n   * Handle a JS emit event\n   * @param event\n   * @private\n   */\n\n\n  _onRewardedVideoEvent = event => {\n    const eventType = `rewarded_video:${this.adUnit}:${event.type}`;\n    let emitData = Object.assign({}, event);\n\n    switch (event.type) {\n      case 'onAdLoaded':\n        this.loaded = true;\n        break;\n\n      case 'onAdFailedToLoad':\n        emitData = nativeToJSError(event.payload.code, event.payload.message);\n        emitData.type = event.type;\n        break;\n\n      default:\n    }\n\n    SharedEventEmitter.emit(eventType, emitData);\n    SharedEventEmitter.emit(`rewarded_video:${this.adUnit}:*`, emitData);\n  };\n  /**\n   * Load an ad with an instance of AdRequest\n   * @param request\n   * @returns {*}\n   */\n\n  loadAd(request) {\n    let adRequest = request;\n\n    if (!adRequest || !Object.keys(adRequest)) {\n      adRequest = new AdRequest().addTestDevice().build();\n    }\n\n    return getNativeModule(this._admob).rewardedVideoLoadAd(this.adUnit, adRequest);\n  }\n  /**\n   * Set custom data\n   * @param customData\n   * @returns {*}\n   */\n\n\n  setCustomData(customData) {\n    return getNativeModule(this._admob).rewardedVideoSetCustomData(this.adUnit, customData);\n  }\n  /**\n   * Return a local instance of isLoaded\n   * @returns {boolean}\n   */\n\n\n  isLoaded() {\n    return this.loaded;\n  }\n  /**\n   * Show the advert - will only show if loaded\n   * @returns {*}\n   */\n\n\n  show() {\n    if (this.loaded) {\n      getNativeModule(this._admob).rewardedVideoShowAd(this.adUnit);\n    }\n  }\n  /**\n   * Listen to an Ad event\n   * @param eventType\n   * @param listenerCb\n   * @returns {null}\n   */\n\n\n  on(eventType, listenerCb) {\n    const types = { ...statics.EventTypes,\n      ...statics.RewardedVideoEventTypes\n    };\n\n    if (!types[eventType]) {\n      console.warn(`Invalid event type provided, must be one of: ${Object.keys(types).join(', ')}`);\n      return null;\n    }\n\n    const sub = SharedEventEmitter.addListener(`rewarded_video:${this.adUnit}:${eventType}`, listenerCb);\n    subscriptions.push(sub);\n    return sub;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
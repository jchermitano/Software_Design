{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Base64 from \"../../utils/Base64\";\nvar Blob = function () {\n  function Blob(binaryString) {\n    _classCallCheck(this, Blob);\n    this._binaryString = binaryString;\n  }\n  return _createClass(Blob, [{\n    key: \"isEqual\",\n    value: function isEqual(blob) {\n      if (!(blob instanceof Blob)) {\n        throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n      }\n      return this._binaryString === blob._binaryString;\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64() {\n      return Base64.btoa(this._binaryString);\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return new Uint8Array(this._binaryString.split('').map(function (c) {\n        return c.charCodeAt(0);\n      }));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return `firestore.Blob(base64: ${this.toBase64()})`;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(base64) {\n      if (typeof base64 !== 'string' || base64.length < 1) {\n        throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');\n      }\n      return new Blob(Base64.atob(base64));\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(array) {\n      if (!(array instanceof Uint8Array)) {\n        throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n      }\n      return new Blob(Array.prototype.map.call(array, function (char) {\n        return String.fromCharCode(char);\n      }).join(''));\n    }\n  }]);\n}();\nexport { Blob as default };","map":{"version":3,"names":["Base64","Blob","binaryString","_classCallCheck","_binaryString","_createClass","key","value","isEqual","blob","Error","toBase64","btoa","toUint8Array","Uint8Array","split","map","c","charCodeAt","toString","fromBase64String","base64","length","atob","fromUint8Array","array","Array","prototype","call","char","String","fromCharCode","join","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/Blob.js"],"sourcesContent":["import Base64 from '../../utils/Base64';\nexport default class Blob {\n  constructor(binaryString) {\n    this._binaryString = binaryString;\n  }\n  /**\n   * Creates a new Blob from the given Base64 string\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromBase64String\n   * @param base64 string\n   */\n\n\n  static fromBase64String(base64) {\n    if (typeof base64 !== 'string' || base64.length < 1) {\n      throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');\n    }\n\n    return new Blob(Base64.atob(base64));\n  }\n  /**\n   * Creates a new Blob from the given Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromUint8Array\n   * @param array Array\n   */\n\n\n  static fromUint8Array(array) {\n    if (!(array instanceof Uint8Array)) {\n      throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n    }\n\n    return new Blob(Array.prototype.map.call(array, char => String.fromCharCode(char)).join(''));\n  }\n  /**\n   * Returns 'true' if this Blob is equal to the provided one.\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#isEqual\n   * @param {*} blob Blob The Blob to compare against. Value must not be null.\n   * @returns boolean 'true' if this Blob is equal to the provided one.\n   */\n\n\n  isEqual(blob) {\n    if (!(blob instanceof Blob)) {\n      throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n    }\n\n    return this._binaryString === blob._binaryString;\n  }\n  /**\n   * Returns the bytes of a Blob as a Base64-encoded string.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toBase64\n   * @returns string The Base64-encoded string created from the Blob object.\n   */\n\n\n  toBase64() {\n    return Base64.btoa(this._binaryString);\n  }\n  /**\n   * Returns the bytes of a Blob in a new Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toUint8Array\n   * @returns non-null Uint8Array The Uint8Array created from the Blob object.\n   */\n\n\n  toUint8Array() {\n    return new Uint8Array(this._binaryString.split('').map(c => c.charCodeAt(0)));\n  }\n  /**\n   * Returns a string representation of this blob instance\n   *\n   * @returns {string}\n   * @memberof Blob\n   */\n\n\n  toString() {\n    return `firestore.Blob(base64: ${this.toBase64()})`;\n  }\n\n}"],"mappings":";;AAAA,OAAOA,MAAM;AAA2B,IACnBC,IAAI;EACvB,SAAAA,KAAYC,YAAY,EAAE;IAAAC,eAAA,OAAAF,IAAA;IACxB,IAAI,CAACG,aAAa,GAAGF,YAAY;EACnC;EAAC,OAAAG,YAAA,CAAAJ,IAAA;IAAAK,GAAA;IAAAC,KAAA,EAuCD,SAAAC,QAAQC,IAAI,EAAE;MACZ,IAAI,EAAEA,IAAI,YAAYR,IAAI,CAAC,EAAE;QAC3B,MAAM,IAAIS,KAAK,CAAC,oDAAoD,CAAC;MACvE;MAEA,OAAO,IAAI,CAACN,aAAa,KAAKK,IAAI,CAACL,aAAa;IAClD;EAAC;IAAAE,GAAA;IAAAC,KAAA,EASD,SAAAI,SAAA,EAAW;MACT,OAAOX,MAAM,CAACY,IAAI,CAAC,IAAI,CAACR,aAAa,CAAC;IACxC;EAAC;IAAAE,GAAA;IAAAC,KAAA,EASD,SAAAM,aAAA,EAAe;MACb,OAAO,IAAIC,UAAU,CAAC,IAAI,CAACV,aAAa,CAACW,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;MAAA,EAAC,CAAC;IAC/E;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EASD,SAAAY,SAAA,EAAW;MACT,OAAQ,0BAAyB,IAAI,CAACR,QAAQ,CAAC,CAAE,GAAE;IACrD;EAAC;IAAAL,GAAA;IAAAC,KAAA,EArED,SAAAa,iBAAwBC,MAAM,EAAE;MAC9B,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;QACnD,MAAM,IAAIZ,KAAK,CAAC,oFAAoF,CAAC;MACvG;MAEA,OAAO,IAAIT,IAAI,CAACD,MAAM,CAACuB,IAAI,CAACF,MAAM,CAAC,CAAC;IACtC;EAAC;IAAAf,GAAA;IAAAC,KAAA,EASD,SAAAiB,eAAsBC,KAAK,EAAE;MAC3B,IAAI,EAAEA,KAAK,YAAYX,UAAU,CAAC,EAAE;QAClC,MAAM,IAAIJ,KAAK,CAAC,iEAAiE,CAAC;MACpF;MAEA,OAAO,IAAIT,IAAI,CAACyB,KAAK,CAACC,SAAS,CAACX,GAAG,CAACY,IAAI,CAACH,KAAK,EAAE,UAAAI,IAAI;QAAA,OAAIC,MAAM,CAACC,YAAY,CAACF,IAAI,CAAC;MAAA,EAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9F;EAAC;AAAA;AAAA,SAjCkB/B,IAAI,IAAAgC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
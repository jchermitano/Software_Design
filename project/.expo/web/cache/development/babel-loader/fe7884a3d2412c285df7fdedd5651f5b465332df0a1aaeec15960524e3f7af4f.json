{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport FieldPath from \"./FieldPath\";\nimport QuerySnapshot from \"./QuerySnapshot\";\nimport SnapshotError from \"./SnapshotError\";\nimport DocumentSnapshot from \"./DocumentSnapshot\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { buildNativeArray, buildTypeMap } from \"./utils/serialize\";\nimport { firestoreAutoId, isFunction, isObject } from \"../../utils\";\nimport { getAppEventName, SharedEventEmitter } from \"../../utils/events\";\nvar DIRECTIONS = {\n  ASC: 'ASCENDING',\n  asc: 'ASCENDING',\n  DESC: 'DESCENDING',\n  desc: 'DESCENDING'\n};\nvar OPERATORS = {\n  '=': 'EQUAL',\n  '==': 'EQUAL',\n  '>': 'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<': 'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  'array-contains': 'ARRAY_CONTAINS'\n};\nfunction buildNativeFieldPath(fieldPath) {\n  if (fieldPath instanceof FieldPath) {\n    return {\n      elements: fieldPath._segments,\n      type: 'fieldpath'\n    };\n  }\n  return {\n    string: fieldPath,\n    type: 'string'\n  };\n}\nvar Query = function () {\n  function Query(firestore, path, fieldFilters, fieldOrders, queryOptions) {\n    _classCallCheck(this, Query);\n    this._fieldFilters = fieldFilters || [];\n    this._fieldOrders = fieldOrders || [];\n    this._firestore = firestore;\n    this._queryOptions = queryOptions || {};\n    this._referencePath = path;\n  }\n  return _createClass(Query, [{\n    key: \"firestore\",\n    get: function get() {\n      return this._firestore;\n    }\n  }, {\n    key: \"endAt\",\n    value: function endAt() {\n      for (var _len = arguments.length, snapshotOrVarArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n        snapshotOrVarArgs[_key] = arguments[_key];\n      }\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        endAt: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"endBefore\",\n    value: function endBefore() {\n      for (var _len2 = arguments.length, snapshotOrVarArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        snapshotOrVarArgs[_key2] = arguments[_key2];\n      }\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        endBefore: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      var _this = this;\n      if (options) {\n        if (!isObject(options)) {\n          return Promise.reject(new Error('Query.get failed: First argument must be an object.'));\n        }\n        if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n          return Promise.reject(new Error('Query.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n        }\n      }\n      return getNativeModule(this._firestore).collectionGet(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, options).then(function (nativeData) {\n        return new QuerySnapshot(_this._firestore, _this, nativeData);\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherQuery) {\n      if (!(otherQuery instanceof Query)) {\n        throw new Error('firebase.firestore.Query.isEqual(*) expects an instance of Query.');\n      }\n      if (this._firestore.app.name !== otherQuery._firestore.app.name) {\n        return false;\n      }\n      if (this._firestore.app.options.projectId !== otherQuery._firestore.app.options.projectId) {\n        return false;\n      }\n      if (this._fieldFilters.length !== otherQuery._fieldFilters.length) {\n        return false;\n      }\n      for (var i = 0; i < this._fieldFilters.length; i++) {\n        var thisFieldFilter = this._fieldFilters[i];\n        var otherFieldFilter = otherQuery._fieldFilters[i];\n        if (thisFieldFilter.fieldPath.string !== otherFieldFilter.fieldPath.string) {\n          return false;\n        }\n        if (thisFieldFilter.fieldPath.type !== otherFieldFilter.fieldPath.type) {\n          return false;\n        }\n        if (thisFieldFilter.value.type !== otherFieldFilter.value.type) {\n          return false;\n        }\n        if (thisFieldFilter.value.value !== otherFieldFilter.value.value) {\n          return false;\n        }\n        if (thisFieldFilter.operator !== otherFieldFilter.operator) {\n          return false;\n        }\n      }\n      if (this._fieldOrders.length !== otherQuery._fieldOrders.length) {\n        return false;\n      }\n      for (var _i = 0; _i < this._fieldOrders.length; _i++) {\n        var thisFieldOrder = this._fieldOrders[_i];\n        var otherFieldOrder = otherQuery._fieldOrders[_i];\n        if (thisFieldOrder.direction !== otherFieldOrder.direction) {\n          return false;\n        }\n        if (thisFieldOrder.fieldPath.string !== otherFieldOrder.fieldPath.string) {\n          return false;\n        }\n        if (thisFieldOrder.fieldPath.type !== otherFieldOrder.fieldPath.type) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"limit\",\n    value: function limit(_limit) {\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        limit: _limit\n      });\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"onSnapshot\",\n    value: function onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n      var _this2 = this;\n      var observer;\n      var metadataChanges = {};\n      if (isFunction(optionsOrObserverOrOnNext)) {\n        if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n          throw new Error('Query.onSnapshot failed: Second argument must be a valid function.');\n        }\n        observer = {\n          next: optionsOrObserverOrOnNext,\n          error: observerOrOnNextOrOnError\n        };\n      } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n        if (optionsOrObserverOrOnNext.next) {\n          if (isFunction(optionsOrObserverOrOnNext.next)) {\n            if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n              throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n            }\n            observer = {\n              next: optionsOrObserverOrOnNext.next,\n              error: optionsOrObserverOrOnNext.error\n            };\n          } else {\n            throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n          metadataChanges = optionsOrObserverOrOnNext;\n          if (isFunction(observerOrOnNextOrOnError)) {\n            if (onError && !isFunction(onError)) {\n              throw new Error('Query.onSnapshot failed: Third argument must be a valid function.');\n            }\n            observer = {\n              next: observerOrOnNextOrOnError,\n              error: onError\n            };\n          } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n            if (isFunction(observerOrOnNextOrOnError.next)) {\n              if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n                throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n              }\n              observer = {\n                next: observerOrOnNextOrOnError.next,\n                error: observerOrOnNextOrOnError.error\n              };\n            } else {\n              throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n            }\n          } else {\n            throw new Error('Query.onSnapshot failed: Second argument must be a function or observer.');\n          }\n        } else {\n          throw new Error('Query.onSnapshot failed: First argument must be a function, observer or options.');\n        }\n      } else {\n        throw new Error('Query.onSnapshot failed: Called with invalid arguments.');\n      }\n      var listenerId = firestoreAutoId();\n      var listener = function listener(nativeQuerySnapshot) {\n        var querySnapshot = new QuerySnapshot(_this2._firestore, _this2, nativeQuerySnapshot);\n        observer.next(querySnapshot);\n      };\n      var unsubscribe;\n      var snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshot:${listenerId}`), listener);\n      var errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshotError:${listenerId}`), function (e) {\n        if (unsubscribe) unsubscribe();\n        var error = new SnapshotError(e);\n        if (observer.error) observer.error(error);else _this2.firestore.log.error(error);\n      });\n      getNativeModule(this._firestore).collectionOnSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId, metadataChanges);\n      unsubscribe = function unsubscribe() {\n        snapshotSubscription.remove();\n        errorSubscription.remove();\n        getNativeModule(_this2._firestore).collectionOffSnapshot(_this2._referencePath.relativeName, _this2._fieldFilters, _this2._fieldOrders, _this2._queryOptions, listenerId);\n      };\n      return unsubscribe;\n    }\n  }, {\n    key: \"orderBy\",\n    value: function orderBy(fieldPath) {\n      var directionStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n      if (this._queryOptions.startAt || this._queryOptions.startAfter || this._queryOptions.endAt || this._queryOptions.endBefore) {\n        throw new Error('Cannot specify an orderBy() constraint after calling ' + 'startAt(), startAfter(), endBefore() or endAt().');\n      }\n      var newOrder = {\n        direction: DIRECTIONS[directionStr],\n        fieldPath: buildNativeFieldPath(fieldPath)\n      };\n      var combinedOrders = this._fieldOrders.concat(newOrder);\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, combinedOrders, this._queryOptions);\n    }\n  }, {\n    key: \"startAfter\",\n    value: function startAfter() {\n      for (var _len3 = arguments.length, snapshotOrVarArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        snapshotOrVarArgs[_key3] = arguments[_key3];\n      }\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        startAfter: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"startAt\",\n    value: function startAt() {\n      for (var _len4 = arguments.length, snapshotOrVarArgs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        snapshotOrVarArgs[_key4] = arguments[_key4];\n      }\n      var options = _objectSpread(_objectSpread({}, this._queryOptions), {}, {\n        startAt: this._buildOrderByOption(snapshotOrVarArgs)\n      });\n      return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n    }\n  }, {\n    key: \"where\",\n    value: function where(fieldPath, opStr, value) {\n      var nativeValue = buildTypeMap(value);\n      var newFilter = {\n        fieldPath: buildNativeFieldPath(fieldPath),\n        operator: OPERATORS[opStr],\n        value: nativeValue\n      };\n      var combinedFilters = this._fieldFilters.concat(newFilter);\n      return new Query(this.firestore, this._referencePath, combinedFilters, this._fieldOrders, this._queryOptions);\n    }\n  }, {\n    key: \"_buildOrderByOption\",\n    value: function _buildOrderByOption(snapshotOrVarArgs) {\n      var values;\n      if (snapshotOrVarArgs.length === 1 && snapshotOrVarArgs[0] instanceof DocumentSnapshot) {\n        var docSnapshot = snapshotOrVarArgs[0];\n        values = [];\n        for (var i = 0; i < this._fieldOrders.length; i++) {\n          var fieldOrder = this._fieldOrders[i];\n          if (fieldOrder.fieldPath.type === 'string' && fieldOrder.fieldPath.string) {\n            values.push(docSnapshot.get(fieldOrder.fieldPath.string));\n          } else if (fieldOrder.fieldPath.elements) {\n            var fieldPath = _construct(FieldPath, _toConsumableArray(fieldOrder.fieldPath.elements));\n            values.push(docSnapshot.get(fieldPath));\n          }\n        }\n      } else {\n        values = snapshotOrVarArgs;\n      }\n      return buildNativeArray(values);\n    }\n  }]);\n}();\nexport { Query as default };","map":{"version":3,"names":["FieldPath","QuerySnapshot","SnapshotError","DocumentSnapshot","getNativeModule","buildNativeArray","buildTypeMap","firestoreAutoId","isFunction","isObject","getAppEventName","SharedEventEmitter","DIRECTIONS","ASC","asc","DESC","desc","OPERATORS","buildNativeFieldPath","fieldPath","elements","_segments","type","string","Query","firestore","path","fieldFilters","fieldOrders","queryOptions","_classCallCheck","_fieldFilters","_fieldOrders","_firestore","_queryOptions","_referencePath","_createClass","key","get","value","endAt","_len","arguments","length","snapshotOrVarArgs","Array","_key","options","_objectSpread","_buildOrderByOption","endBefore","_len2","_key2","_this","Promise","reject","Error","source","collectionGet","relativeName","then","nativeData","isEqual","otherQuery","app","name","projectId","i","thisFieldFilter","otherFieldFilter","operator","thisFieldOrder","otherFieldOrder","direction","limit","onSnapshot","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","_this2","observer","metadataChanges","next","error","Object","prototype","hasOwnProperty","call","listenerId","listener","nativeQuerySnapshot","querySnapshot","unsubscribe","snapshotSubscription","addListener","errorSubscription","e","log","collectionOnSnapshot","remove","collectionOffSnapshot","orderBy","directionStr","undefined","startAt","startAfter","newOrder","combinedOrders","concat","_len3","_key3","_len4","_key4","where","opStr","nativeValue","newFilter","combinedFilters","values","docSnapshot","fieldOrder","push","_construct","_toConsumableArray","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/Query.js"],"sourcesContent":["/**\n * \n * Query representation wrapper\n */\nimport FieldPath from './FieldPath';\nimport QuerySnapshot from './QuerySnapshot';\nimport SnapshotError from './SnapshotError';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport { getNativeModule } from '../../utils/native';\nimport { buildNativeArray, buildTypeMap } from './utils/serialize';\nimport { firestoreAutoId, isFunction, isObject } from '../../utils';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nconst DIRECTIONS = {\n  ASC: 'ASCENDING',\n  asc: 'ASCENDING',\n  DESC: 'DESCENDING',\n  desc: 'DESCENDING'\n};\nconst OPERATORS = {\n  '=': 'EQUAL',\n  '==': 'EQUAL',\n  '>': 'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<': 'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  'array-contains': 'ARRAY_CONTAINS'\n};\n\nfunction buildNativeFieldPath(fieldPath) {\n  if (fieldPath instanceof FieldPath) {\n    return {\n      elements: fieldPath._segments,\n      type: 'fieldpath'\n    };\n  }\n\n  return {\n    string: fieldPath,\n    type: 'string'\n  };\n}\n/**\n * @class Query\n */\n\n\nexport default class Query {\n  constructor(firestore, path, fieldFilters, fieldOrders, queryOptions) {\n    this._fieldFilters = fieldFilters || [];\n    this._fieldOrders = fieldOrders || [];\n    this._firestore = firestore;\n    this._queryOptions = queryOptions || {};\n    this._referencePath = path;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  endAt(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      endAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  endBefore(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      endBefore: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  get(options) {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(new Error('Query.get failed: First argument must be an object.'));\n      }\n\n      if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        return Promise.reject(new Error('Query.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n      }\n    }\n\n    return getNativeModule(this._firestore).collectionGet(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, options).then(nativeData => new QuerySnapshot(this._firestore, this, nativeData));\n  }\n\n  isEqual(otherQuery) {\n    if (!(otherQuery instanceof Query)) {\n      throw new Error('firebase.firestore.Query.isEqual(*) expects an instance of Query.');\n    }\n\n    if (this._firestore.app.name !== otherQuery._firestore.app.name) {\n      return false;\n    }\n\n    if (this._firestore.app.options.projectId !== otherQuery._firestore.app.options.projectId) {\n      return false;\n    }\n\n    if (this._fieldFilters.length !== otherQuery._fieldFilters.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this._fieldFilters.length; i++) {\n      const thisFieldFilter = this._fieldFilters[i];\n      const otherFieldFilter = otherQuery._fieldFilters[i];\n\n      if (thisFieldFilter.fieldPath.string !== otherFieldFilter.fieldPath.string) {\n        return false;\n      }\n\n      if (thisFieldFilter.fieldPath.type !== otherFieldFilter.fieldPath.type) {\n        return false;\n      }\n\n      if (thisFieldFilter.value.type !== otherFieldFilter.value.type) {\n        return false;\n      }\n\n      if (thisFieldFilter.value.value !== otherFieldFilter.value.value) {\n        return false;\n      }\n\n      if (thisFieldFilter.operator !== otherFieldFilter.operator) {\n        return false;\n      }\n    }\n\n    if (this._fieldOrders.length !== otherQuery._fieldOrders.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this._fieldOrders.length; i++) {\n      const thisFieldOrder = this._fieldOrders[i];\n      const otherFieldOrder = otherQuery._fieldOrders[i];\n\n      if (thisFieldOrder.direction !== otherFieldOrder.direction) {\n        return false;\n      }\n\n      if (thisFieldOrder.fieldPath.string !== otherFieldOrder.fieldPath.string) {\n        return false;\n      }\n\n      if (thisFieldOrder.fieldPath.type !== otherFieldOrder.fieldPath.type) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  limit(limit) {\n    // TODO: Validation\n    // validate.isInteger('n', n);\n    const options = { ...this._queryOptions,\n      limit\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    // TODO refactor this 💩\n    let observer;\n    let metadataChanges = {}; // Called with: onNext, ?onError\n\n    if (isFunction(optionsOrObserverOrOnNext)) {\n      if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n        throw new Error('Query.onSnapshot failed: Second argument must be a valid function.');\n      } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError\n      };\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      if (optionsOrObserverOrOnNext.next) {\n        if (isFunction(optionsOrObserverOrOnNext.next)) {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error\n          };\n        } else {\n          throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n        }\n      } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n        metadataChanges = optionsOrObserverOrOnNext; // Called with: Options, onNext, ?onError\n\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error('Query.onSnapshot failed: Third argument must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError\n          }; // Called with Options, Observer\n        } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n          if (isFunction(observerOrOnNextOrOnError.next)) {\n            if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n              throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError.next,\n              error: observerOrOnNextOrOnError.error\n            };\n          } else {\n            throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else {\n          throw new Error('Query.onSnapshot failed: Second argument must be a function or observer.');\n        }\n      } else {\n        throw new Error('Query.onSnapshot failed: First argument must be a function, observer or options.');\n      }\n    } else {\n      throw new Error('Query.onSnapshot failed: Called with invalid arguments.');\n    }\n\n    const listenerId = firestoreAutoId();\n\n    const listener = nativeQuerySnapshot => {\n      const querySnapshot = new QuerySnapshot(this._firestore, this, nativeQuerySnapshot);\n      observer.next(querySnapshot);\n    };\n\n    let unsubscribe; // Listen to snapshot events\n\n    const snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshot:${listenerId}`), listener); // listen for snapshot error events\n\n    const errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshotError:${listenerId}`), e => {\n      if (unsubscribe) unsubscribe();\n      const error = new SnapshotError(e);\n      if (observer.error) observer.error(error);else this.firestore.log.error(error);\n    }); // Add the native listener\n\n    getNativeModule(this._firestore).collectionOnSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId, metadataChanges); // return an unsubscribe method\n\n    unsubscribe = () => {\n      snapshotSubscription.remove();\n      errorSubscription.remove(); // cancel native listener\n\n      getNativeModule(this._firestore).collectionOffSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId);\n    };\n\n    return unsubscribe;\n  }\n\n  orderBy(fieldPath, directionStr = 'asc') {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isOptionalFieldOrder('directionStr', directionStr);\n    if (this._queryOptions.startAt || this._queryOptions.startAfter || this._queryOptions.endAt || this._queryOptions.endBefore) {\n      throw new Error('Cannot specify an orderBy() constraint after calling ' + 'startAt(), startAfter(), endBefore() or endAt().');\n    }\n\n    const newOrder = {\n      direction: DIRECTIONS[directionStr],\n      fieldPath: buildNativeFieldPath(fieldPath)\n    };\n\n    const combinedOrders = this._fieldOrders.concat(newOrder);\n\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, combinedOrders, this._queryOptions);\n  }\n\n  startAfter(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      startAfter: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  startAt(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      startAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  where(fieldPath, opStr, value) {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isFieldFilter('fieldFilter', opStr, value);\n    const nativeValue = buildTypeMap(value);\n    const newFilter = {\n      fieldPath: buildNativeFieldPath(fieldPath),\n      operator: OPERATORS[opStr],\n      value: nativeValue\n    };\n\n    const combinedFilters = this._fieldFilters.concat(newFilter);\n\n    return new Query(this.firestore, this._referencePath, combinedFilters, this._fieldOrders, this._queryOptions);\n  }\n  /**\n   * INTERNALS\n   */\n\n\n  _buildOrderByOption(snapshotOrVarArgs) {\n    // TODO: Validation\n    let values;\n\n    if (snapshotOrVarArgs.length === 1 && snapshotOrVarArgs[0] instanceof DocumentSnapshot) {\n      const docSnapshot = snapshotOrVarArgs[0];\n      values = [];\n\n      for (let i = 0; i < this._fieldOrders.length; i++) {\n        const fieldOrder = this._fieldOrders[i];\n\n        if (fieldOrder.fieldPath.type === 'string' && fieldOrder.fieldPath.string) {\n          values.push(docSnapshot.get(fieldOrder.fieldPath.string));\n        } else if (fieldOrder.fieldPath.elements) {\n          const fieldPath = new FieldPath(...fieldOrder.fieldPath.elements);\n          values.push(docSnapshot.get(fieldPath));\n        }\n      }\n    } else {\n      values = snapshotOrVarArgs;\n    }\n\n    return buildNativeArray(values);\n  }\n\n}"],"mappings":";;;;;;;AAIA,OAAOA,SAAS;AAChB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,gBAAgB;AACvB,SAASC,eAAe;AACxB,SAASC,gBAAgB,EAAEC,YAAY;AACvC,SAASC,eAAe,EAAEC,UAAU,EAAEC,QAAQ;AAC9C,SAASC,eAAe,EAAEC,kBAAkB;AAC5C,IAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,WAAW;EAChBC,GAAG,EAAE,WAAW;EAChBC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE;AACR,CAAC;AACD,IAAMC,SAAS,GAAG;EAChB,GAAG,EAAE,OAAO;EACZ,IAAI,EAAE,OAAO;EACb,GAAG,EAAE,cAAc;EACnB,IAAI,EAAE,uBAAuB;EAC7B,GAAG,EAAE,WAAW;EAChB,IAAI,EAAE,oBAAoB;EAC1B,gBAAgB,EAAE;AACpB,CAAC;AAED,SAASC,oBAAoBA,CAACC,SAAS,EAAE;EACvC,IAAIA,SAAS,YAAYnB,SAAS,EAAE;IAClC,OAAO;MACLoB,QAAQ,EAAED,SAAS,CAACE,SAAS;MAC7BC,IAAI,EAAE;IACR,CAAC;EACH;EAEA,OAAO;IACLC,MAAM,EAAEJ,SAAS;IACjBG,IAAI,EAAE;EACR,CAAC;AACH;AAAC,IAMoBE,KAAK;EACxB,SAAAA,MAAYC,SAAS,EAAEC,IAAI,EAAEC,YAAY,EAAEC,WAAW,EAAEC,YAAY,EAAE;IAAAC,eAAA,OAAAN,KAAA;IACpE,IAAI,CAACO,aAAa,GAAGJ,YAAY,IAAI,EAAE;IACvC,IAAI,CAACK,YAAY,GAAGJ,WAAW,IAAI,EAAE;IACrC,IAAI,CAACK,UAAU,GAAGR,SAAS;IAC3B,IAAI,CAACS,aAAa,GAAGL,YAAY,IAAI,CAAC,CAAC;IACvC,IAAI,CAACM,cAAc,GAAGT,IAAI;EAC5B;EAAC,OAAAU,YAAA,CAAAZ,KAAA;IAAAa,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAgB;MACd,OAAO,IAAI,CAACL,UAAU;IACxB;EAAC;IAAAI,GAAA;IAAAE,KAAA,EAED,SAAAC,MAAA,EAA4B;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAnBC,iBAAiB,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAjBF,iBAAiB,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MACxB,IAAMC,OAAO,GAAAC,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACd,aAAa;QACrCM,KAAK,EAAE,IAAI,CAACS,mBAAmB,CAACL,iBAAiB;MAAC,EACnD;MACD,OAAO,IAAIpB,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE,IAAI,CAACC,YAAY,EAAEe,OAAO,CAAC;IACvG;EAAC;IAAAV,GAAA;IAAAE,KAAA,EAED,SAAAW,UAAA,EAAgC;MAAA,SAAAC,KAAA,GAAAT,SAAA,CAAAC,MAAA,EAAnBC,iBAAiB,OAAAC,KAAA,CAAAM,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAjBR,iBAAiB,CAAAQ,KAAA,IAAAV,SAAA,CAAAU,KAAA;MAAA;MAC5B,IAAML,OAAO,GAAAC,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACd,aAAa;QACrCgB,SAAS,EAAE,IAAI,CAACD,mBAAmB,CAACL,iBAAiB;MAAC,EACvD;MACD,OAAO,IAAIpB,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE,IAAI,CAACC,YAAY,EAAEe,OAAO,CAAC;IACvG;EAAC;IAAAV,GAAA;IAAAE,KAAA,EAED,SAAAD,IAAIS,OAAO,EAAE;MAAA,IAAAM,KAAA;MACX,IAAIN,OAAO,EAAE;QACX,IAAI,CAACtC,QAAQ,CAACsC,OAAO,CAAC,EAAE;UACtB,OAAOO,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,qDAAqD,CAAC,CAAC;QACzF;QAEA,IAAIT,OAAO,CAACU,MAAM,IAAIV,OAAO,CAACU,MAAM,KAAK,SAAS,IAAIV,OAAO,CAACU,MAAM,KAAK,QAAQ,IAAIV,OAAO,CAACU,MAAM,KAAK,OAAO,EAAE;UAC/G,OAAOH,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,oFAAoF,CAAC,CAAC;QACxH;MACF;MAEA,OAAOpD,eAAe,CAAC,IAAI,CAAC6B,UAAU,CAAC,CAACyB,aAAa,CAAC,IAAI,CAACvB,cAAc,CAACwB,YAAY,EAAE,IAAI,CAAC5B,aAAa,EAAE,IAAI,CAACC,YAAY,EAAE,IAAI,CAACE,aAAa,EAAEa,OAAO,CAAC,CAACa,IAAI,CAAC,UAAAC,UAAU;QAAA,OAAI,IAAI5D,aAAa,CAACoD,KAAI,CAACpB,UAAU,EAAEoB,KAAI,EAAEQ,UAAU,CAAC;MAAA,EAAC;IACtO;EAAC;IAAAxB,GAAA;IAAAE,KAAA,EAED,SAAAuB,QAAQC,UAAU,EAAE;MAClB,IAAI,EAAEA,UAAU,YAAYvC,KAAK,CAAC,EAAE;QAClC,MAAM,IAAIgC,KAAK,CAAC,mEAAmE,CAAC;MACtF;MAEA,IAAI,IAAI,CAACvB,UAAU,CAAC+B,GAAG,CAACC,IAAI,KAAKF,UAAU,CAAC9B,UAAU,CAAC+B,GAAG,CAACC,IAAI,EAAE;QAC/D,OAAO,KAAK;MACd;MAEA,IAAI,IAAI,CAAChC,UAAU,CAAC+B,GAAG,CAACjB,OAAO,CAACmB,SAAS,KAAKH,UAAU,CAAC9B,UAAU,CAAC+B,GAAG,CAACjB,OAAO,CAACmB,SAAS,EAAE;QACzF,OAAO,KAAK;MACd;MAEA,IAAI,IAAI,CAACnC,aAAa,CAACY,MAAM,KAAKoB,UAAU,CAAChC,aAAa,CAACY,MAAM,EAAE;QACjE,OAAO,KAAK;MACd;MAEA,KAAK,IAAIwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpC,aAAa,CAACY,MAAM,EAAEwB,CAAC,EAAE,EAAE;QAClD,IAAMC,eAAe,GAAG,IAAI,CAACrC,aAAa,CAACoC,CAAC,CAAC;QAC7C,IAAME,gBAAgB,GAAGN,UAAU,CAAChC,aAAa,CAACoC,CAAC,CAAC;QAEpD,IAAIC,eAAe,CAACjD,SAAS,CAACI,MAAM,KAAK8C,gBAAgB,CAAClD,SAAS,CAACI,MAAM,EAAE;UAC1E,OAAO,KAAK;QACd;QAEA,IAAI6C,eAAe,CAACjD,SAAS,CAACG,IAAI,KAAK+C,gBAAgB,CAAClD,SAAS,CAACG,IAAI,EAAE;UACtE,OAAO,KAAK;QACd;QAEA,IAAI8C,eAAe,CAAC7B,KAAK,CAACjB,IAAI,KAAK+C,gBAAgB,CAAC9B,KAAK,CAACjB,IAAI,EAAE;UAC9D,OAAO,KAAK;QACd;QAEA,IAAI8C,eAAe,CAAC7B,KAAK,CAACA,KAAK,KAAK8B,gBAAgB,CAAC9B,KAAK,CAACA,KAAK,EAAE;UAChE,OAAO,KAAK;QACd;QAEA,IAAI6B,eAAe,CAACE,QAAQ,KAAKD,gBAAgB,CAACC,QAAQ,EAAE;UAC1D,OAAO,KAAK;QACd;MACF;MAEA,IAAI,IAAI,CAACtC,YAAY,CAACW,MAAM,KAAKoB,UAAU,CAAC/B,YAAY,CAACW,MAAM,EAAE;QAC/D,OAAO,KAAK;MACd;MAEA,KAAK,IAAIwB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,IAAI,CAACnC,YAAY,CAACW,MAAM,EAAEwB,EAAC,EAAE,EAAE;QACjD,IAAMI,cAAc,GAAG,IAAI,CAACvC,YAAY,CAACmC,EAAC,CAAC;QAC3C,IAAMK,eAAe,GAAGT,UAAU,CAAC/B,YAAY,CAACmC,EAAC,CAAC;QAElD,IAAII,cAAc,CAACE,SAAS,KAAKD,eAAe,CAACC,SAAS,EAAE;UAC1D,OAAO,KAAK;QACd;QAEA,IAAIF,cAAc,CAACpD,SAAS,CAACI,MAAM,KAAKiD,eAAe,CAACrD,SAAS,CAACI,MAAM,EAAE;UACxE,OAAO,KAAK;QACd;QAEA,IAAIgD,cAAc,CAACpD,SAAS,CAACG,IAAI,KAAKkD,eAAe,CAACrD,SAAS,CAACG,IAAI,EAAE;UACpE,OAAO,KAAK;QACd;MACF;MAEA,OAAO,IAAI;IACb;EAAC;IAAAe,GAAA;IAAAE,KAAA,EAED,SAAAmC,MAAMA,MAAK,EAAE;MAGX,IAAM3B,OAAO,GAAAC,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACd,aAAa;QACrCwC,KAAK,EAALA;MAAK,EACN;MACD,OAAO,IAAIlD,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE,IAAI,CAACC,YAAY,EAAEe,OAAO,CAAC;IACvG;EAAC;IAAAV,GAAA;IAAAE,KAAA,EAED,SAAAoC,WAAWC,yBAAyB,EAAEC,yBAAyB,EAAEC,OAAO,EAAE;MAAA,IAAAC,MAAA;MAExE,IAAIC,QAAQ;MACZ,IAAIC,eAAe,GAAG,CAAC,CAAC;MAExB,IAAIzE,UAAU,CAACoE,yBAAyB,CAAC,EAAE;QACzC,IAAIC,yBAAyB,IAAI,CAACrE,UAAU,CAACqE,yBAAyB,CAAC,EAAE;UACvE,MAAM,IAAIrB,KAAK,CAAC,oEAAoE,CAAC;QACvF;QAGAwB,QAAQ,GAAG;UACTE,IAAI,EAAEN,yBAAyB;UAC/BO,KAAK,EAAEN;QACT,CAAC;MACH,CAAC,MAAM,IAAID,yBAAyB,IAAInE,QAAQ,CAACmE,yBAAyB,CAAC,EAAE;QAE3E,IAAIA,yBAAyB,CAACM,IAAI,EAAE;UAClC,IAAI1E,UAAU,CAACoE,yBAAyB,CAACM,IAAI,CAAC,EAAE;YAC9C,IAAIN,yBAAyB,CAACO,KAAK,IAAI,CAAC3E,UAAU,CAACoE,yBAAyB,CAACO,KAAK,CAAC,EAAE;cACnF,MAAM,IAAI3B,KAAK,CAAC,mEAAmE,CAAC;YACtF;YAGAwB,QAAQ,GAAG;cACTE,IAAI,EAAEN,yBAAyB,CAACM,IAAI;cACpCC,KAAK,EAAEP,yBAAyB,CAACO;YACnC,CAAC;UACH,CAAC,MAAM;YACL,MAAM,IAAI3B,KAAK,CAAC,kEAAkE,CAAC;UACrF;QACF,CAAC,MAAM,IAAI4B,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACX,yBAAyB,EAAE,wBAAwB,CAAC,EAAE;UACpGK,eAAe,GAAGL,yBAAyB;UAE3C,IAAIpE,UAAU,CAACqE,yBAAyB,CAAC,EAAE;YACzC,IAAIC,OAAO,IAAI,CAACtE,UAAU,CAACsE,OAAO,CAAC,EAAE;cACnC,MAAM,IAAItB,KAAK,CAAC,mEAAmE,CAAC;YACtF;YAGAwB,QAAQ,GAAG;cACTE,IAAI,EAAEL,yBAAyB;cAC/BM,KAAK,EAAEL;YACT,CAAC;UACH,CAAC,MAAM,IAAID,yBAAyB,IAAIpE,QAAQ,CAACoE,yBAAyB,CAAC,IAAIA,yBAAyB,CAACK,IAAI,EAAE;YAC7G,IAAI1E,UAAU,CAACqE,yBAAyB,CAACK,IAAI,CAAC,EAAE;cAC9C,IAAIL,yBAAyB,CAACM,KAAK,IAAI,CAAC3E,UAAU,CAACqE,yBAAyB,CAACM,KAAK,CAAC,EAAE;gBACnF,MAAM,IAAI3B,KAAK,CAAC,mEAAmE,CAAC;cACtF;cAEAwB,QAAQ,GAAG;gBACTE,IAAI,EAAEL,yBAAyB,CAACK,IAAI;gBACpCC,KAAK,EAAEN,yBAAyB,CAACM;cACnC,CAAC;YACH,CAAC,MAAM;cACL,MAAM,IAAI3B,KAAK,CAAC,kEAAkE,CAAC;YACrF;UACF,CAAC,MAAM;YACL,MAAM,IAAIA,KAAK,CAAC,0EAA0E,CAAC;UAC7F;QACF,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAAC,kFAAkF,CAAC;QACrG;MACF,CAAC,MAAM;QACL,MAAM,IAAIA,KAAK,CAAC,yDAAyD,CAAC;MAC5E;MAEA,IAAMgC,UAAU,GAAGjF,eAAe,CAAC,CAAC;MAEpC,IAAMkF,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,mBAAmB,EAAI;QACtC,IAAMC,aAAa,GAAG,IAAI1F,aAAa,CAAC8E,MAAI,CAAC9C,UAAU,EAAE8C,MAAI,EAAEW,mBAAmB,CAAC;QACnFV,QAAQ,CAACE,IAAI,CAACS,aAAa,CAAC;MAC9B,CAAC;MAED,IAAIC,WAAW;MAEf,IAAMC,oBAAoB,GAAGlF,kBAAkB,CAACmF,WAAW,CAACpF,eAAe,CAAC,IAAI,CAACuB,UAAU,EAAG,mBAAkBuD,UAAW,EAAC,CAAC,EAAEC,QAAQ,CAAC;MAExI,IAAMM,iBAAiB,GAAGpF,kBAAkB,CAACmF,WAAW,CAACpF,eAAe,CAAC,IAAI,CAACuB,UAAU,EAAG,wBAAuBuD,UAAW,EAAC,CAAC,EAAE,UAAAQ,CAAC,EAAI;QACpI,IAAIJ,WAAW,EAAEA,WAAW,CAAC,CAAC;QAC9B,IAAMT,KAAK,GAAG,IAAIjF,aAAa,CAAC8F,CAAC,CAAC;QAClC,IAAIhB,QAAQ,CAACG,KAAK,EAAEH,QAAQ,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC,KAAKJ,MAAI,CAACtD,SAAS,CAACwE,GAAG,CAACd,KAAK,CAACA,KAAK,CAAC;MAChF,CAAC,CAAC;MAEF/E,eAAe,CAAC,IAAI,CAAC6B,UAAU,CAAC,CAACiE,oBAAoB,CAAC,IAAI,CAAC/D,cAAc,CAACwB,YAAY,EAAE,IAAI,CAAC5B,aAAa,EAAE,IAAI,CAACC,YAAY,EAAE,IAAI,CAACE,aAAa,EAAEsD,UAAU,EAAEP,eAAe,CAAC;MAE/KW,WAAW,GAAG,SAAAA,YAAA,EAAM;QAClBC,oBAAoB,CAACM,MAAM,CAAC,CAAC;QAC7BJ,iBAAiB,CAACI,MAAM,CAAC,CAAC;QAE1B/F,eAAe,CAAC2E,MAAI,CAAC9C,UAAU,CAAC,CAACmE,qBAAqB,CAACrB,MAAI,CAAC5C,cAAc,CAACwB,YAAY,EAAEoB,MAAI,CAAChD,aAAa,EAAEgD,MAAI,CAAC/C,YAAY,EAAE+C,MAAI,CAAC7C,aAAa,EAAEsD,UAAU,CAAC;MACjK,CAAC;MAED,OAAOI,WAAW;IACpB;EAAC;IAAAvD,GAAA;IAAAE,KAAA,EAED,SAAA8D,QAAQlF,SAAS,EAAwB;MAAA,IAAtBmF,YAAY,GAAA5D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA6D,SAAA,GAAA7D,SAAA,MAAG,KAAK;MAIrC,IAAI,IAAI,CAACR,aAAa,CAACsE,OAAO,IAAI,IAAI,CAACtE,aAAa,CAACuE,UAAU,IAAI,IAAI,CAACvE,aAAa,CAACM,KAAK,IAAI,IAAI,CAACN,aAAa,CAACgB,SAAS,EAAE;QAC3H,MAAM,IAAIM,KAAK,CAAC,uDAAuD,GAAG,kDAAkD,CAAC;MAC/H;MAEA,IAAMkD,QAAQ,GAAG;QACfjC,SAAS,EAAE7D,UAAU,CAAC0F,YAAY,CAAC;QACnCnF,SAAS,EAAED,oBAAoB,CAACC,SAAS;MAC3C,CAAC;MAED,IAAMwF,cAAc,GAAG,IAAI,CAAC3E,YAAY,CAAC4E,MAAM,CAACF,QAAQ,CAAC;MAEzD,OAAO,IAAIlF,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE4E,cAAc,EAAE,IAAI,CAACzE,aAAa,CAAC;IAC/G;EAAC;IAAAG,GAAA;IAAAE,KAAA,EAED,SAAAkE,WAAA,EAAiC;MAAA,SAAAI,KAAA,GAAAnE,SAAA,CAAAC,MAAA,EAAnBC,iBAAiB,OAAAC,KAAA,CAAAgE,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAjBlE,iBAAiB,CAAAkE,KAAA,IAAApE,SAAA,CAAAoE,KAAA;MAAA;MAC7B,IAAM/D,OAAO,GAAAC,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACd,aAAa;QACrCuE,UAAU,EAAE,IAAI,CAACxD,mBAAmB,CAACL,iBAAiB;MAAC,EACxD;MACD,OAAO,IAAIpB,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE,IAAI,CAACC,YAAY,EAAEe,OAAO,CAAC;IACvG;EAAC;IAAAV,GAAA;IAAAE,KAAA,EAED,SAAAiE,QAAA,EAA8B;MAAA,SAAAO,KAAA,GAAArE,SAAA,CAAAC,MAAA,EAAnBC,iBAAiB,OAAAC,KAAA,CAAAkE,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAjBpE,iBAAiB,CAAAoE,KAAA,IAAAtE,SAAA,CAAAsE,KAAA;MAAA;MAC1B,IAAMjE,OAAO,GAAAC,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACd,aAAa;QACrCsE,OAAO,EAAE,IAAI,CAACvD,mBAAmB,CAACL,iBAAiB;MAAC,EACrD;MACD,OAAO,IAAIpB,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE,IAAI,CAACC,YAAY,EAAEe,OAAO,CAAC;IACvG;EAAC;IAAAV,GAAA;IAAAE,KAAA,EAED,SAAA0E,MAAM9F,SAAS,EAAE+F,KAAK,EAAE3E,KAAK,EAAE;MAI7B,IAAM4E,WAAW,GAAG7G,YAAY,CAACiC,KAAK,CAAC;MACvC,IAAM6E,SAAS,GAAG;QAChBjG,SAAS,EAAED,oBAAoB,CAACC,SAAS,CAAC;QAC1CmD,QAAQ,EAAErD,SAAS,CAACiG,KAAK,CAAC;QAC1B3E,KAAK,EAAE4E;MACT,CAAC;MAED,IAAME,eAAe,GAAG,IAAI,CAACtF,aAAa,CAAC6E,MAAM,CAACQ,SAAS,CAAC;MAE5D,OAAO,IAAI5F,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACU,cAAc,EAAEkF,eAAe,EAAE,IAAI,CAACrF,YAAY,EAAE,IAAI,CAACE,aAAa,CAAC;IAC/G;EAAC;IAAAG,GAAA;IAAAE,KAAA,EAMD,SAAAU,oBAAoBL,iBAAiB,EAAE;MAErC,IAAI0E,MAAM;MAEV,IAAI1E,iBAAiB,CAACD,MAAM,KAAK,CAAC,IAAIC,iBAAiB,CAAC,CAAC,CAAC,YAAYzC,gBAAgB,EAAE;QACtF,IAAMoH,WAAW,GAAG3E,iBAAiB,CAAC,CAAC,CAAC;QACxC0E,MAAM,GAAG,EAAE;QAEX,KAAK,IAAInD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnC,YAAY,CAACW,MAAM,EAAEwB,CAAC,EAAE,EAAE;UACjD,IAAMqD,UAAU,GAAG,IAAI,CAACxF,YAAY,CAACmC,CAAC,CAAC;UAEvC,IAAIqD,UAAU,CAACrG,SAAS,CAACG,IAAI,KAAK,QAAQ,IAAIkG,UAAU,CAACrG,SAAS,CAACI,MAAM,EAAE;YACzE+F,MAAM,CAACG,IAAI,CAACF,WAAW,CAACjF,GAAG,CAACkF,UAAU,CAACrG,SAAS,CAACI,MAAM,CAAC,CAAC;UAC3D,CAAC,MAAM,IAAIiG,UAAU,CAACrG,SAAS,CAACC,QAAQ,EAAE;YACxC,IAAMD,SAAS,GAAAuG,UAAA,CAAO1H,SAAS,EAAA2H,kBAAA,CAAIH,UAAU,CAACrG,SAAS,CAACC,QAAQ,EAAC;YACjEkG,MAAM,CAACG,IAAI,CAACF,WAAW,CAACjF,GAAG,CAACnB,SAAS,CAAC,CAAC;UACzC;QACF;MACF,CAAC,MAAM;QACLmG,MAAM,GAAG1E,iBAAiB;MAC5B;MAEA,OAAOvC,gBAAgB,CAACiH,MAAM,CAAC;IACjC;EAAC;AAAA;AAAA,SA/RkB9F,KAAK,IAAAoG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
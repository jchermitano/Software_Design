{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { getAppEventName, SharedEventEmitter } from \"../../utils/events\";\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport CollectionReference from \"./CollectionReference\";\nimport DocumentReference from \"./DocumentReference\";\nimport FieldPath from \"./FieldPath\";\nimport FieldValue from \"./FieldValue\";\nimport GeoPoint from \"./GeoPoint\";\nimport Blob from \"./Blob\";\nimport Path from \"./Path\";\nimport WriteBatch from \"./WriteBatch\";\nimport TransactionHandler from \"./TransactionHandler\";\nimport Timestamp from \"./Timestamp\";\nimport Transaction from \"./Transaction\";\nimport { isBoolean, isObject, isString, isNumber, hop } from \"../../utils\";\nimport { getNativeModule } from \"../../utils/native\";\nvar CACHE_SIZE_UNLIMITED = -1;\nvar MIN_CACHE_SIZE = 1048576;\nvar NATIVE_EVENTS = ['firestore_transaction_event', 'firestore_document_sync_event', 'firestore_collection_sync_event'];\nvar LogLevels = ['debug', 'error', 'silent'];\nexport var MODULE_NAME = 'RNFirebaseFirestore';\nexport var NAMESPACE = 'firestore';\nvar Firestore = function (_ModuleBase) {\n  function Firestore(app) {\n    var _this2;\n    _classCallCheck(this, Firestore);\n    _this2 = _callSuper(this, Firestore, [app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    }]);\n    _this2._referencePath = new Path([]);\n    _this2._transactionHandler = new TransactionHandler(_this2);\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'firestore_collection_sync_event'), _this2._onCollectionSyncEvent.bind(_this2));\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'firestore_document_sync_event'), _this2._onDocumentSyncEvent.bind(_this2));\n    return _this2;\n  }\n  _inherits(Firestore, _ModuleBase);\n  return _createClass(Firestore, [{\n    key: \"batch\",\n    value: function batch() {\n      return new WriteBatch(this);\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(collectionPath) {\n      var path = this._referencePath.child(collectionPath);\n      if (!path.isCollection) {\n        throw new Error('Argument \"collectionPath\" must point to a collection.');\n      }\n      return new CollectionReference(this, path);\n    }\n  }, {\n    key: \"disableNetwork\",\n    value: function disableNetwork() {\n      return getNativeModule(this).disableNetwork();\n    }\n  }, {\n    key: \"doc\",\n    value: function doc(documentPath) {\n      var path = this._referencePath.child(documentPath);\n      if (!path.isDocument) {\n        throw new Error('Argument \"documentPath\" must point to a document.');\n      }\n      return new DocumentReference(this, path);\n    }\n  }, {\n    key: \"enableNetwork\",\n    value: function enableNetwork() {\n      return getNativeModule(this).enableNetwork();\n    }\n  }, {\n    key: \"runTransaction\",\n    value: function runTransaction(updateFunction) {\n      return this._transactionHandler._add(updateFunction);\n    }\n  }, {\n    key: \"settings\",\n    value: function settings(_settings) {\n      if (!isObject(_settings)) {\n        return Promise.reject(new Error('Firestore.settings failed: settings must be an object.'));\n      }\n      if (hop(_settings, 'host') && !isString(_settings.host)) {\n        return Promise.reject(new Error('Firestore.settings failed: settings.host must be a string.'));\n      }\n      if (hop(_settings, 'persistence') && !isBoolean(_settings.persistence)) {\n        return Promise.reject(new Error('Firestore.settings failed: settings.persistence must be boolean.'));\n      }\n      if (hop(_settings, 'cacheSizeBytes')) {\n        if (!isNumber(_settings.cacheSizeBytes)) {\n          return Promise.reject(new Error('Firestore.settings failed: settings.cacheSizeBytes must be number.'));\n        }\n        if (_settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED && _settings.cacheSizeBytes < MIN_CACHE_SIZE) {\n          return Promise.reject(new Error(`Firestore.settings failed: settings.cacheSizeBytes must be set to ${MIN_CACHE_SIZE} at least bytes.`));\n        }\n      }\n      if (hop(_settings, 'ssl') && !isBoolean(_settings.ssl)) {\n        return Promise.reject(new Error('Firestore.settings failed: settings.ssl must be boolean.'));\n      }\n      if (hop(_settings, 'timestampsInSnapshots') && !isBoolean(_settings.timestampsInSnapshots)) {\n        return Promise.reject(new Error('Firestore.settings failed: settings.timestampsInSnapshots must be boolean.'));\n      }\n      return getNativeModule(this).settings(_settings);\n    }\n  }, {\n    key: \"enablePersistence\",\n    value: function enablePersistence() {\n      console.warn('Due to restrictions in the native SDK, persistence must be configured in firebase.firestore().settings()');\n      return Promise.resolve();\n    }\n  }, {\n    key: \"_onCollectionSyncEvent\",\n    value: function _onCollectionSyncEvent(event) {\n      if (event.error) {\n        SharedEventEmitter.emit(getAppEventName(this, `onQuerySnapshotError:${event.listenerId}`), event);\n      } else {\n        SharedEventEmitter.emit(getAppEventName(this, `onQuerySnapshot:${event.listenerId}`), event.querySnapshot);\n      }\n    }\n  }, {\n    key: \"_onDocumentSyncEvent\",\n    value: function _onDocumentSyncEvent(event) {\n      if (event.error) {\n        SharedEventEmitter.emit(getAppEventName(this, `onDocumentSnapshotError:${event.listenerId}`), event);\n      } else {\n        SharedEventEmitter.emit(getAppEventName(this, `onDocumentSnapshot:${event.listenerId}`), event.documentSnapshot);\n      }\n    }\n  }]);\n}(ModuleBase);\nexport { Firestore as default };\nexport var statics = {\n  Blob: Blob,\n  FieldPath: FieldPath,\n  FieldValue: FieldValue,\n  GeoPoint: GeoPoint,\n  Timestamp: Timestamp,\n  CACHE_SIZE_UNLIMITED: CACHE_SIZE_UNLIMITED,\n  enableLogging: function enableLogging(enabled) {\n    console.warn('firebase.firestore.enableLogging is deprecated, use firebase.firestore().setLogLevel instead.');\n    this.setLogLevel(enabled ? 'debug' : 'silent');\n  },\n  setLogLevel: function setLogLevel(logLevel) {\n    if (LogLevels.indexOf(logLevel) === -1) {\n      throw new Error('Argument `logLevel` must be one of: `debug`, `error`, `silent`');\n    }\n    if (NativeModules[MODULE_NAME]) {\n      NativeModules[MODULE_NAME].setLogLevel(logLevel);\n    }\n  }\n};","map":{"version":3,"names":["getAppEventName","SharedEventEmitter","ModuleBase","CollectionReference","DocumentReference","FieldPath","FieldValue","GeoPoint","Blob","Path","WriteBatch","TransactionHandler","Timestamp","Transaction","isBoolean","isObject","isString","isNumber","hop","getNativeModule","CACHE_SIZE_UNLIMITED","MIN_CACHE_SIZE","NATIVE_EVENTS","LogLevels","MODULE_NAME","NAMESPACE","Firestore","_ModuleBase","app","_this2","_classCallCheck","_callSuper","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","_referencePath","_transactionHandler","addListener","_onCollectionSyncEvent","bind","_onDocumentSyncEvent","_inherits","_createClass","key","value","batch","collection","collectionPath","path","child","isCollection","Error","disableNetwork","doc","documentPath","isDocument","enableNetwork","runTransaction","updateFunction","_add","settings","Promise","reject","host","persistence","cacheSizeBytes","ssl","timestampsInSnapshots","enablePersistence","console","warn","resolve","event","error","emit","listenerId","querySnapshot","documentSnapshot","default","statics","enableLogging","enabled","setLogLevel","logLevel","indexOf","NativeModules"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/index.js"],"sourcesContent":["/**\n * \n * Firestore representation wrapper\n */\nimport { NativeModules } from 'react-native';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nimport ModuleBase from '../../utils/ModuleBase';\nimport CollectionReference from './CollectionReference';\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport FieldValue from './FieldValue';\nimport GeoPoint from './GeoPoint';\nimport Blob from './Blob';\nimport Path from './Path';\nimport WriteBatch from './WriteBatch';\nimport TransactionHandler from './TransactionHandler';\nimport Timestamp from './Timestamp';\nimport Transaction from './Transaction';\nimport { isBoolean, isObject, isString, isNumber, hop } from '../../utils';\nimport { getNativeModule } from '../../utils/native';\n// A flag representing the unlimited cache size\nconst CACHE_SIZE_UNLIMITED = -1; // The minimum cache size in the firebase SDK (currently 1MB)\n\nconst MIN_CACHE_SIZE = 1048576;\nconst NATIVE_EVENTS = ['firestore_transaction_event', 'firestore_document_sync_event', 'firestore_collection_sync_event'];\nconst LogLevels = ['debug', 'error', 'silent'];\nexport const MODULE_NAME = 'RNFirebaseFirestore';\nexport const NAMESPACE = 'firestore';\n/**\n * @class Firestore\n */\n\nexport default class Firestore extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    this._referencePath = new Path([]);\n    this._transactionHandler = new TransactionHandler(this);\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onCollectionSnapshot\n    getAppEventName(this, 'firestore_collection_sync_event'), this._onCollectionSyncEvent.bind(this));\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onDocumentSnapshot\n    getAppEventName(this, 'firestore_document_sync_event'), this._onDocumentSyncEvent.bind(this));\n  }\n  /**\n   * -------------\n   *  PUBLIC API\n   * -------------\n   */\n\n  /**\n   * Creates a write batch, used for performing multiple writes as a single atomic operation.\n   *\n   * @returns {WriteBatch}\n   */\n\n\n  batch() {\n    return new WriteBatch(this);\n  }\n  /**\n   * Gets a CollectionReference instance that refers to the collection at the specified path.\n   *\n   * @param collectionPath\n   * @returns {CollectionReference}\n   */\n\n\n  collection(collectionPath) {\n    const path = this._referencePath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error('Argument \"collectionPath\" must point to a collection.');\n    }\n\n    return new CollectionReference(this, path);\n  }\n\n  disableNetwork() {\n    return getNativeModule(this).disableNetwork();\n  }\n  /**\n   * Gets a DocumentReference instance that refers to the document at the specified path.\n   *\n   * @param documentPath\n   * @returns {DocumentReference}\n   */\n\n\n  doc(documentPath) {\n    const path = this._referencePath.child(documentPath);\n\n    if (!path.isDocument) {\n      throw new Error('Argument \"documentPath\" must point to a document.');\n    }\n\n    return new DocumentReference(this, path);\n  }\n\n  enableNetwork() {\n    return getNativeModule(this).enableNetwork();\n  }\n  /**\n   * Executes the given updateFunction and then attempts to commit the\n   * changes applied within the transaction. If any document read within\n   * the transaction has changed, Cloud Firestore retries the updateFunction.\n   *\n   * If it fails to commit after 5 attempts, the transaction fails.\n   *\n   * @param updateFunction\n   * @returns {void|Promise<any>}\n   */\n\n\n  runTransaction(updateFunction) {\n    return this._transactionHandler._add(updateFunction);\n  }\n\n  settings(settings) {\n    if (!isObject(settings)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings must be an object.'));\n    }\n\n    if (hop(settings, 'host') && !isString(settings.host)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings.host must be a string.'));\n    }\n\n    if (hop(settings, 'persistence') && !isBoolean(settings.persistence)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings.persistence must be boolean.'));\n    }\n\n    if (hop(settings, 'cacheSizeBytes')) {\n      if (!isNumber(settings.cacheSizeBytes)) {\n        return Promise.reject(new Error('Firestore.settings failed: settings.cacheSizeBytes must be number.'));\n      }\n\n      if (settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED && settings.cacheSizeBytes < MIN_CACHE_SIZE) {\n        return Promise.reject(new Error(`Firestore.settings failed: settings.cacheSizeBytes must be set to ${MIN_CACHE_SIZE} at least bytes.`));\n      }\n    }\n\n    if (hop(settings, 'ssl') && !isBoolean(settings.ssl)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings.ssl must be boolean.'));\n    }\n\n    if (hop(settings, 'timestampsInSnapshots') && !isBoolean(settings.timestampsInSnapshots)) {\n      return Promise.reject(new Error('Firestore.settings failed: settings.timestampsInSnapshots must be boolean.'));\n    }\n\n    return getNativeModule(this).settings(settings);\n  }\n  /**\n   * -------------\n   *  UNSUPPORTED\n   * -------------\n   */\n\n\n  enablePersistence() {\n    console.warn('Due to restrictions in the native SDK, persistence must be configured in firebase.firestore().settings()');\n    return Promise.resolve();\n  }\n  /**\n   * -------------\n   *   INTERNALS\n   * -------------\n   */\n\n  /**\n   * Internal collection sync listener\n   *\n   * @param event\n   * @private\n   */\n\n\n  _onCollectionSyncEvent(event) {\n    if (event.error) {\n      SharedEventEmitter.emit(getAppEventName(this, `onQuerySnapshotError:${event.listenerId}`), event);\n    } else {\n      SharedEventEmitter.emit(getAppEventName(this, `onQuerySnapshot:${event.listenerId}`), event.querySnapshot);\n    }\n  }\n  /**\n   * Internal document sync listener\n   *\n   * @param event\n   * @private\n   */\n\n\n  _onDocumentSyncEvent(event) {\n    if (event.error) {\n      SharedEventEmitter.emit(getAppEventName(this, `onDocumentSnapshotError:${event.listenerId}`), event);\n    } else {\n      SharedEventEmitter.emit(getAppEventName(this, `onDocumentSnapshot:${event.listenerId}`), event.documentSnapshot);\n    }\n  }\n\n}\nexport const statics = {\n  Blob,\n  FieldPath,\n  FieldValue,\n  GeoPoint,\n  Timestamp,\n  CACHE_SIZE_UNLIMITED,\n\n  enableLogging(enabled) {\n    // DEPRECATED: Remove method in v4.1.0\n    console.warn('firebase.firestore.enableLogging is deprecated, use firebase.firestore().setLogLevel instead.');\n    this.setLogLevel(enabled ? 'debug' : 'silent');\n  },\n\n  setLogLevel(logLevel) {\n    if (LogLevels.indexOf(logLevel) === -1) {\n      throw new Error('Argument `logLevel` must be one of: `debug`, `error`, `silent`');\n    }\n\n    if (NativeModules[MODULE_NAME]) {\n      NativeModules[MODULE_NAME].setLogLevel(logLevel);\n    }\n  }\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DynamicLink from \"./DynamicLink\";\nimport { SharedEventEmitter } from \"../../utils/events\";\nimport { getLogger } from \"../../utils/log\";\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport { getNativeModule } from \"../../utils/native\";\nvar NATIVE_EVENTS = ['links_link_received'];\nexport var MODULE_NAME = 'RNFirebaseLinks';\nexport var NAMESPACE = 'links';\nvar Links = function (_ModuleBase) {\n  function Links(app) {\n    var _this2;\n    _classCallCheck(this, Links);\n    _this2 = _callSuper(this, Links, [app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    }]);\n    SharedEventEmitter.addListener('links_link_received', function (link) {\n      SharedEventEmitter.emit('onLink', link);\n    });\n    if (Platform.OS === 'ios') {\n      getNativeModule(_this2).jsInitialised();\n    }\n    return _this2;\n  }\n  _inherits(Links, _ModuleBase);\n  return _createClass(Links, [{\n    key: \"createDynamicLink\",\n    value: function createDynamicLink(link) {\n      if (!(link instanceof DynamicLink)) {\n        return Promise.reject(new Error(`Links:createDynamicLink expects a 'DynamicLink' but got type ${typeof link}`));\n      }\n      try {\n        return getNativeModule(this).createDynamicLink(link.build());\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: \"createShortDynamicLink\",\n    value: function createShortDynamicLink(link, type) {\n      if (!(link instanceof DynamicLink)) {\n        return Promise.reject(new Error(`Links:createShortDynamicLink expects a 'DynamicLink' but got type ${typeof link}`));\n      }\n      try {\n        return getNativeModule(this).createShortDynamicLink(link.build(), type);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }, {\n    key: \"getInitialLink\",\n    value: function getInitialLink() {\n      return getNativeModule(this).getInitialLink();\n    }\n  }, {\n    key: \"onLink\",\n    value: function onLink(listener) {\n      var _this3 = this;\n      getLogger(this).info('Creating onLink listener');\n      SharedEventEmitter.addListener('onLink', listener);\n      return function () {\n        getLogger(_this3).info('Removing onLink listener');\n        SharedEventEmitter.removeListener('onLink', listener);\n      };\n    }\n  }]);\n}(ModuleBase);\nexport { Links as default };\nexport var statics = {\n  DynamicLink: DynamicLink\n};","map":{"version":3,"names":["DynamicLink","SharedEventEmitter","getLogger","ModuleBase","getNativeModule","NATIVE_EVENTS","MODULE_NAME","NAMESPACE","Links","_ModuleBase","app","_this2","_classCallCheck","_callSuper","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","addListener","link","emit","Platform","OS","jsInitialised","_inherits","_createClass","key","value","createDynamicLink","Promise","reject","Error","build","error","createShortDynamicLink","type","getInitialLink","onLink","listener","_this3","info","removeListener","default","statics"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/links/index.js"],"sourcesContent":["/**\n * \n * Dynamic Links representation wrapper\n */\nimport { Platform } from 'react-native';\nimport DynamicLink from './DynamicLink';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getLogger } from '../../utils/log';\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nconst NATIVE_EVENTS = ['links_link_received'];\nexport const MODULE_NAME = 'RNFirebaseLinks';\nexport const NAMESPACE = 'links';\n/**\n * @class Links\n */\n\nexport default class Links extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    SharedEventEmitter.addListener( // sub to internal native event - this fans out to\n    // public event name: onMessage\n    'links_link_received', link => {\n      SharedEventEmitter.emit('onLink', link);\n    }); // Tell the native module that we're ready to receive events\n\n    if (Platform.OS === 'ios') {\n      getNativeModule(this).jsInitialised();\n    }\n  }\n  /**\n   * Create long Dynamic Link from parameters\n   * @param parameters\n   * @returns {Promise.<string>}\n   */\n\n\n  createDynamicLink(link) {\n    if (!(link instanceof DynamicLink)) {\n      return Promise.reject(new Error(`Links:createDynamicLink expects a 'DynamicLink' but got type ${typeof link}`));\n    }\n\n    try {\n      return getNativeModule(this).createDynamicLink(link.build());\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * Create short Dynamic Link from parameters\n   * @param parameters\n   * @returns {Promise.<string>}\n   */\n\n\n  createShortDynamicLink(link, type) {\n    if (!(link instanceof DynamicLink)) {\n      return Promise.reject(new Error(`Links:createShortDynamicLink expects a 'DynamicLink' but got type ${typeof link}`));\n    }\n\n    try {\n      return getNativeModule(this).createShortDynamicLink(link.build(), type);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  /**\n   * Returns the link that triggered application open\n   * @returns {Promise.<string>}\n   */\n\n\n  getInitialLink() {\n    return getNativeModule(this).getInitialLink();\n  }\n  /**\n   * Subscribe to dynamic links\n   * @param listener\n   * @returns {Function}\n   */\n\n\n  onLink(listener) {\n    getLogger(this).info('Creating onLink listener');\n    SharedEventEmitter.addListener('onLink', listener);\n    return () => {\n      getLogger(this).info('Removing onLink listener');\n      SharedEventEmitter.removeListener('onLink', listener);\n    };\n  }\n\n}\nexport const statics = {\n  DynamicLink\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
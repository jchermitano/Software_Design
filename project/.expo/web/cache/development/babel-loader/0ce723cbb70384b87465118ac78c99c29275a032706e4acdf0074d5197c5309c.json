{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport DocumentReference from \"./DocumentReference\";\nimport FieldPath from \"./FieldPath\";\nimport Path from \"./Path\";\nimport { isObject, deepGet } from \"../../utils\";\nimport { parseNativeMap } from \"./utils/serialize\";\nvar extractFieldPathData = function extractFieldPathData(data, segments) {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n  var pathValue = data[segments[0]];\n  if (segments.length === 1) {\n    return pathValue;\n  }\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\nvar DocumentSnapshot = function () {\n  function DocumentSnapshot(firestore, nativeData) {\n    var _this = this;\n    _classCallCheck(this, DocumentSnapshot);\n    this.data = function () {\n      return _this._data;\n    };\n    this.get = function (fieldPath) {\n      if (fieldPath instanceof FieldPath) {\n        return extractFieldPathData(_this._data, fieldPath._segments);\n      }\n      return deepGet(_this._data, fieldPath, '.');\n    };\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n  return _createClass(DocumentSnapshot, [{\n    key: \"exists\",\n    get: function get() {\n      return this._data !== undefined;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._ref.id;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return this._metadata;\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this._ref;\n    }\n  }]);\n}();\nexport { DocumentSnapshot as default };","map":{"version":3,"names":["DocumentReference","FieldPath","Path","isObject","deepGet","parseNativeMap","extractFieldPathData","data","segments","undefined","pathValue","length","slice","DocumentSnapshot","firestore","nativeData","_this","_classCallCheck","_data","get","fieldPath","_segments","_metadata","metadata","_ref","fromName","path","_createClass","key","id","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/DocumentSnapshot.js"],"sourcesContent":["/**\n * \n * DocumentSnapshot representation wrapper\n */\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport Path from './Path';\nimport { isObject, deepGet } from '../../utils';\nimport { parseNativeMap } from './utils/serialize';\n\nconst extractFieldPathData = (data, segments) => {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n\n  const pathValue = data[segments[0]];\n\n  if (segments.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n/**\n * @class DocumentSnapshot\n */\n\n\nexport default class DocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n\n  get exists() {\n    return this._data !== undefined;\n  }\n\n  get id() {\n    return this._ref.id;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  data = () => this._data;\n  get = fieldPath => {\n    if (fieldPath instanceof FieldPath) {\n      return extractFieldPathData(this._data, fieldPath._segments);\n    }\n\n    return deepGet(this._data, fieldPath, '.');\n  };\n}"],"mappings":";;AAIA,OAAOA,iBAAiB;AACxB,OAAOC,SAAS;AAChB,OAAOC,IAAI;AACX,SAASC,QAAQ,EAAEC,OAAO;AAC1B,SAASC,cAAc;AAEvB,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,IAAI,EAAEC,QAAQ,EAAK;EAC/C,IAAI,CAACD,IAAI,IAAI,CAACJ,QAAQ,CAACI,IAAI,CAAC,EAAE;IAC5B,OAAOE,SAAS;EAClB;EAEA,IAAMC,SAAS,GAAGH,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEnC,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;IACzB,OAAOD,SAAS;EAClB;EAEA,OAAOJ,oBAAoB,CAACI,SAAS,EAAEF,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC;AAAC,IAMmBC,gBAAgB;EACnC,SAAAA,iBAAYC,SAAS,EAAEC,UAAU,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,gBAAA;IAAA,KAsBnCN,IAAI,GAAG;MAAA,OAAMS,KAAI,CAACE,KAAK;IAAA;IAAA,KACvBC,GAAG,GAAG,UAAAC,SAAS,EAAI;MACjB,IAAIA,SAAS,YAAYnB,SAAS,EAAE;QAClC,OAAOK,oBAAoB,CAACU,KAAI,CAACE,KAAK,EAAEE,SAAS,CAACC,SAAS,CAAC;MAC9D;MAEA,OAAOjB,OAAO,CAACY,KAAI,CAACE,KAAK,EAAEE,SAAS,EAAE,GAAG,CAAC;IAC5C,CAAC;IA5BC,IAAI,CAACF,KAAK,GAAGb,cAAc,CAACS,SAAS,EAAEC,UAAU,CAACR,IAAI,CAAC;IACvD,IAAI,CAACe,SAAS,GAAGP,UAAU,CAACQ,QAAQ;IACpC,IAAI,CAACC,IAAI,GAAG,IAAIxB,iBAAiB,CAACc,SAAS,EAAEZ,IAAI,CAACuB,QAAQ,CAACV,UAAU,CAACW,IAAI,CAAC,CAAC;EAC9E;EAAC,OAAAC,YAAA,CAAAd,gBAAA;IAAAe,GAAA;IAAAT,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACD,KAAK,KAAKT,SAAS;IACjC;EAAC;IAAAmB,GAAA;IAAAT,GAAA,EAED,SAAAA,IAAA,EAAS;MACP,OAAO,IAAI,CAACK,IAAI,CAACK,EAAE;IACrB;EAAC;IAAAD,GAAA;IAAAT,GAAA,EAED,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACG,SAAS;IACvB;EAAC;IAAAM,GAAA;IAAAT,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,OAAO,IAAI,CAACK,IAAI;IAClB;EAAC;AAAA;AAAA,SArBkBX,gBAAgB,IAAAiB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
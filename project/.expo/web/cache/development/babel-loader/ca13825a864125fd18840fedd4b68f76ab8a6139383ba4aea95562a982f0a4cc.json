{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(_this, derived, args) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      return !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (e) {\n      return false;\n    }\n  }\n  derived = _getPrototypeOf(derived);\n  return _possibleConstructorReturn(_this, isNativeReflectConstruct() ? Reflect.construct(derived, args || [], _getPrototypeOf(_this).constructor) : derived.apply(_this, args));\n}\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StorageRef from \"./reference\";\nimport { getAppEventName, SharedEventEmitter } from \"../../utils/events\";\nimport { getLogger } from \"../../utils/log\";\nimport { stripTrailingSlash } from \"../../utils\";\nimport ModuleBase from \"../../utils/ModuleBase\";\nimport { getNativeModule } from \"../../utils/native\";\nvar FirebaseStorage = NativeModules.RNFirebaseStorage;\nvar NATIVE_EVENTS = ['storage_event', 'storage_error'];\nexport var MODULE_NAME = 'RNFirebaseStorage';\nexport var NAMESPACE = 'storage';\nvar Storage = function (_ModuleBase) {\n  function Storage(app) {\n    var _this2;\n    _classCallCheck(this, Storage);\n    _this2 = _callSuper(this, Storage, [app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    }]);\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'storage_event'), _this2._handleStorageEvent.bind(_this2));\n    SharedEventEmitter.addListener(getAppEventName(_this2, 'storage_error'), _this2._handleStorageEvent.bind(_this2));\n    return _this2;\n  }\n  _inherits(Storage, _ModuleBase);\n  return _createClass(Storage, [{\n    key: \"ref\",\n    value: function ref(path) {\n      return new StorageRef(this, path);\n    }\n  }, {\n    key: \"refFromURL\",\n    value: function refFromURL(url) {\n      return new StorageRef(this, `url::${url}`);\n    }\n  }, {\n    key: \"setMaxOperationRetryTime\",\n    value: function setMaxOperationRetryTime(time) {\n      getNativeModule(this).setMaxOperationRetryTime(time);\n    }\n  }, {\n    key: \"setMaxUploadRetryTime\",\n    value: function setMaxUploadRetryTime(time) {\n      getNativeModule(this).setMaxUploadRetryTime(time);\n    }\n  }, {\n    key: \"setMaxDownloadRetryTime\",\n    value: function setMaxDownloadRetryTime(time) {\n      getNativeModule(this).setMaxDownloadRetryTime(time);\n    }\n  }, {\n    key: \"_getSubEventName\",\n    value: function _getSubEventName(path, eventName) {\n      return getAppEventName(this, `${path}-${eventName}`);\n    }\n  }, {\n    key: \"_handleStorageEvent\",\n    value: function _handleStorageEvent(event) {\n      var path = event.path,\n        eventName = event.eventName;\n      var body = event.body || {};\n      getLogger(this).debug('_handleStorageEvent: ', path, eventName, body);\n      SharedEventEmitter.emit(this._getSubEventName(path, eventName), body);\n    }\n  }, {\n    key: \"_handleStorageError\",\n    value: function _handleStorageError(err) {\n      var path = err.path,\n        eventName = err.eventName;\n      var body = err.body || {};\n      getLogger(this).debug('_handleStorageError ->', err);\n      SharedEventEmitter.emit(this._getSubEventName(path, eventName), body);\n    }\n  }, {\n    key: \"_addListener\",\n    value: function _addListener(path, eventName, cb) {\n      SharedEventEmitter.addListener(this._getSubEventName(path, eventName), cb);\n    }\n  }, {\n    key: \"_removeListener\",\n    value: function _removeListener(path, eventName, origCB) {\n      SharedEventEmitter.removeListener(this._getSubEventName(path, eventName), origCB);\n    }\n  }]);\n}(ModuleBase);\nexport { Storage as default };\nexport var statics = {\n  TaskEvent: {\n    STATE_CHANGED: 'state_changed'\n  },\n  TaskState: {\n    RUNNING: 'running',\n    PAUSED: 'paused',\n    SUCCESS: 'success',\n    CANCELLED: 'cancelled',\n    ERROR: 'error'\n  },\n  Native: FirebaseStorage ? {\n    MAIN_BUNDLE_PATH: stripTrailingSlash(FirebaseStorage.MAIN_BUNDLE_PATH),\n    CACHES_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.CACHES_DIRECTORY_PATH),\n    DOCUMENT_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.DOCUMENT_DIRECTORY_PATH),\n    EXTERNAL_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.EXTERNAL_DIRECTORY_PATH),\n    EXTERNAL_STORAGE_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.EXTERNAL_STORAGE_DIRECTORY_PATH),\n    TEMP_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.TEMP_DIRECTORY_PATH),\n    LIBRARY_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.LIBRARY_DIRECTORY_PATH),\n    FILETYPE_REGULAR: stripTrailingSlash(FirebaseStorage.FILETYPE_REGULAR),\n    FILETYPE_DIRECTORY: stripTrailingSlash(FirebaseStorage.FILETYPE_DIRECTORY)\n  } : {}\n};","map":{"version":3,"names":["StorageRef","getAppEventName","SharedEventEmitter","getLogger","stripTrailingSlash","ModuleBase","getNativeModule","FirebaseStorage","NativeModules","RNFirebaseStorage","NATIVE_EVENTS","MODULE_NAME","NAMESPACE","Storage","_ModuleBase","app","_this2","_classCallCheck","_callSuper","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","addListener","_handleStorageEvent","bind","_inherits","_createClass","key","value","ref","path","refFromURL","url","setMaxOperationRetryTime","time","setMaxUploadRetryTime","setMaxDownloadRetryTime","_getSubEventName","eventName","event","body","debug","emit","_handleStorageError","err","_addListener","cb","_removeListener","origCB","removeListener","default","statics","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELLED","ERROR","Native","MAIN_BUNDLE_PATH","CACHES_DIRECTORY_PATH","DOCUMENT_DIRECTORY_PATH","EXTERNAL_DIRECTORY_PATH","EXTERNAL_STORAGE_DIRECTORY_PATH","TEMP_DIRECTORY_PATH","LIBRARY_DIRECTORY_PATH","FILETYPE_REGULAR","FILETYPE_DIRECTORY"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/storage/index.js"],"sourcesContent":["/**\n * \n * Storage representation wrapper\n */\nimport { NativeModules } from 'react-native';\nimport StorageRef from './reference';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nimport { getLogger } from '../../utils/log';\nimport { stripTrailingSlash } from '../../utils';\nimport ModuleBase from '../../utils/ModuleBase';\nimport { getNativeModule } from '../../utils/native';\nconst FirebaseStorage = NativeModules.RNFirebaseStorage;\nconst NATIVE_EVENTS = ['storage_event', 'storage_error'];\nexport const MODULE_NAME = 'RNFirebaseStorage';\nexport const NAMESPACE = 'storage';\nexport default class Storage extends ModuleBase {\n  /**\n   *\n   * @param app\n   * @param options\n   */\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    SharedEventEmitter.addListener(getAppEventName(this, 'storage_event'), this._handleStorageEvent.bind(this));\n    SharedEventEmitter.addListener(getAppEventName(this, 'storage_error'), this._handleStorageEvent.bind(this));\n  }\n  /**\n   * Returns a reference for the given path in the default bucket.\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#ref\n   * @param path\n   * @returns {StorageReference}\n   */\n\n\n  ref(path) {\n    return new StorageRef(this, path);\n  }\n  /**\n   * Returns a reference for the given absolute URL.\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#refFromURL\n   * @param url\n   * @returns {StorageReference}\n   */\n\n\n  refFromURL(url) {\n    // TODO don't think this is correct?\n    return new StorageRef(this, `url::${url}`);\n  }\n  /**\n   * setMaxOperationRetryTime\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxOperationRetryTime\n   * @param time The new maximum operation retry time in milliseconds.\n   */\n\n\n  setMaxOperationRetryTime(time) {\n    getNativeModule(this).setMaxOperationRetryTime(time);\n  }\n  /**\n   * setMaxUploadRetryTime\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxUploadRetryTime\n   * @param time The new maximum upload retry time in milliseconds.\n   */\n\n\n  setMaxUploadRetryTime(time) {\n    getNativeModule(this).setMaxUploadRetryTime(time);\n  }\n  /**\n   * setMaxDownloadRetryTime\n   * @url N/A\n   * @param time The new maximum download retry time in milliseconds.\n   */\n\n\n  setMaxDownloadRetryTime(time) {\n    getNativeModule(this).setMaxDownloadRetryTime(time);\n  }\n  /**\n   * INTERNALS\n   */\n\n\n  _getSubEventName(path, eventName) {\n    return getAppEventName(this, `${path}-${eventName}`);\n  }\n\n  _handleStorageEvent(event) {\n    const {\n      path,\n      eventName\n    } = event;\n    const body = event.body || {};\n    getLogger(this).debug('_handleStorageEvent: ', path, eventName, body);\n    SharedEventEmitter.emit(this._getSubEventName(path, eventName), body);\n  }\n\n  _handleStorageError(err) {\n    const {\n      path,\n      eventName\n    } = err;\n    const body = err.body || {};\n    getLogger(this).debug('_handleStorageError ->', err);\n    SharedEventEmitter.emit(this._getSubEventName(path, eventName), body);\n  }\n\n  _addListener(path, eventName, cb) {\n    SharedEventEmitter.addListener(this._getSubEventName(path, eventName), cb);\n  }\n\n  _removeListener(path, eventName, origCB) {\n    SharedEventEmitter.removeListener(this._getSubEventName(path, eventName), origCB);\n  }\n\n}\nexport const statics = {\n  TaskEvent: {\n    STATE_CHANGED: 'state_changed'\n  },\n  TaskState: {\n    RUNNING: 'running',\n    PAUSED: 'paused',\n    SUCCESS: 'success',\n    CANCELLED: 'cancelled',\n    ERROR: 'error'\n  },\n  Native: FirebaseStorage ? {\n    MAIN_BUNDLE_PATH: stripTrailingSlash(FirebaseStorage.MAIN_BUNDLE_PATH),\n    CACHES_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.CACHES_DIRECTORY_PATH),\n    DOCUMENT_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.DOCUMENT_DIRECTORY_PATH),\n    EXTERNAL_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.EXTERNAL_DIRECTORY_PATH),\n    EXTERNAL_STORAGE_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.EXTERNAL_STORAGE_DIRECTORY_PATH),\n    TEMP_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.TEMP_DIRECTORY_PATH),\n    LIBRARY_DIRECTORY_PATH: stripTrailingSlash(FirebaseStorage.LIBRARY_DIRECTORY_PATH),\n    FILETYPE_REGULAR: stripTrailingSlash(FirebaseStorage.FILETYPE_REGULAR),\n    FILETYPE_DIRECTORY: stripTrailingSlash(FirebaseStorage.FILETYPE_DIRECTORY)\n  } : {}\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
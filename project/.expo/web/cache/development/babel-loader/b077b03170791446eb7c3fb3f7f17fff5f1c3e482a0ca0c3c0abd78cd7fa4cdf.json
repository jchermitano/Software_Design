{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db } from \"../config.js\";\nimport { ref, push, set } from 'firebase/database';\nimport moment from 'moment';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddData = function AddData() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    variety = _useState2[0],\n    setVariety = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ripeness = _useState4[0],\n    setRipeness = _useState4[1];\n  var dataAddOn = function dataAddOn() {\n    var formattedDate = moment(new Date()).format('YYYY-MM-DD / HH:mm:ss');\n    var newDataRef = push(ref(db));\n    set(newDataRef, {\n      variety: variety,\n      ripeness: ripeness,\n      'date/time': formattedDate\n    });\n    setVariety('');\n    setRipeness('');\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Input Variety\",\n      value: variety,\n      onChangeText: function onChangeText(text) {\n        return setVariety(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Input Ripeness(Ripe, Unripe, Overripe)\",\n      value: ripeness,\n      onChangeText: function onChangeText(text) {\n        return setRipeness(text);\n      },\n      style: styles.input\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: dataAddOn\n    })]\n  });\n};\nexport default AddData;\nvar styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 10,\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","db","ref","push","set","moment","jsx","_jsx","jsxs","_jsxs","AddData","_useState","_useState2","_slicedToArray","variety","setVariety","_useState3","_useState4","ripeness","setRipeness","dataAddOn","formattedDate","Date","format","newDataRef","children","placeholder","value","onChangeText","text","style","styles","input","title","onPress","create","borderWidth","borderColor","margin","padding","fontSize","borderRadius"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\nimport { db } from '../config.js';\nimport { ref, push, set } from 'firebase/database';\nimport moment from 'moment';\n\nconst AddData = () => {\n  const [variety, setVariety] = useState('');\n  const [ripeness, setRipeness] = useState('');\n\n\n  const dataAddOn = () => {\n    const formattedDate = moment(new Date()).format('YYYY-MM-DD / HH:mm:ss');\n    const newDataRef = push(ref(db));\n    set(newDataRef, {\n      variety: variety,\n      ripeness: ripeness,\n      'date/time': formattedDate,\n    });\n    setVariety('');\n    setRipeness('');\n  };\n\n  return (\n    <View>\n      <TextInput\n        placeholder='Input Variety'\n        value={variety}\n        onChangeText={(text) => setVariety(text)}\n        style={styles.input}\n      />\n      <TextInput\n        placeholder='Input Ripeness(Ripe, Unripe, Overripe)'\n        value={ripeness}\n        onChangeText={(text) => setRipeness(text)}\n        style={styles.input}\n      />\n      <Button title='Submit' onPress={dataAddOn} />\n    </View>\n  );\n};\n\nexport default AddData;\n\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 10,\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 5,\n  },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,EAAE;AACX,SAASC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE5B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAA8Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAG5B,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB,IAAMC,aAAa,GAAGhB,MAAM,CAAC,IAAIiB,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,uBAAuB,CAAC;IACxE,IAAMC,UAAU,GAAGrB,IAAI,CAACD,GAAG,CAACD,EAAE,CAAC,CAAC;IAChCG,GAAG,CAACoB,UAAU,EAAE;MACdV,OAAO,EAAEA,OAAO;MAChBI,QAAQ,EAAEA,QAAQ;MAClB,WAAW,EAAEG;IACf,CAAC,CAAC;IACFN,UAAU,CAAC,EAAE,CAAC;IACdI,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,OACEV,KAAA,CAACZ,IAAI;IAAA4B,QAAA,GACHlB,IAAA,CAACT,SAAS;MACR4B,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAEb,OAAQ;MACfc,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKd,UAAU,CAACc,IAAI,CAAC;MAAA,CAAC;MACzCC,KAAK,EAAEC,MAAM,CAACC;IAAM,CACrB,CAAC,EACFzB,IAAA,CAACT,SAAS;MACR4B,WAAW,EAAC,wCAAwC;MACpDC,KAAK,EAAET,QAAS;MAChBU,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKV,WAAW,CAACU,IAAI,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAEC,MAAM,CAACC;IAAM,CACrB,CAAC,EACFzB,IAAA,CAACR,MAAM;MAACkC,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAEd;IAAU,CAAE,CAAC;EAAA,CACzC,CAAC;AAEX,CAAC;AAED,eAAeV,OAAO;AAEtB,IAAMqB,MAAM,GAAG/B,UAAU,CAACmC,MAAM,CAAC;EAC/BH,KAAK,EAAE;IACLI,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,OAAO;IACpBC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
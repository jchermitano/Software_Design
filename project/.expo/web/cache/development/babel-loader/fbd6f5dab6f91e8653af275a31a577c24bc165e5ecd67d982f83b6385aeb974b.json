{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db } from \"../config.js\";\nimport { ref, push, set } from 'firebase/database';\nimport moment from 'moment';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddData = function AddData() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    variety = _useState2[0],\n    setVariety = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ripeness = _useState4[0],\n    setRipeness = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    date = _useState6[0],\n    setDate = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    time = _useState8[0],\n    setTime = _useState8[1];\n  var dataAddOn = function dataAddOn() {\n    var formattedDate = moment(new Date(date)).format('YYYY-MM-DD');\n    var formattedTime = moment(new Date(time)).format('HH:mm:ss');\n    var newDataRef = push(ref(db));\n    set(newDataRef, {\n      variety: variety,\n      ripeness: ripeness,\n      date: formattedDate,\n      time: formattedTime\n    });\n    setVariety('');\n    setRipeness('');\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Input Variety\",\n      value: variety,\n      onChangeText: function onChangeText(text) {\n        return setVariety(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Input Ripeness(Ripe, Unripe, Overripe)\",\n      value: ripeness,\n      onChangeText: function onChangeText(text) {\n        return setRipeness(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Input Date (YYYY-MM-DD)\",\n      value: date,\n      onChangeText: function onChangeText(text) {\n        return setDate(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Input Time (HH:mm:ss)\",\n      value: time,\n      onChangeText: function onChangeText(text) {\n        return setTime(text);\n      },\n      style: styles.input\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: dataAddOn\n    })]\n  });\n};\nexport default AddData;\nvar styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 10,\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","db","ref","push","set","moment","jsx","_jsx","jsxs","_jsxs","AddData","_useState","_useState2","_slicedToArray","variety","setVariety","_useState3","_useState4","ripeness","setRipeness","_useState5","_useState6","date","setDate","_useState7","_useState8","time","setTime","dataAddOn","formattedDate","Date","format","formattedTime","newDataRef","children","placeholder","value","onChangeText","text","style","styles","input","title","onPress","create","borderWidth","borderColor","margin","padding","fontSize","borderRadius"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\nimport { db } from '../config.js';\nimport { ref, push, set } from 'firebase/database';\nimport moment from 'moment';\n\nconst AddData = () => {\n  const [variety, setVariety] = useState('');\n  const [ripeness, setRipeness] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n\n  const dataAddOn = () => {\n    const formattedDate = moment(new Date(date)).format('YYYY-MM-DD');\n    const formattedTime = moment(new Date(time)).format('HH:mm:ss');\n    const newDataRef = push(ref(db));\n    set(newDataRef, {\n      variety: variety,\n      ripeness: ripeness,\n      date: formattedDate,\n      time: formattedTime,\n    });\n    setVariety('');\n    setRipeness('');\n\n  };\n\n  return (\n    <View>\n      <TextInput\n        placeholder='Input Variety'\n        value={variety}\n        onChangeText={(text) => setVariety(text)}\n        style={styles.input}\n      />\n      <TextInput\n        placeholder='Input Ripeness(Ripe, Unripe, Overripe)'\n        value={ripeness}\n        onChangeText={(text) => setRipeness(text)}\n        style={styles.input}\n      />\n      <TextInput\n        placeholder='Input Date (YYYY-MM-DD)'\n        value={date}\n        onChangeText={(text) => setDate(text)}\n         style={styles.input}\n      />\n      <TextInput\n        placeholder='Input Time (HH:mm:ss)'\n        value={time}\n        onChangeText={(text) => setTime(text)}\n        style={styles.input}\n      />\n      <Button title='Submit' onPress={dataAddOn} />\n    </View>\n  );\n};\n\nexport default AddData;\n\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 10,\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 5,\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
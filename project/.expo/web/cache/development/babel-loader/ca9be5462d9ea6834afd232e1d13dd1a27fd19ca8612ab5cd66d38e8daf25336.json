{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { parseUpdateArgs } from \"./utils\";\nimport { buildNativeMap } from \"./utils/serialize\";\nimport { getNativeModule } from \"../../utils/native\";\nvar WriteBatch = function () {\n  function WriteBatch(firestore) {\n    _classCallCheck(this, WriteBatch);\n    this._firestore = firestore;\n    this._writes = [];\n  }\n  return _createClass(WriteBatch, [{\n    key: \"commit\",\n    value: function commit() {\n      return getNativeModule(this._firestore).documentBatch(this._writes);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(docRef) {\n      this._writes.push({\n        path: docRef.path,\n        type: 'DELETE'\n      });\n      return this;\n    }\n  }, {\n    key: \"set\",\n    value: function set(docRef, data, options) {\n      var nativeData = buildNativeMap(data);\n      this._writes.push({\n        data: nativeData,\n        options: options,\n        path: docRef.path,\n        type: 'SET'\n      });\n      return this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(docRef) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      var data = parseUpdateArgs(args, 'WriteBatch.update');\n      this._writes.push({\n        data: buildNativeMap(data),\n        path: docRef.path,\n        type: 'UPDATE'\n      });\n      return this;\n    }\n  }]);\n}();\nexport { WriteBatch as default };","map":{"version":3,"names":["parseUpdateArgs","buildNativeMap","getNativeModule","WriteBatch","firestore","_classCallCheck","_firestore","_writes","_createClass","key","value","commit","documentBatch","_delete","docRef","push","path","type","set","data","options","nativeData","update","_len","arguments","length","args","Array","_key","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/firestore/WriteBatch.js"],"sourcesContent":["/**\n * \n * WriteBatch representation wrapper\n */\nimport { parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\nimport { getNativeModule } from '../../utils/native';\n\n/**\n * @class WriteBatch\n */\nexport default class WriteBatch {\n  constructor(firestore) {\n    this._firestore = firestore;\n    this._writes = [];\n  }\n\n  commit() {\n    return getNativeModule(this._firestore).documentBatch(this._writes);\n  }\n\n  delete(docRef) {\n    // TODO: Validation\n    // validate.isDocumentReference('docRef', docRef);\n    // validate.isOptionalPrecondition('deleteOptions', deleteOptions);\n    this._writes.push({\n      path: docRef.path,\n      type: 'DELETE'\n    });\n\n    return this;\n  }\n\n  set(docRef, data, options) {\n    // TODO: Validation\n    // validate.isDocumentReference('docRef', docRef);\n    // validate.isDocument('data', data);\n    // validate.isOptionalPrecondition('options', writeOptions);\n    const nativeData = buildNativeMap(data);\n\n    this._writes.push({\n      data: nativeData,\n      options,\n      path: docRef.path,\n      type: 'SET'\n    });\n\n    return this;\n  }\n\n  update(docRef, ...args) {\n    // TODO: Validation\n    // validate.isDocumentReference('docRef', docRef);\n    const data = parseUpdateArgs(args, 'WriteBatch.update');\n\n    this._writes.push({\n      data: buildNativeMap(data),\n      path: docRef.path,\n      type: 'UPDATE'\n    });\n\n    return this;\n  }\n\n}"],"mappings":";;AAIA,SAASA,eAAe;AACxB,SAASC,cAAc;AACvB,SAASC,eAAe;AAA6B,IAKhCC,UAAU;EAC7B,SAAAA,WAAYC,SAAS,EAAE;IAAAC,eAAA,OAAAF,UAAA;IACrB,IAAI,CAACG,UAAU,GAAGF,SAAS;IAC3B,IAAI,CAACG,OAAO,GAAG,EAAE;EACnB;EAAC,OAAAC,YAAA,CAAAL,UAAA;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAA,EAAS;MACP,OAAOT,eAAe,CAAC,IAAI,CAACI,UAAU,CAAC,CAACM,aAAa,CAAC,IAAI,CAACL,OAAO,CAAC;IACrE;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAG,QAAOC,MAAM,EAAE;MAIb,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC;QAChBC,IAAI,EAAEF,MAAM,CAACE,IAAI;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,OAAO,IAAI;IACb;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAQ,IAAIJ,MAAM,EAAEK,IAAI,EAAEC,OAAO,EAAE;MAKzB,IAAMC,UAAU,GAAGpB,cAAc,CAACkB,IAAI,CAAC;MAEvC,IAAI,CAACZ,OAAO,CAACQ,IAAI,CAAC;QAChBI,IAAI,EAAEE,UAAU;QAChBD,OAAO,EAAPA,OAAO;QACPJ,IAAI,EAAEF,MAAM,CAACE,IAAI;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,OAAO,IAAI;IACb;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAY,OAAOR,MAAM,EAAW;MAAA,SAAAS,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MAGpB,IAAMT,IAAI,GAAGnB,eAAe,CAAC0B,IAAI,EAAE,mBAAmB,CAAC;MAEvD,IAAI,CAACnB,OAAO,CAACQ,IAAI,CAAC;QAChBI,IAAI,EAAElB,cAAc,CAACkB,IAAI,CAAC;QAC1BH,IAAI,EAAEF,MAAM,CAACE,IAAI;QACjBC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,OAAO,IAAI;IACb;EAAC;AAAA;AAAA,SAnDkBd,UAAU,IAAA0B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
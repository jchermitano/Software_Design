{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { statics } from \"./\";\nimport AdRequest from \"./AdRequest\";\nimport { SharedEventEmitter } from \"../../utils/events\";\nimport { getNativeModule } from \"../../utils/native\";\nimport { nativeToJSError } from \"../../utils\";\nvar subscriptions = [];\nvar Interstitial = function () {\n  function Interstitial(admob, adUnit) {\n    var _this = this;\n    _classCallCheck(this, Interstitial);\n    this._onInterstitialEvent = function (event) {\n      var eventType = `interstitial:${_this.adUnit}:${event.type}`;\n      var emitData = Object.assign({}, event);\n      switch (event.type) {\n        case 'onAdLoaded':\n          _this.loaded = true;\n          break;\n        case 'onAdFailedToLoad':\n          emitData = nativeToJSError(event.payload.code, event.payload.message);\n          emitData.type = event.type;\n          break;\n        default:\n      }\n      SharedEventEmitter.emit(eventType, emitData);\n      SharedEventEmitter.emit(`interstitial:${_this.adUnit}:*`, emitData);\n    };\n    if (Platform.OS === 'ios') {\n      getNativeModule(admob).clearInterstitial(adUnit);\n    }\n    for (var i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`interstitial_${adUnit}`);\n    SharedEventEmitter.addListener(`interstitial_${adUnit}`, this._onInterstitialEvent);\n  }\n  return _createClass(Interstitial, [{\n    key: \"loadAd\",\n    value: function loadAd(request) {\n      var adRequest = request;\n      if (!adRequest || !Object.keys(adRequest)) {\n        adRequest = new AdRequest().addTestDevice().build();\n      }\n      return getNativeModule(this._admob).interstitialLoadAd(this.adUnit, adRequest);\n    }\n  }, {\n    key: \"isLoaded\",\n    value: function isLoaded() {\n      return this.loaded;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.loaded) {\n        getNativeModule(this._admob).interstitialShowAd(this.adUnit);\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventType, listenerCb) {\n      if (!statics.EventTypes[eventType]) {\n        console.warn(`Invalid event type provided, must be one of: ${Object.keys(statics.EventTypes).join(', ')}`);\n        return null;\n      }\n      var sub = SharedEventEmitter.addListener(`interstitial:${this.adUnit}:${eventType}`, listenerCb);\n      subscriptions.push(sub);\n      return sub;\n    }\n  }]);\n}();\nexport { Interstitial as default };","map":{"version":3,"names":["statics","AdRequest","SharedEventEmitter","getNativeModule","nativeToJSError","subscriptions","Interstitial","admob","adUnit","_this","_classCallCheck","_onInterstitialEvent","event","eventType","type","emitData","Object","assign","loaded","payload","code","message","emit","Platform","OS","clearInterstitial","i","len","length","remove","_admob","removeAllListeners","addListener","_createClass","key","value","loadAd","request","adRequest","keys","addTestDevice","build","interstitialLoadAd","isLoaded","show","interstitialShowAd","on","listenerCb","EventTypes","console","warn","join","sub","push","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/admob/Interstitial.js"],"sourcesContent":["import { Platform } from 'react-native';\nimport { statics } from './';\nimport AdRequest from './AdRequest';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getNativeModule } from '../../utils/native';\nimport { nativeToJSError } from '../../utils';\nlet subscriptions = [];\nexport default class Interstitial {\n  constructor(admob, adUnit) {\n    // Interstitials on iOS require a new instance each time\n    if (Platform.OS === 'ios') {\n      getNativeModule(admob).clearInterstitial(adUnit);\n    }\n\n    for (let i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`interstitial_${adUnit}`);\n    SharedEventEmitter.addListener(`interstitial_${adUnit}`, this._onInterstitialEvent);\n  }\n  /**\n   * Handle a JS emit event\n   * @param event\n   * @private\n   */\n\n\n  _onInterstitialEvent = event => {\n    const eventType = `interstitial:${this.adUnit}:${event.type}`;\n    let emitData = Object.assign({}, event);\n\n    switch (event.type) {\n      case 'onAdLoaded':\n        this.loaded = true;\n        break;\n\n      case 'onAdFailedToLoad':\n        emitData = nativeToJSError(event.payload.code, event.payload.message);\n        emitData.type = event.type;\n        break;\n\n      default:\n    }\n\n    SharedEventEmitter.emit(eventType, emitData);\n    SharedEventEmitter.emit(`interstitial:${this.adUnit}:*`, emitData);\n  };\n  /**\n   * Load an ad with an instance of AdRequest\n   * @param request\n   * @returns {*}\n   */\n\n  loadAd(request) {\n    let adRequest = request;\n\n    if (!adRequest || !Object.keys(adRequest)) {\n      adRequest = new AdRequest().addTestDevice().build();\n    }\n\n    return getNativeModule(this._admob).interstitialLoadAd(this.adUnit, adRequest);\n  }\n  /**\n   * Return a local instance of isLoaded\n   * @returns {boolean}\n   */\n\n\n  isLoaded() {\n    return this.loaded;\n  }\n  /**\n   * Show the advert - will only show if loaded\n   * @returns {*}\n   */\n\n\n  show() {\n    if (this.loaded) {\n      getNativeModule(this._admob).interstitialShowAd(this.adUnit);\n    }\n  }\n  /**\n   * Listen to an Ad event\n   * @param eventType\n   * @param listenerCb\n   * @returns {null}\n   */\n\n\n  on(eventType, listenerCb) {\n    if (!statics.EventTypes[eventType]) {\n      console.warn(`Invalid event type provided, must be one of: ${Object.keys(statics.EventTypes).join(', ')}`);\n      return null;\n    }\n\n    const sub = SharedEventEmitter.addListener(`interstitial:${this.adUnit}:${eventType}`, listenerCb);\n    subscriptions.push(sub);\n    return sub;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
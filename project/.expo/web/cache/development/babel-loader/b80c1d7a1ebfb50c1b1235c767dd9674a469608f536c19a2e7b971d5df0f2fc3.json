{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport INTERNALS from \"../../../utils/internals\";\nimport { SharedEventEmitter } from \"../../../utils/events\";\nimport { generatePushID, isFunction, isAndroid, isIOS, isString, nativeToJSError } from \"../../../utils\";\nimport { getNativeModule } from \"../../../utils/native\";\nvar PhoneAuthListener = function () {\n  function PhoneAuthListener(auth, phoneNumber, timeout, forceResend) {\n    _classCallCheck(this, PhoneAuthListener);\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._credential = null;\n    this._timeout = timeout || 20;\n    this._forceResending = forceResend || false;\n    this._phoneAuthRequestKey = generatePushID();\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestKey}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestKey}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestKey}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestKey}:onCodeAutoRetrievalTimeout`\n    };\n    this._publicEvents = {\n      error: `phone:auth:${this._phoneAuthRequestKey}:error`,\n      event: `phone:auth:${this._phoneAuthRequestKey}:event`,\n      success: `phone:auth:${this._phoneAuthRequestKey}:success`\n    };\n    this._subscribeToEvents();\n    if (isAndroid) {\n      getNativeModule(this._auth).verifyPhoneNumber(phoneNumber, this._phoneAuthRequestKey, this._timeout, this._forceResending);\n    }\n    if (isIOS) {\n      getNativeModule(this._auth).verifyPhoneNumber(phoneNumber, this._phoneAuthRequestKey);\n    }\n  }\n  return _createClass(PhoneAuthListener, [{\n    key: \"_subscribeToEvents\",\n    value: function _subscribeToEvents() {\n      var events = Object.keys(this._internalEvents);\n      for (var i = 0, len = events.length; i < len; i++) {\n        var type = events[i];\n        SharedEventEmitter.once(this._internalEvents[type], this[`_${type}Handler`].bind(this));\n      }\n    }\n  }, {\n    key: \"_addUserObserver\",\n    value: function _addUserObserver(observer) {\n      SharedEventEmitter.addListener(this._publicEvents.event, observer);\n    }\n  }, {\n    key: \"_emitToObservers\",\n    value: function _emitToObservers(snapshot) {\n      SharedEventEmitter.emit(this._publicEvents.event, snapshot);\n    }\n  }, {\n    key: \"_emitToErrorCb\",\n    value: function _emitToErrorCb(snapshot) {\n      var error = snapshot.error;\n      if (this._reject) this._reject(error);\n      SharedEventEmitter.emit(this._publicEvents.error, error);\n    }\n  }, {\n    key: \"_emitToSuccessCb\",\n    value: function _emitToSuccessCb(snapshot) {\n      if (this._resolve) this._resolve(snapshot);\n      SharedEventEmitter.emit(this._publicEvents.success, snapshot);\n    }\n  }, {\n    key: \"_removeAllListeners\",\n    value: function _removeAllListeners() {\n      var _this = this;\n      setTimeout(function () {\n        Object.values(_this._internalEvents).forEach(function (event) {\n          SharedEventEmitter.removeAllListeners(event);\n        });\n        Object.values(_this._publicEvents).forEach(function (publicEvent) {\n          SharedEventEmitter.removeAllListeners(publicEvent);\n        });\n      }, 0);\n    }\n  }, {\n    key: \"_promiseDeferred\",\n    value: function _promiseDeferred() {\n      var _this2 = this;\n      if (!this._promise) {\n        this._promise = new Promise(function (resolve, reject) {\n          _this2._resolve = function (result) {\n            _this2._resolve = null;\n            return resolve(result);\n          };\n          _this2._reject = function (possibleError) {\n            _this2._reject = null;\n            return reject(possibleError);\n          };\n        });\n      }\n    }\n  }, {\n    key: \"_codeSentHandler\",\n    value: function _codeSentHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: null,\n        error: null,\n        state: 'sent'\n      };\n      this._emitToObservers(snapshot);\n      if (isIOS) {\n        this._emitToSuccessCb(snapshot);\n      }\n      if (isAndroid) {}\n    }\n  }, {\n    key: \"_codeAutoRetrievalTimeoutHandler\",\n    value: function _codeAutoRetrievalTimeoutHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: null,\n        error: null,\n        state: 'timeout'\n      };\n      this._emitToObservers(snapshot);\n      this._emitToSuccessCb(snapshot);\n    }\n  }, {\n    key: \"_verificationCompleteHandler\",\n    value: function _verificationCompleteHandler(credential) {\n      var snapshot = {\n        verificationId: credential.verificationId,\n        code: credential.code || null,\n        error: null,\n        state: 'verified'\n      };\n      this._emitToObservers(snapshot);\n      this._emitToSuccessCb(snapshot);\n      this._removeAllListeners();\n    }\n  }, {\n    key: \"_verificationFailedHandler\",\n    value: function _verificationFailedHandler(state) {\n      var snapshot = {\n        verificationId: state.verificationId,\n        code: null,\n        error: null,\n        state: 'error'\n      };\n      var _state$error = state.error,\n        code = _state$error.code,\n        message = _state$error.message,\n        nativeErrorMessage = _state$error.nativeErrorMessage;\n      snapshot.error = nativeToJSError(code, message, {\n        nativeErrorMessage: nativeErrorMessage\n      });\n      this._emitToObservers(snapshot);\n      this._emitToErrorCb(snapshot);\n      this._removeAllListeners();\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, observer, errorCb, successCb) {\n      if (!isString(event)) {\n        throw new Error(INTERNALS.STRINGS.ERROR_MISSING_ARG_NAMED('event', 'string', 'on'));\n      }\n      if (event !== 'state_changed') {\n        throw new Error(INTERNALS.STRINGS.ERROR_ARG_INVALID_VALUE('event', 'state_changed', event));\n      }\n      if (!isFunction(observer)) {\n        throw new Error(INTERNALS.STRINGS.ERROR_MISSING_ARG_NAMED('observer', 'function', 'on'));\n      }\n      this._addUserObserver(observer);\n      if (isFunction(errorCb)) {\n        SharedEventEmitter.once(this._publicEvents.error, errorCb);\n      }\n      if (isFunction(successCb)) {\n        SharedEventEmitter.once(this._publicEvents.success, successCb);\n      }\n      return this;\n    }\n  }, {\n    key: \"then\",\n    value: function then(fn) {\n      this._promiseDeferred();\n      if (this._promise) return this._promise.then.bind(this._promise)(fn);\n      return undefined;\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(fn) {\n      this._promiseDeferred();\n      if (this._promise) return this._promise.catch.bind(this._promise)(fn);\n      return undefined;\n    }\n  }]);\n}();\nexport { PhoneAuthListener as default };","map":{"version":3,"names":["INTERNALS","SharedEventEmitter","generatePushID","isFunction","isAndroid","isIOS","isString","nativeToJSError","getNativeModule","PhoneAuthListener","auth","phoneNumber","timeout","forceResend","_classCallCheck","_auth","_reject","_resolve","_promise","_credential","_timeout","_forceResending","_phoneAuthRequestKey","_internalEvents","codeSent","verificationFailed","verificationComplete","codeAutoRetrievalTimeout","_publicEvents","error","event","success","_subscribeToEvents","verifyPhoneNumber","_createClass","key","value","events","Object","keys","i","len","length","type","once","bind","_addUserObserver","observer","addListener","_emitToObservers","snapshot","emit","_emitToErrorCb","_emitToSuccessCb","_removeAllListeners","_this","setTimeout","values","forEach","removeAllListeners","publicEvent","_promiseDeferred","_this2","Promise","resolve","reject","result","possibleError","_codeSentHandler","credential","verificationId","code","state","_codeAutoRetrievalTimeoutHandler","_verificationCompleteHandler","_verificationFailedHandler","_state$error","message","nativeErrorMessage","on","errorCb","successCb","Error","STRINGS","ERROR_MISSING_ARG_NAMED","ERROR_ARG_INVALID_VALUE","then","fn","undefined","_catch","catch","default"],"sources":["C:/Users/Johnny Hermitano/Documents/GitHub/sofdes_watermelon/project/node_modules/react-native-firebase/dist/modules/auth/phone/PhoneAuthListener.js"],"sourcesContent":["import INTERNALS from '../../../utils/internals';\nimport { SharedEventEmitter } from '../../../utils/events';\nimport { generatePushID, isFunction, isAndroid, isIOS, isString, nativeToJSError } from '../../../utils';\nimport { getNativeModule } from '../../../utils/native';\nexport default class PhoneAuthListener {\n  /**\n   *\n   * @param auth\n   * @param phoneNumber\n   * @param timeout\n   * @param forceResend\n   */\n  constructor(auth, phoneNumber, timeout, forceResend) {\n    this._auth = auth;\n    this._reject = null;\n    this._resolve = null;\n    this._promise = null;\n    this._credential = null;\n    this._timeout = timeout || 20; // 20 secs\n\n    this._forceResending = forceResend || false;\n    this._phoneAuthRequestKey = generatePushID(); // internal events\n\n    this._internalEvents = {\n      codeSent: `phone:auth:${this._phoneAuthRequestKey}:onCodeSent`,\n      verificationFailed: `phone:auth:${this._phoneAuthRequestKey}:onVerificationFailed`,\n      verificationComplete: `phone:auth:${this._phoneAuthRequestKey}:onVerificationComplete`,\n      codeAutoRetrievalTimeout: `phone:auth:${this._phoneAuthRequestKey}:onCodeAutoRetrievalTimeout`\n    }; // user observer events\n\n    this._publicEvents = {\n      // error cb\n      error: `phone:auth:${this._phoneAuthRequestKey}:error`,\n      // observer\n      event: `phone:auth:${this._phoneAuthRequestKey}:event`,\n      // success cb\n      success: `phone:auth:${this._phoneAuthRequestKey}:success`\n    }; // setup internal event listeners\n\n    this._subscribeToEvents(); // start verification flow natively\n\n\n    if (isAndroid) {\n      getNativeModule(this._auth).verifyPhoneNumber(phoneNumber, this._phoneAuthRequestKey, this._timeout, this._forceResending);\n    }\n\n    if (isIOS) {\n      getNativeModule(this._auth).verifyPhoneNumber(phoneNumber, this._phoneAuthRequestKey);\n    }\n  }\n  /**\n   * Subscribes to all EE events on this._internalEvents\n   * @private\n   */\n\n\n  _subscribeToEvents() {\n    const events = Object.keys(this._internalEvents);\n\n    for (let i = 0, len = events.length; i < len; i++) {\n      const type = events[i];\n      SharedEventEmitter.once(this._internalEvents[type], // $FlowExpectedError: Flow doesn't support indexable signatures on classes: https://github.com/facebook/flow/issues/1323\n      this[`_${type}Handler`].bind(this));\n    }\n  }\n  /**\n   * Subscribe a users listener cb to the snapshot events.\n   * @param observer\n   * @private\n   */\n\n\n  _addUserObserver(observer) {\n    SharedEventEmitter.addListener(this._publicEvents.event, observer);\n  }\n  /**\n   * Send a snapshot event to users event observer.\n   * @param snapshot PhoneAuthSnapshot\n   * @private\n   */\n\n\n  _emitToObservers(snapshot) {\n    SharedEventEmitter.emit(this._publicEvents.event, snapshot);\n  }\n  /**\n   * Send a error snapshot event to any subscribed errorCb's\n   * @param snapshot\n   * @private\n   */\n\n\n  _emitToErrorCb(snapshot) {\n    const {\n      error\n    } = snapshot;\n    if (this._reject) this._reject(error);\n    SharedEventEmitter.emit(this._publicEvents.error, error);\n  }\n  /**\n   * Send a success snapshot event to any subscribed completeCb's\n   * @param snapshot\n   * @private\n   */\n\n\n  _emitToSuccessCb(snapshot) {\n    if (this._resolve) this._resolve(snapshot);\n    SharedEventEmitter.emit(this._publicEvents.success, snapshot);\n  }\n  /**\n   * Removes all listeners for this phone auth instance\n   * @private\n   */\n\n\n  _removeAllListeners() {\n    setTimeout(() => {\n      // move to next event loop - not sure if needed\n      // internal listeners\n      Object.values(this._internalEvents).forEach(event => {\n        SharedEventEmitter.removeAllListeners(event);\n      }); // user observer listeners\n\n      Object.values(this._publicEvents).forEach(publicEvent => {\n        SharedEventEmitter.removeAllListeners(publicEvent);\n      });\n    }, 0);\n  }\n  /**\n   * Create a new internal deferred promise, if not already created\n   * @private\n   */\n\n\n  _promiseDeferred() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this._resolve = result => {\n          this._resolve = null;\n          return resolve(result);\n        };\n\n        this._reject = possibleError => {\n          this._reject = null;\n          return reject(possibleError);\n        };\n      });\n    }\n  }\n  /* --------------------------\n   --- INTERNAL EVENT HANDLERS\n   ---------------------------- */\n\n  /**\n   * Internal code sent event handler\n   * @private\n   * @param credential\n   */\n\n\n  _codeSentHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'sent'\n    };\n\n    this._emitToObservers(snapshot);\n\n    if (isIOS) {\n      this._emitToSuccessCb(snapshot);\n    }\n\n    if (isAndroid) {// android can auto retrieve so we don't emit to successCb immediately,\n      // if auto retrieve times out then that will emit to successCb\n    }\n  }\n  /**\n   * Internal code auto retrieve timeout event handler\n   * @private\n   * @param credential\n   */\n\n\n  _codeAutoRetrievalTimeoutHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: null,\n      error: null,\n      state: 'timeout'\n    };\n\n    this._emitToObservers(snapshot);\n\n    this._emitToSuccessCb(snapshot);\n  }\n  /**\n   * Internal verification complete event handler\n   * @param credential\n   * @private\n   */\n\n\n  _verificationCompleteHandler(credential) {\n    const snapshot = {\n      verificationId: credential.verificationId,\n      code: credential.code || null,\n      error: null,\n      state: 'verified'\n    };\n\n    this._emitToObservers(snapshot);\n\n    this._emitToSuccessCb(snapshot);\n\n    this._removeAllListeners();\n  }\n  /**\n   * Internal verification failed event handler\n   * @param state\n   * @private\n   */\n\n\n  _verificationFailedHandler(state) {\n    const snapshot = {\n      verificationId: state.verificationId,\n      code: null,\n      error: null,\n      state: 'error'\n    };\n    const {\n      code,\n      message,\n      nativeErrorMessage\n    } = state.error;\n    snapshot.error = nativeToJSError(code, message, {\n      nativeErrorMessage\n    });\n\n    this._emitToObservers(snapshot);\n\n    this._emitToErrorCb(snapshot);\n\n    this._removeAllListeners();\n  }\n  /* -------------\n   -- PUBLIC API\n   --------------*/\n\n\n  on(event, observer, errorCb, successCb) {\n    if (!isString(event)) {\n      throw new Error(INTERNALS.STRINGS.ERROR_MISSING_ARG_NAMED('event', 'string', 'on'));\n    }\n\n    if (event !== 'state_changed') {\n      throw new Error(INTERNALS.STRINGS.ERROR_ARG_INVALID_VALUE('event', 'state_changed', event));\n    }\n\n    if (!isFunction(observer)) {\n      throw new Error(INTERNALS.STRINGS.ERROR_MISSING_ARG_NAMED('observer', 'function', 'on'));\n    }\n\n    this._addUserObserver(observer);\n\n    if (isFunction(errorCb)) {\n      SharedEventEmitter.once(this._publicEvents.error, errorCb);\n    }\n\n    if (isFunction(successCb)) {\n      SharedEventEmitter.once(this._publicEvents.success, successCb);\n    }\n\n    return this;\n  }\n  /**\n   * Promise .then proxy\n   * @param fn\n   */\n\n\n  then(fn) {\n    this._promiseDeferred(); // $FlowFixMe: Unsure how to annotate `bind` here\n\n\n    if (this._promise) return this._promise.then.bind(this._promise)(fn);\n    return undefined; // will never get here - just to keep flow happy\n  }\n  /**\n   * Promise .catch proxy\n   * @param fn\n   */\n\n\n  catch(fn) {\n    this._promiseDeferred(); // $FlowFixMe: Unsure how to annotate `bind` here\n\n\n    if (this._promise) return this._promise.catch.bind(this._promise)(fn);\n    return undefined; // will never get here - just to keep flow happy\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}